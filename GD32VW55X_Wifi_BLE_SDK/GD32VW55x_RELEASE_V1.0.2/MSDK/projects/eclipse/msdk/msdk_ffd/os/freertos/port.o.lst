   1              		.file	"port.c"
   2              		.option nopic
   3              		.attribute arch, "rv32i2p0_m2p0_a2p0_f2p0_c2p0_b_p0p94"
   4              		.attribute unaligned_access, 0
   5              		.attribute stack_align, 16
   6              		.text
   7              	.Ltext0:
   8              		.cfi_sections	.debug_frame
   9              		.section	.text.vPortRaiseBASEPRI,"ax",@progbits
  10              		.align	1
  11              		.globl	vPortRaiseBASEPRI
  13              	vPortRaiseBASEPRI:
  14              	.LFB365:
  15              		.file 1 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2
   1:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
   2:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * FreeRTOS Kernel V10.3.1
   3:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
   5:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * the Software without restriction, including without limitation the rights to
   8:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * subject to the following conditions:
  11:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
  12:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * copies or substantial portions of the Software.
  14:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
  15:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
  22:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * http://www.FreeRTOS.org
  23:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * http://aws.amazon.com/freertos
  24:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
  25:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * 1 tab == 4 spaces!
  26:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
  27:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  28:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------
  29:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Implementation of functions defined in portable.h for the Nuclei N/NX Processor port.
  30:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *----------------------------------------------------------*/
  31:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  32:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* Scheduler includes. */
  33:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #include <stdio.h>
  34:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #include "FreeRTOS.h"
  35:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #include "task.h"
  36:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #include "gd32vw55x.h"
  37:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  38:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* MPU wrappers includes. */
  39:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #include "mpu_wrappers.h"
  40:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  41:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** //#define ENABLE_KERNEL_DEBUG
  42:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  43:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #ifdef ENABLE_KERNEL_DEBUG
  44:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define FREERTOS_PORT_DEBUG(...)                printf(__VA_ARGS__)
  45:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #else
  46:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define FREERTOS_PORT_DEBUG(...)
  47:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
  48:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  49:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #ifndef configSYSTICK_CLOCK_HZ
  50:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define configSYSTICK_CLOCK_HZ                  configCPU_CLOCK_HZ//SOC_TIMER_FREQ
  51:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
  52:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  53:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #ifndef configKERNEL_INTERRUPT_PRIORITY
  54:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define configKERNEL_INTERRUPT_PRIORITY         0
  55:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
  56:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  57:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #ifndef configMAX_SYSCALL_INTERRUPT_PRIORITY
  58:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** // See function prvCheckMaxSysCallPrio and prvCalcMaxSysCallMTH
  59:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define configMAX_SYSCALL_INTERRUPT_PRIORITY    255
  60:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
  61:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  62:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* Constants required to check the validity of an interrupt priority. */
  63:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define portFIRST_USER_INTERRUPT_NUMBER ( 18 )
  64:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  65:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define SYSTICK_TICK_CONST          (configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ)
  66:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  67:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* Masks off all bits but the ECLIC MTH bits in the MTH register. */
  68:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define portMTH_MASK                ( 0xFFUL )
  69:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  70:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* Constants required to set up the initial stack. */
  71:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define portINITIAL_MSTATUS         ( MSTATUS_MPP | MSTATUS_MPIE | MSTATUS_FS_INITIAL)
  72:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define portINITIAL_EXC_RETURN      ( 0xfffffffd )
  73:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  74:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* The systick is a 64-bit counter. */
  75:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define portMAX_BIT_NUMBER          ( SysTimer_MTIMER_Msk )
  76:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  77:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
  78:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** occurred while the SysTick counter is stopped during tickless idle
  79:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** calculations. */
  80:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define portMISSED_COUNTS_FACTOR    ( 45UL )
  81:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  82:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* Let the user override the pre-loading of the initial LR with the address of
  83:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
  84:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** debugger. */
  85:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #ifdef configTASK_RETURN_ADDRESS
  86:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define portTASK_RETURN_ADDRESS configTASK_RETURN_ADDRESS
  87:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #else
  88:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define portTASK_RETURN_ADDRESS prvTaskExitError
  89:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
  90:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  91:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
  92:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
  93:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * file is weak to allow application writers to change the timer used to
  94:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * generate the tick interrupt.
  95:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
  96:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vPortSetupTimerInterrupt(void);
  97:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
  98:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
  99:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Exception handlers.
 100:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 101:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void xPortSysTickHandler(void);
 102:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 103:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 104:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Start first task is a separate function so it can be tested in isolation.
 105:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 106:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** extern void prvPortStartFirstTask(void) __attribute__((naked));
 107:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 108:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 109:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 110:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 111:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** static void prvTaskExitError(void);
 112:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 113:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #define xPortSysTickHandler     eclic_mtip_handler
 114:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 115:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 116:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 117:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /* Each task maintains its own interrupt status in the critical nesting
 118:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** variable. */
 119:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 120:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 121:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 122:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Record the real MTH calculated by the configMAX_SYSCALL_INTERRUPT_PRIORITY
 123:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * The configMAX_SYSCALL_INTERRUPT_PRIORITY is not the left-aligned level value,
 124:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * See equations below:
 125:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Level Bits number: lvlbits = min(nlbits, CLICINTCTLBITS)
 126:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Left align Bits number: lfabits = 8-lvlbits
 127:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * 0 < configMAX_SYSCALL_INTERRUPT_PRIORITY <= (2^lvlbits-1)
 128:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * uxMaxSysCallMTH = (configMAX_SYSCALL_INTERRUPT_PRIORITY << lfabits) | ((2^lfabits)-1)
 129:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * If nlbits = 3, CLICINTCTLBITS=3, then lvlbits = 3, lfabits = 5
 130:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Set configMAX_SYSCALL_INTERRUPT_PRIORITY to 6
 131:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Then uxMaxSysCallMTH = (6<<5) | (2^5 - 1) = 223
 132:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
 133:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * See function prvCheckMaxSysCallPrio and prvCalcMaxSysCallMTH
 134:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 135:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** uint8_t uxMaxSysCallMTH = 255;
 136:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 137:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 138:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * The number of SysTick increments that make up one tick period.
 139:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 140:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 141:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** static TickType_t ulTimerCountsForOneTick = 0;
 142:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif /* configUSE_TICKLESS_IDLE */
 143:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 144:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 145:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 146:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * 24 bit resolution of the SysTick timer.
 147:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 148:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 149:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** TickType_t xMaximumPossibleSuppressedTicks = 0;
 150:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif /* configUSE_TICKLESS_IDLE */
 151:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 152:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 153:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 154:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * power functionality only.
 155:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 156:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 157:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** static TickType_t ulStoppedTimerCompensation = 0;
 158:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif /* configUSE_TICKLESS_IDLE */
 159:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 160:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 161:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 162:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 163:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 164:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 165:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configASSERT_DEFINED == 1 )
 166:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** static uint8_t ucMaxSysCallPriority = 0;
 167:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif /* configASSERT_DEFINED */
 168:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 169:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 170:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vPortRaiseBASEPRI(void)
 171:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
  16              		.loc 1 171 1
  17              		.cfi_startproc
 172:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetMth(uxMaxSysCallMTH);
  18              		.loc 1 172 5
  19 0000 B7070000 		lui	a5,%hi(.LANCHOR0)
  20 0004 03C70700 		lbu	a4,%lo(.LANCHOR0)(a5)
  21              	.LVL0:
  22              	.LBB153:
  23              	.LBB154:
  24              		.file 2 "..\\..\\..\\..\\plf\\riscv\\NMSIS\\Core\\Include/core_feature_eclic.h"
   1:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /*
   2:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * Copyright (c) 2019 Nuclei Limited. All rights reserved.
   3:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
   4:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * SPDX-License-Identifier: Apache-2.0
   5:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
   6:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * not use this file except in compliance with the License.
   8:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * You may obtain a copy of the License at
   9:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
  10:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * www.apache.org/licenses/LICENSE-2.0
  11:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
  12:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * Unless required by applicable law or agreed to in writing, software
  13:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * See the License for the specific language governing permissions and
  16:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * limitations under the License.
  17:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
  18:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #ifndef __CORE_FEATURE_ECLIC__
  19:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define __CORE_FEATURE_ECLIC__
  20:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /*!
  21:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * @file     core_feature_eclic.h
  22:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * @brief    ECLIC feature API header file for Nuclei N/NX Core
  23:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
  24:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /*
  25:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * ECLIC Feature Configuration Macro:
  26:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * 1. __ECLIC_PRESENT:  Define whether Enhanced Core Local Interrupt Controller (ECLIC) Unit is pre
  27:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *   * 0: Not present
  28:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *   * 1: Present
  29:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * 2. __ECLIC_BASEADDR:  Base address of the ECLIC unit.
  30:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * 3. ECLIC_GetInfoCtlbits():  Define the number of hardware bits are actually implemented in the c
  31:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *   Valid number is 1 - 8.
  32:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * 4. __ECLIC_INTNUM  : Define the external interrupt number of ECLIC Unit
  33:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
  34:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
  35:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #ifdef __cplusplus
  36:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  extern "C" {
  37:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #endif
  38:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
  39:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #if defined(__ECLIC_PRESENT) && (__ECLIC_PRESENT == 1)
  40:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
  41:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \defgroup NMSIS_Core_ECLIC_Registers     Register Define and Type Definitions Of ECLIC
  42:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \ingroup NMSIS_Core_Registers
  43:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief   Type definitions and defines for eclic registers.
  44:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
  45:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * @{
  46:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
  47:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
  48:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
  49:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Union type to access CLICFG configure register.
  50:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
  51:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** typedef union
  52:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
  53:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     struct {
  54:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         uint8_t _reserved0:1;                   /*!< bit:     0   Overflow condition code flag */
  55:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         uint8_t nlbits:4;                       /*!< bit:     29  Carry condition code flag */
  56:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         uint8_t _reserved1:2;                   /*!< bit:     30  Zero condition code flag */
  57:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         uint8_t _reserved2:1;                   /*!< bit:     31  Negative condition code flag */
  58:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     } b;                                        /*!< Structure used for bit  access */
  59:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t w;                                  /*!< Type      used for byte access */
  60:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** } CLICCFG_Type;
  61:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
  62:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
  63:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Union type to access CLICINFO information register.
  64:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
  65:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** typedef union {
  66:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     struct {
  67:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         uint32_t numint:13;                     /*!< bit:  0..12   number of maximum interrupt inpu
  68:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         uint32_t version:8;                     /*!< bit:  13..20  20:17 for architecture version,1
  69:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         uint32_t intctlbits:4;                  /*!< bit:  21..24  specifies how many hardware bits
  70:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         uint32_t _reserved0:7;                  /*!< bit:  25..31  Reserved */
  71:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     } b;                                        /*!< Structure used for bit  access */
  72:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint32_t w;                                 /*!< Type      used for word access */
  73:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** } CLICINFO_Type;
  74:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
  75:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
  76:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief Access to the structure of a vector interrupt controller.
  77:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
  78:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** typedef struct {
  79:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __IOM uint8_t  INTIP;                       /*!< Offset: 0x000 (R/W)  Interrupt set pending reg
  80:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __IOM uint8_t  INTIE;                       /*!< Offset: 0x001 (R/W)  Interrupt set enable regi
  81:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __IOM uint8_t  INTATTR;                     /*!< Offset: 0x002 (R/W)  Interrupt set attributes 
  82:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __IOM uint8_t  INTCTRL;                     /*!< Offset: 0x003 (R/W)  Interrupt configure regis
  83:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** } CLIC_CTRL_Type;
  84:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
  85:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** typedef struct {
  86:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __IOM uint8_t   CFG;                        /*!< Offset: 0x000 (R/W)  CLIC configuration regist
  87:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t RESERVED0[3];
  88:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __IM uint32_t  INFO;                        /*!< Offset: 0x004 (R/ )  CLIC information register
  89:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t RESERVED1[3];
  90:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __IOM uint8_t  MTH;                         /*!< Offset: 0x00B (R/W)  CLIC machine mode thresho
  91:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint32_t RESERVED2[0x3FD];
  92:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     CLIC_CTRL_Type CTRL[4096];                  /*!< Offset: 0x1000 (R/W) CLIC register structure f
  93:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** } CLIC_Type;
  94:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
  95:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_CLICCFG_NLBIT_Pos                 1U                                       /*!< CLIC C
  96:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_CLICCFG_NLBIT_Msk                 (0xFUL << CLIC_CLICCFG_NLBIT_Pos)        /*!< CLIC C
  97:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
  98:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_CLICINFO_CTLBIT_Pos                21U                                     /*!< CLIC I
  99:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_CLICINFO_CTLBIT_Msk                (0xFUL << CLIC_CLICINFO_CTLBIT_Pos)     /*!< CLIC I
 100:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 101:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_CLICINFO_VER_Pos                  13U                                      /*!< CLIC C
 102:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_CLICINFO_VER_Msk                  (0xFFUL << CLIC_CLICCFG_NLBIT_Pos)       /*!< CLIC C
 103:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 104:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_CLICINFO_NUM_Pos                  0U                                       /*!< CLIC C
 105:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_CLICINFO_NUM_Msk                  (0xFFFUL << CLIC_CLICINFO_NUM_Pos)       /*!< CLIC C
 106:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 107:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_INTIP_IP_Pos                      0U                                       /*!< CLIC I
 108:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_INTIP_IP_Msk                      (0x1UL << CLIC_INTIP_IP_Pos)             /*!< CLIC I
 109:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 110:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_INTIE_IE_Pos                      0U                                       /*!< CLIC I
 111:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_INTIE_IE_Msk                      (0x1UL << CLIC_INTIE_IE_Pos)             /*!< CLIC I
 112:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 113:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_INTATTR_TRIG_Pos                  1U                                       /*!< CLIC I
 114:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_INTATTR_TRIG_Msk                  (0x3UL << CLIC_INTATTR_TRIG_Pos)         /*!< CLIC I
 115:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 116:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_INTATTR_SHV_Pos                   0U                                       /*!< CLIC I
 117:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define CLIC_INTATTR_SHV_Msk                   (0x1UL << CLIC_INTATTR_SHV_Pos)          /*!< CLIC I
 118:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 119:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define ECLIC_MAX_NLBITS                       8U                                       /*!< Max nl
 120:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define ECLIC_MODE_MTVEC_Msk                   3U                                       /*!< ECLIC 
 121:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 122:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define ECLIC_NON_VECTOR_INTERRUPT             0x0                                      /*!< Non-Ve
 123:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define ECLIC_VECTOR_INTERRUPT                 0x1                                      /*!< Vector
 124:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 125:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**\brief ECLIC Trigger Enum for different Trigger Type */
 126:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** typedef enum ECLIC_TRIGGER {
 127:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC_LEVEL_TRIGGER = 0x0,          /*!< Level Triggerred, trig[0] = 0 */
 128:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC_POSTIVE_EDGE_TRIGGER = 0x1,   /*!< Postive/Rising Edge Triggered, trig[0] = 1, trig[1] = 
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC_NEGTIVE_EDGE_TRIGGER = 0x3,   /*!< Negtive/Falling Edge Triggered, trig[0] = 1, trig[1] =
 130:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC_MAX_TRIGGER = 0x3             /*!< MAX Supported Trigger Mode */
 131:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** } ECLIC_TRIGGER_Type;
 132:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 133:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #ifndef __ECLIC_BASEADDR
 134:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /* Base address of ECLIC(__ECLIC_BASEADDR) should be defined in <Device.h> */
 135:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #error "__ECLIC_BASEADDR is not defined, please check!"
 136:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #endif
 137:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 138:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #ifndef __ECLIC_INTCTLBITS
 139:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /* Define __ECLIC_INTCTLBITS to get via ECLIC->INFO if not defined */
 140:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define __ECLIC_INTCTLBITS                  (__ECLIC_GetInfoCtlbits())
 141:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #endif
 142:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 143:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /* ECLIC Memory mapping of Device */
 144:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define ECLIC_BASE                          __ECLIC_BASEADDR                            /*!< ECLIC 
 145:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #define ECLIC                               ((CLIC_Type *) ECLIC_BASE)                  /*!< CLIC c
 146:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 147:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /** @} */ /* end of group NMSIS_Core_ECLIC_Registers */
 148:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 149:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /* ##########################   ECLIC functions  #################################### */
 150:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 151:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \defgroup   NMSIS_Core_IntExc        Interrupts and Exceptions
 152:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief Functions that manage interrupts and exceptions via the ECLIC.
 153:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
 154:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * @{
 155:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 156:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 157:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 158:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Definition of IRQn numbers
 159:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 160:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * The core interrupt enumeration names for IRQn values are defined in the file <b><Device>.h</b>.
 161:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - Interrupt ID(IRQn) from 0 to 18 are reserved for core internal interrupts.
 162:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - Interrupt ID(IRQn) start from 19 represent device-specific external interrupts.
 163:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - The first device-specific interrupt has the IRQn value 19.
 164:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
 165:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * The table below describes the core interrupt names and their availability in various Nuclei Core
 166:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 167:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /* The following enum IRQn definition in this file
 168:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * is only used for doxygen documentation generation,
 169:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * The <Device>.h is the real file to define it by vendor
 170:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 171:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #if defined(__ONLY_FOR_DOXYGEN_DOCUMENT_GENERATION__)
 172:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** typedef enum IRQn {
 173:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     /* ========= Nuclei N/NX Core Specific Interrupt Numbers  =========== */
 174:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     /* Core Internal Interrupt IRQn definitions */
 175:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved0_IRQn            =   0,              /*!<  Internal reserved */
 176:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved1_IRQn            =   1,              /*!<  Internal reserved */
 177:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved2_IRQn            =   2,              /*!<  Internal reserved */
 178:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     CLIC_INT_SFT              =   3,              /*!<  System Timer SW interrupt */
 179:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved3_IRQn            =   4,              /*!<  Internal reserved */
 180:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved4_IRQn            =   5,              /*!<  Internal reserved */
 181:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved5_IRQn            =   6,              /*!<  Internal reserved */
 182:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     CLIC_INT_TMR              =   7,              /*!<  System Timer Interrupt */
 183:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved6_IRQn            =   8,              /*!<  Internal reserved */
 184:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved7_IRQn            =   9,              /*!<  Internal reserved */
 185:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved8_IRQn            =  10,              /*!<  Internal reserved */
 186:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved9_IRQn            =  11,              /*!<  Internal reserved */
 187:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved10_IRQn           =  12,              /*!<  Internal reserved */
 188:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved11_IRQn           =  13,              /*!<  Internal reserved */
 189:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved12_IRQn           =  14,              /*!<  Internal reserved */
 190:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved13_IRQn           =  15,              /*!<  Internal reserved */
 191:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved14_IRQn           =  16,              /*!<  Internal reserved */
 192:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved15_IRQn           =  17,              /*!<  Internal reserved */
 193:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     Reserved16_IRQn           =  18,              /*!<  Internal reserved */
 194:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 195:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     /* ========= Device Specific Interrupt Numbers  =================== */
 196:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     /* ToDo: add here your device specific external interrupt numbers.
 197:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****      * 19~max(NUM_INTERRUPT, 1023) is reserved number for user.
 198:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****      * Maxmum interrupt supported could get from clicinfo.NUM_INTERRUPT.
 199:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****      * According the interrupt handlers defined in startup_Device.S
 200:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****      * eg.: Interrupt for Timer#1       eclic_tim1_handler   ->   TIM1_IRQn */
 201:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     FirstDeviceSpecificInterrupt_IRQn    = 19,    /*!< First Device Specific Interrupt */
 202:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     SOC_INT_MAX,                                  /*!< Number of total interrupts */
 203:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** } IRQn_Type;
 204:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #endif /* __ONLY_FOR_DOXYGEN_DOCUMENT_GENERATION__ */
 205:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 206:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #ifdef NMSIS_ECLIC_VIRTUAL
 207:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #ifndef NMSIS_ECLIC_VIRTUAL_HEADER_FILE
 208:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         #define NMSIS_ECLIC_VIRTUAL_HEADER_FILE "nmsis_eclic_virtual.h"
 209:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #endif
 210:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #include NMSIS_ECLIC_VIRTUAL_HEADER_FILE
 211:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #else
 212:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetCfgNlbits            __ECLIC_SetCfgNlbits
 213:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetCfgNlbits            __ECLIC_GetCfgNlbits
 214:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetInfoVer              __ECLIC_GetInfoVer
 215:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetInfoCtlbits          __ECLIC_GetInfoCtlbits
 216:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetInfoNum              __ECLIC_GetInfoNum
 217:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetMth                  __ECLIC_SetMth
 218:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetMth                  __ECLIC_GetMth
 219:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_EnableIRQ               __ECLIC_EnableIRQ
 220:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetEnableIRQ            __ECLIC_GetEnableIRQ
 221:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_DisableIRQ              __ECLIC_DisableIRQ
 222:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetPendingIRQ           __ECLIC_SetPendingIRQ
 223:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetPendingIRQ           __ECLIC_GetPendingIRQ
 224:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_ClearPendingIRQ         __ECLIC_ClearPendingIRQ
 225:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetTrigIRQ              __ECLIC_SetTrigIRQ
 226:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetTrigIRQ              __ECLIC_GetTrigIRQ
 227:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetShvIRQ               __ECLIC_SetShvIRQ
 228:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetShvIRQ               __ECLIC_GetShvIRQ
 229:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetCtrlIRQ              __ECLIC_SetCtrlIRQ
 230:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetCtrlIRQ              __ECLIC_GetCtrlIRQ
 231:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetLevelIRQ             __ECLIC_SetLevelIRQ
 232:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetLevelIRQ             __ECLIC_GetLevelIRQ
 233:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetPriorityIRQ          __ECLIC_SetPriorityIRQ
 234:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetPriorityIRQ          __ECLIC_GetPriorityIRQ
 235:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 236:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #endif /* NMSIS_ECLIC_VIRTUAL */
 237:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 238:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #ifdef NMSIS_VECTAB_VIRTUAL
 239:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #ifndef NMSIS_VECTAB_VIRTUAL_HEADER_FILE
 240:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         #define NMSIS_VECTAB_VIRTUAL_HEADER_FILE "nmsis_vectab_virtual.h"
 241:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #endif
 242:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #include NMSIS_VECTAB_VIRTUAL_HEADER_FILE
 243:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #else
 244:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_SetVector              __ECLIC_SetVector
 245:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     #define ECLIC_GetVector              __ECLIC_GetVector
 246:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** #endif  /* (NMSIS_VECTAB_VIRTUAL) */
 247:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 248:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 249:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Set nlbits value
 250:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 251:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function set the nlbits value of CLICCFG register.
 252:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]    nlbits    nlbits value
 253:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 254:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - nlbits is used to set the width of level in the CLICINTCTL[i].
 255:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 256:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetCfgNlbits
 257:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 258:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_SetCfgNlbits(uint32_t nlbits)
 259:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 260:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CFG &= ~CLIC_CLICCFG_NLBIT_Msk;
 261:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CFG |= (uint8_t)((nlbits <<CLIC_CLICCFG_NLBIT_Pos) & CLIC_CLICCFG_NLBIT_Msk);
 262:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 263:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 264:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 265:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get nlbits value
 266:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 267:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function get the nlbits value of CLICCFG register.
 268:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \return   nlbits value of CLICCFG register
 269:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 270:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - nlbits is used to set the width of level in the CLICINTCTL[i].
 271:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 272:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_SetCfgNlbits
 273:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 274:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint32_t __ECLIC_GetCfgNlbits(void)
 275:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return ((uint32_t)((ECLIC->CFG & CLIC_CLICCFG_NLBIT_Msk) >> CLIC_CLICCFG_NLBIT_Pos));
 277:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 278:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 279:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 280:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get the ECLIC version number
 281:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 282:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function gets the hardware version information from CLICINFO register.
 283:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \return   hardware version number in CLICINFO register.
 284:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 285:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - This function gets harware version information from CLICINFO register.
 286:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - Bit 20:17 for architecture version, bit 16:13 for implementation version.
 287:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 288:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetInfoNum
 289:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** */
 290:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint32_t __ECLIC_GetInfoVer(void)
 291:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 292:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return ((uint32_t)((ECLIC->INFO & CLIC_CLICINFO_VER_Msk) >> CLIC_CLICINFO_VER_Pos));
 293:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 294:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 295:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 296:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get CLICINTCTLBITS
 297:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 298:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function gets CLICINTCTLBITS from CLICINFO register.
 299:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \return  CLICINTCTLBITS from CLICINFO register.
 300:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 301:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - In the CLICINTCTL[i] registers, with 2 <= CLICINTCTLBITS <= 8.
 302:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - The implemented bits are kept left-justified in the most-significant bits of each 8-bit
 303:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *   CLICINTCTL[I] register, with the lower unimplemented bits treated as hardwired to 1.
 304:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 305:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetInfoNum
 306:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 307:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint32_t __ECLIC_GetInfoCtlbits(void)
 308:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 309:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return ((uint32_t)((ECLIC->INFO & CLIC_CLICINFO_CTLBIT_Msk) >> CLIC_CLICINFO_CTLBIT_Pos));
 310:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 311:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 312:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 313:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get number of maximum interrupt inputs supported
 314:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 315:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function gets number of maximum interrupt inputs supported from CLICINFO register.
 316:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \return  number of maximum interrupt inputs supported from CLICINFO register.
 317:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 318:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - This function gets number of maximum interrupt inputs supported from CLICINFO register.
 319:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - The num_interrupt field specifies the actual number of maximum interrupt inputs supported in t
 320:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 321:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetInfoCtlbits
 322:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 323:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint32_t __ECLIC_GetInfoNum(void)
 324:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 325:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return ((uint32_t)((ECLIC->INFO & CLIC_CLICINFO_NUM_Msk) >> CLIC_CLICINFO_NUM_Pos));
 326:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 327:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 328:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 329:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Set Machine Mode Interrupt Level Threshold
 330:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 331:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function sets machine mode interrupt level threshold.
 332:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]  mth       Interrupt Level Threshold.
 333:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 334:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetMth
 335:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 336:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_SetMth(uint8_t mth)
 337:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->MTH = mth;
  25              		.loc 2 338 5
  26              		.loc 2 338 16 is_stmt 0
  27 0008 B70700D2 		li	a5,-771751936
  28 000c A385E700 		sb	a4,11(a5)
  29              	.LVL1:
  30              	.LBE154:
  31              	.LBE153:
 173:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
  32              		.loc 1 173 5 is_stmt 1
  33              	 #APP
  34              	# 173 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 174              	}
  35              		fence iorw,iorw
  36              	# 0 "" 2
  37              		.loc 1 174 1 is_stmt 0
  38              	 #NO_APP
  39 0014 8280     		ret
  40              		.cfi_endproc
  41              	.LFE365:
  43              		.section	.text.prvTaskExitError,"ax",@progbits
  44              		.align	1
  46              	prvTaskExitError:
  47              	.LFB370:
 175:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 176:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 177:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 178:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** uint8_t ulPortRaiseBASEPRI(void)
 179:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 180:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t ulOriginalBASEPRI;
 181:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 182:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ulOriginalBASEPRI = ECLIC_GetMth();
 183:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetMth(uxMaxSysCallMTH);
 184:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 185:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 186:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* This return might not be reached but is necessary to prevent compiler
 187:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     warnings. */
 188:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     return ulOriginalBASEPRI;
 189:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 190:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 191:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 192:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vPortSetBASEPRI(uint8_t ulNewMaskValue)
 193:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 194:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetMth(ulNewMaskValue);
 195:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 196:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 197:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 198:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 199:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void portYIELD( void ) /* PRIVILEGED_FUNCTION */
 200:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 201:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Set a software interrupt(SWI) request to request a context switch. */
 202:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     SysTimer_SetSWIRQ();
 203:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Barriers are normally not required but do ensure the code is completely
 204:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     within the specified behaviour for the architecture. */
 205:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 206:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 207:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 208:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 209:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * See header file for description.
 210:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * As per the standard RISC-V ABI pxTopcOfStack is passed in in a0, pxCode in
 211:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * a1, and pvParameters in a2.  The new top of stack is passed out in a0.
 212:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
 213:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * RISC-V maps registers to ABI names as follows (X1 to X31 integer registers
 214:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * for the 'I' profile, X1 to X15 for the 'E' profile, currently I assumed).
 215:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
 216:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Register        ABI Name    Description                         Saver
 217:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x0              zero        Hard-wired zero                     -
 218:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x1              ra          Return address                      Caller
 219:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x2              sp          Stack pointer                       Callee
 220:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x3              gp          Global pointer                      -
 221:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x4              tp          Thread pointer                      -
 222:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x5-7            t0-2        Temporaries                         Caller
 223:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x8              s0/fp       Saved register/Frame pointer        Callee
 224:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x9              s1          Saved register                      Callee
 225:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x10-11          a0-1        Function Arguments/return values    Caller
 226:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x12-17          a2-7        Function arguments                  Caller
 227:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x18-27          s2-11       Saved registers                     Callee
 228:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x28-31          t3-6        Temporaries                         Caller
 229:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
 230:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * The RISC-V context is saved RTOS tasks in the following stack frame,
 231:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * where the global and thread pointers are currently assumed to be constant so
 232:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * are not saved:
 233:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
 234:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * mstatus
 235:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * #ifndef __riscv_32e
 236:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x16 - x31
 237:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * #endif
 238:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x15
 239:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x14
 240:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x13
 241:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x12
 242:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x11
 243:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * pvParameters
 244:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x9
 245:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x8
 246:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x7
 247:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x6
 248:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * x5
 249:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * portTASK_RETURN_ADDRESS
 250:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * pxCode
 251:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  *
 252:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * #ifdef __riscv_flen
 253:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * fcsr
 254:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * f0 - f31
 255:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * #endif
 256:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 257:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** StackType_t* pxPortInitialiseStack(StackType_t* pxTopOfStack, TaskFunction_t pxCode, void* pvParame
 258:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 259:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Simulate the stack frame as it would be created by a context switch
 260:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     interrupt. */
 261:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 262:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Offset added to account for the way the MCU uses the stack on entry/exit
 263:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     of interrupts, and to ensure alignment. */
 264:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack--;
 265:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = portINITIAL_MSTATUS;    /* MSTATUS */
 266:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 267:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Save code space by skipping register initialisation. */
 268:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #ifndef __riscv_32e
 269:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack -= 22;    /* X11 - X31. */
 270:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #else
 271:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack -= 6;    /* X11 - X15. */
 272:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
 273:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = (StackType_t) pvParameters;      /* X10/A0 */
 274:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack -= 6; /* X5 - X9 */
 275:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = (StackType_t) portTASK_RETURN_ADDRESS;      /* RA, X1 */
 276:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 277:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack --;
 278:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = ((StackType_t) pxCode) ;        /* PC */
 279:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 280:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configENABLE_FPU == 1 )
 281:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #ifdef __riscv_flen
 282:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack--;
 283:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = 0; /* FCSR */
 284:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack -= 32 * (FPREGBYTES >> 2);
 285:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
 286:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
 287:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 288:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     return pxTopOfStack;
 289:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 290:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 291:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 292:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** static void prvTaskExitError(void)
 293:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
  48              		.loc 1 293 1 is_stmt 1
  49              		.cfi_startproc
  50 0000 17030000 		call	t0,__riscv_save_0
  50      E7020300 
  51              		.cfi_offset 1, -4
  52              		.cfi_def_cfa_offset 16
 294:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     volatile uint32_t ulDummy = 0;
  53              		.loc 1 294 5
 293:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     volatile uint32_t ulDummy = 0;
  54              		.loc 1 293 1 is_stmt 0
  55 0008 4111     		addi	sp,sp,-16
  56              		.cfi_def_cfa_offset 32
  57              		.loc 1 294 23
  58 000a 02C6     		sw	zero,12(sp)
 295:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 296:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* A function that implements a task must not exit or attempt to return to
 297:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     its caller as there is nothing to return to.  If a task wants to exit it
 298:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     should instead call vTaskDelete( NULL ).
 299:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 300:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     Artificially force an assert() to be triggered if configASSERT() is
 301:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     defined, then stop here so application writers can catch the error. */
 302:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     configASSERT(uxCriticalNesting == ~0UL);
  59              		.loc 1 302 44 is_stmt 1
 303:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     portDISABLE_INTERRUPTS();
  60              		.loc 1 303 5
  61 000c 97000000 		call	vPortRaiseBASEPRI
  61      E7800000 
  62              	.LVL2:
 304:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     while (ulDummy == 0) {
  63              		.loc 1 304 5
  64              	.LBB155:
  65              	.LBB156:
  66              	.LBB157:
  67              		.file 3 "..\\..\\..\\..\\plf\\riscv\\NMSIS\\Core\\Include/core_feature_base.h"
   1:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /*
   2:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Copyright (c) 2019 Nuclei Limited. All rights reserved.
   3:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *
   4:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * SPDX-License-Identifier: Apache-2.0
   5:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *
   6:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * not use this file except in compliance with the License.
   8:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * You may obtain a copy of the License at
   9:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *
  10:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * www.apache.org/licenses/LICENSE-2.0
  11:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *
  12:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Unless required by applicable law or agreed to in writing, software
  13:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * See the License for the specific language governing permissions and
  16:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * limitations under the License.
  17:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
  18:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
  19:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #ifndef __CORE_FEATURE_BASE__
  20:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __CORE_FEATURE_BASE__
  21:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /*!
  22:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * @file     core_feature_base.h
  23:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * @brief    Base core feature API for Nuclei N/NX Core
  24:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
  25:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #include <stdint.h>
  26:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #include "riscv_encoding.h"
  27:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
  28:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #ifdef __cplusplus
  29:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  extern "C" {
  30:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
  31:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
  32:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
  33:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \defgroup NMSIS_Core_Registers     Register Define and Type Definitions
  34:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Type definitions and defines for core registers.
  35:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *
  36:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * @{
  37:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
  38:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #ifndef __RISCV_XLEN
  39:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****   /** \brief Refer to the width of an integer register in bits(either 32 or 64) */
  40:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****   #ifndef __riscv_xlen
  41:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     #define __RISCV_XLEN    32
  42:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****   #else
  43:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     #define __RISCV_XLEN    __riscv_xlen
  44:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****   #endif
  45:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif /* __RISCV_XLEN */
  46:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
  47:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /** \brief Type of Control and Status Register(CSR), depends on the XLEN defined in RISC-V */
  48:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if __RISCV_XLEN == 32
  49:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****   typedef uint32_t rv_csr_t;
  50:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #elif __RISCV_XLEN == 64
  51:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****   typedef uint64_t rv_csr_t;
  52:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
  53:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****   typedef uint32_t rv_csr_t;
  54:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
  55:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /** @} */ /* End of Doxygen Group NMSIS_Core_Registers */
  56:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
  57:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \defgroup NMSIS_Core_Base_Registers     Base Register Define and Type Definitions
  58:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \ingroup NMSIS_Core_Registers
  59:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Type definitions and defines for base core registers.
  60:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *
  61:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * @{
  62:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
  63:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
  64:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MISA CSR register.
  65:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
  66:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
  67:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
  68:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t a:1;                           /*!< bit:     0  Atomic extension */
  69:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t b:1;                           /*!< bit:     1  Tentatively reserved for Bit-Manip
  70:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t c:1;                           /*!< bit:     2  Compressed extension */
  71:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t d:1;                           /*!< bit:     3  Double-precision floating-point ex
  72:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t e:1;                           /*!< bit:     4  RV32E base ISA */
  73:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t f:1;                           /*!< bit:     5  Single-precision floating-point ex
  74:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t g:1;                           /*!< bit:     6  Additional standard extensions pre
  75:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t h:1;                           /*!< bit:     7  Hypervisor extension */
  76:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t i:1;                           /*!< bit:     8  RV32I/64I/128I base ISA */
  77:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t j:1;                           /*!< bit:     9  Tentatively reserved for Dynamical
  78:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:1;                  /*!< bit:     10 Reserved  */
  79:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t l:1;                           /*!< bit:     11 Tentatively reserved for Decimal F
  80:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t m:1;                           /*!< bit:     12 Integer Multiply/Divide extension 
  81:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t n:1;                           /*!< bit:     13 User-level interrupts supported  *
  82:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved2:1;                  /*!< bit:     14 Reserved  */
  83:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t p:1;                           /*!< bit:     15 Tentatively reserved for Packed-SI
  84:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t q:1;                           /*!< bit:     16 Quad-precision floating-point exte
  85:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _resreved3:1;                  /*!< bit:     17 Reserved  */
  86:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t s:1;                           /*!< bit:     18 Supervisor mode implemented  */
  87:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t t:1;                           /*!< bit:     19 Tentatively reserved for Transacti
  88:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t u:1;                           /*!< bit:     20 User mode implemented  */
  89:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t v:1;                           /*!< bit:     21 Tentatively reserved for Vector ex
  90:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved4:1;                  /*!< bit:     22 Reserved  */
  91:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t x:1;                           /*!< bit:     23 Non-standard extensions present  *
  92:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if defined(__RISCV_XLEN) && __RISCV_XLEN == 64
  93:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved5:38;                 /*!< bit:     24..61 Reserved  */
  94:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mxl:2;                         /*!< bit:     62..63 Machine XLEN  */
  95:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
  96:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved5:6;                  /*!< bit:     24..29 Reserved  */
  97:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mxl:2;                         /*!< bit:     30..31 Machine XLEN  */
  98:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
  99:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 100:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 101:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MISA_Type;
 102:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 103:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 104:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MSTATUS CSR register.
 105:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 106:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 107:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 108:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if defined(__RISCV_XLEN) && __RISCV_XLEN == 64
 109:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:3;                  /*!< bit:     0..2  Reserved */
 110:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mie:1;                         /*!< bit:     3  Machine mode interrupt enable flag
 111:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:3;                  /*!< bit:     4..6  Reserved */
 112:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpie:1;                        /*!< bit:     7  mirror of MIE flag */
 113:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved2:3;                  /*!< bit:     8..10  Reserved */
 114:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpp:2;                         /*!< bit:     11..12 mirror of Privilege Mode */
 115:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t fs:2;                          /*!< bit:     13..14 FS status flag */
 116:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t xs:2;                          /*!< bit:     15..16 XS status flag */
 117:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mprv:1;                        /*!< bit:     Machine mode PMP */
 118:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved3:14;                 /*!< bit:     18..31 Reserved */
 119:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t uxl:2;                         /*!< bit:     32..33 user mode xlen */
 120:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved6:29;                 /*!< bit:     34..62 Reserved  */
 121:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t sd:1;                          /*!< bit:     Dirty status for XS or FS */
 122:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
 123:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:1;                  /*!< bit:     0  Reserved */
 124:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t sie:1;                         /*!< bit:     1  supervisor interrupt enable flag *
 125:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:1;                  /*!< bit:     2  Reserved */
 126:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mie:1;                         /*!< bit:     3  Machine mode interrupt enable flag
 127:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved2:1;                  /*!< bit:     4  Reserved */
 128:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t spie:1;                        /*!< bit:     3  Supervisor Privilede mode interrup
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved3:1;                  /*!< bit:     Reserved */
 130:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpie:1;                        /*!< bit:     mirror of MIE flag */
 131:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved4:3;                  /*!< bit:     Reserved */
 132:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpp:2;                         /*!< bit:     mirror of Privilege Mode */
 133:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t fs:2;                          /*!< bit:     FS status flag */
 134:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t xs:2;                          /*!< bit:     XS status flag */
 135:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mprv:1;                        /*!< bit:     Machine mode PMP */
 136:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t sum:1;                         /*!< bit:     Supervisor Mode load and store protec
 137:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved6:12;                 /*!< bit:     19..30 Reserved  */
 138:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t sd:1;                          /*!< bit:     Dirty status for XS or FS */
 139:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 140:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 141:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 142:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MSTATUS_Type;
 143:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 144:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 145:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MTVEC CSR register.
 146:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 147:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 148:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 149:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mode:6;                        /*!< bit:     0..5   interrupt mode control */
 150:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if defined(__RISCV_XLEN) && __RISCV_XLEN == 64
 151:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t addr:58;                       /*!< bit:     6..63  mtvec address */
 152:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
 153:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t addr:26;                       /*!< bit:     6..31  mtvec address */
 154:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 155:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 156:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 157:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MTVEC_Type;
 158:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 159:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 160:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MCAUSE CSR register.
 161:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 162:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 163:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 164:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t exccode:12;                    /*!< bit:     11..0  exception or interrupt code */
 165:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:4;                  /*!< bit:     15..12  Reserved */
 166:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpil:8;                        /*!< bit:     23..16  Previous interrupt level */
 167:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:3;                  /*!< bit:     26..24  Reserved */
 168:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpie:1;                        /*!< bit:     27  Interrupt enable flag before ente
 169:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpp:2;                         /*!< bit:     29..28  Privilede mode flag before en
 170:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t minhv:1;                       /*!< bit:     30  Machine interrupt vector table */
 171:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if defined(__RISCV_XLEN) && __RISCV_XLEN == 64
 172:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved2:32;                 /*!< bit:     31..62  Reserved */
 173:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t interrupt:1;                   /*!< bit:     63  trap type. 0 means exception and 
 174:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
 175:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t interrupt:1;                   /*!< bit:     31  trap type. 0 means exception and 
 176:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 177:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 178:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 179:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MCAUSE_Type;
 180:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 181:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 182:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MCOUNTINHIBIT CSR register.
 183:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 184:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 185:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 186:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t cy:1;                          /*!< bit:     0     1 means disable mcycle counter 
 187:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:1;                  /*!< bit:     1     Reserved */
 188:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ir:1;                          /*!< bit:     2     1 means disable minstret counte
 189:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if defined(__RISCV_XLEN) && __RISCV_XLEN == 64
 190:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:61;                 /*!< bit:     3..63 Reserved */
 191:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
 192:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:29;                 /*!< bit:     3..31 Reserved */
 193:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 194:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 195:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 196:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MCOUNTINHIBIT_Type;
 197:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 198:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 199:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MSUBM CSR register.
 200:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 201:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 202:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 203:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:6;                  /*!< bit:     0..5   Reserved */
 204:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t typ:2;                         /*!< bit:     6..7   current trap type */
 205:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ptyp:2;                        /*!< bit:     8..9   previous trap type */
 206:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if defined(__RISCV_XLEN) && __RISCV_XLEN == 64
 207:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:54;                 /*!< bit:     10..63 Reserved */
 208:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
 209:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:22;                 /*!< bit:     10..31 Reserved */
 210:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 211:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 212:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 213:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MSUBM_Type;
 214:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 215:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 216:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MDCAUSE CSR register.
 217:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 218:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 219:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 220:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mdcause:2;                     /*!< bit:     0..1   More detailed exception inform
 221:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:__RISCV_XLEN-2;     /*!< bit:     2..XLEN-1 Reserved */
 222:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 223:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 224:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MDCAUSE_Type;
 225:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 226:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 227:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MMISC_CTRL CSR register.
 228:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 229:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 230:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 231:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:3;                  /*!< bit:     0..2  Reserved */
 232:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t bpu:1;                         /*!< bit:     3     dynamic prediction enable flag 
 233:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:2;                  /*!< bit:     4..5  Reserved */
 234:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t misalign:1;                    /*!< bit:     6     misaligned access support flag 
 235:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved2:2;                  /*!< bit:     7..8  Reserved */
 236:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t nmi_cause:1;                   /*!< bit:     9     mnvec control and nmi mcase exc
 237:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if defined(__RISCV_XLEN) && __RISCV_XLEN == 64
 238:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved3:54;                 /*!< bit:     10..63 Reserved */
 239:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
 240:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved3:22;                 /*!< bit:     10..31 Reserved */
 241:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 242:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 243:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 244:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MMISCCTRL_Type;
 245:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 246:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef CSR_MMISCCTRL_Type CSR_MMISCCTL_Type;
 247:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 248:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 249:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MCACHE_CTL CSR register.
 250:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 251:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 252:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 253:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ic_en:1;                       /*!< I-Cache enable */
 254:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ic_scpd_mod:1;                 /*!< Scratchpad mode, 0: Scratchpad as ICache Data 
 255:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ic_ecc_en:1;                   /*!< I-Cache ECC enable */
 256:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ic_ecc_excp_en:1;              /*!< I-Cache 2bit ECC error exception enable */
 257:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ic_rwtecc:1;                   /*!< Control I-Cache Tag Ram ECC code injection */
 258:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ic_rwdecc:1;                   /*!< Control I-Cache Data Ram ECC code injection */
 259:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:10;
 260:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dc_en:1;                       /*!< DCache enable */
 261:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dc_ecc_en:1;                   /*!< D-Cache ECC enable */
 262:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dc_ecc_excp_en:1;              /*!< D-Cache 2bit ECC error exception enable */
 263:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dc_rwtecc:1;                   /*!< Control D-Cache Tag Ram ECC code injection */
 264:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dc_rwdecc:1;                   /*!< Control D-Cache Data Ram ECC code injection */
 265:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:__RISCV_XLEN-21;
 266:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 267:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 268:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MCACHECTL_Type;
 269:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 270:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 271:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MSAVESTATUS CSR register.
 272:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 273:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 274:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 275:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpie1:1;                       /*!< bit:     0     interrupt enable flag of fisrt 
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpp1:2;                        /*!< bit:     1..2  privilede mode of fisrt level N
 277:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:3;                  /*!< bit:     3..5  Reserved */
 278:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ptyp1:2;                       /*!< bit:     6..7  NMI/exception type of before fi
 279:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpie2:1;                       /*!< bit:     8     interrupt enable flag of second
 280:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t mpp2:2;                        /*!< bit:     9..10 privilede mode of second level 
 281:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:3;                  /*!< bit:     11..13     Reserved */
 282:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ptyp2:2;                       /*!< bit:     14..15     NMI/exception type of befo
 283:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if defined(__RISCV_XLEN) && __RISCV_XLEN == 64
 284:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved2:48;                 /*!< bit:     16..63 Reserved*/
 285:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else
 286:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved2:16;                 /*!< bit:     16..31 Reserved*/
 287:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 288:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 289:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t w;                                 /*!< Type      used for csr data access */
 290:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MSAVESTATUS_Type;
 291:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 292:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 293:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MILM_CTL CSR register.
 294:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 295:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 296:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 297:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ilm_en:1;                      /*!< ILM enable */
 298:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ilm_ecc_en:1;                  /*!< ILM ECC eanble */
 299:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ilm_ecc_excp_en:1;             /*!< ILM ECC exception enable */
 300:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ilm_rwecc:1;                   /*!< Control mecc_code write to ilm, simulate error
 301:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:6;                  /*!< Reserved */
 302:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ilm_bpa:__RISCV_XLEN-10;       /*!< ILM base address */
 303:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 304:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 305:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MILMCTL_Type;
 306:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 307:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 308:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MDLM_CTL CSR register.
 309:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 310:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 311:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 312:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dlm_en:1;                      /*!< DLM enable */
 313:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dlm_ecc_en:1;                  /*!< DLM ECC eanble */
 314:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dlm_ecc_excp_en:1;             /*!< DLM ECC exception enable */
 315:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dlm_rwecc:1;                   /*!< Control mecc_code write to dlm, simulate error
 316:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:6;                  /*!< Reserved */
 317:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dlm_bpa:__RISCV_XLEN-10;       /*!< DLM base address */
 318:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 319:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 320:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MDLMCTL_Type;
 321:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 322:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 323:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MCFG_INFO CSR register.
 324:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 325:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 326:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 327:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t tee:1;                         /*!< TEE present */
 328:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ecc:1;                         /*!< ECC present */
 329:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t clic:1;                        /*!< CLIC present */
 330:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t plic:1;                        /*!< PLIC present */
 331:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t fio:1;                         /*!< FIO present */
 332:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ppi:1;                         /*!< PPI present */
 333:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t nice:1;                        /*!< NICE present */
 334:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ilm:1;                         /*!< ILM present */
 335:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dlm:1;                         /*!< DLM present */
 336:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t icache:1;                      /*!< ICache present */
 337:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t dcache:1;                      /*!< DCache present */
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:__RISCV_XLEN-11;
 339:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 340:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 341:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MCFGINFO_Type;
 342:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 343:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 344:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MICFG_INFO CSR register.
 345:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 346:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 347:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 348:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t set:4;                         /*!< I-Cache sets per way */
 349:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t way:3;                         /*!< I-Cache way */
 350:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t lsize:3;                       /*!< I-Cache line size */
 351:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t cache_ecc:1;                   /*!< I-Cache ECC present */
 352:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:5;
 353:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t lm_size:5;                     /*!< ILM size, need to be 2^n size */
 354:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t lm_xonly:1;                    /*!< ILM Execute only permission */
 355:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t lm_ecc:1;                      /*!< ILM ECC present */
 356:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:__RISCV_XLEN-23;
 357:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 358:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 359:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MICFGINFO_Type;
 360:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 361:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MDCFG_INFO CSR register.
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 364:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t set:4;                         /*!< D-Cache sets per way */
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t way:3;                         /*!< D-Cache way */
 368:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t lsize:3;                       /*!< D-Cache line size */
 369:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t cache_ecc:1;                   /*!< D-Cache ECC present */
 370:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:5;
 371:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t lm_size:5;                     /*!< DLM size, need to be 2^n size */
 372:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t lm_xonly:1;                    /*!< DLM Execute only permission */
 373:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t lm_ecc:1;                      /*!< DLM ECC present */
 374:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:__RISCV_XLEN-23;
 375:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 376:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 377:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MDCFGINFO_Type;
 378:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 379:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 380:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MPPICFG_INFO CSR register.
 381:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 382:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 383:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 384:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:1;                  /*!< Reserved */
 385:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ppi_size:5;                    /*!< PPI size, need to be 2^n size */
 386:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:4;                  /*!< Reserved */
 387:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ppi_bpa:__RISCV_XLEN-10;       /*!< PPI base address */
 388:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 389:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 390:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MPPICFGINFO_Type;
 391:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 392:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 393:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MFIOCFG_INFO CSR register.
 394:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 395:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 396:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 397:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:1;                  /*!< Reserved */
 398:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t fio_size:5;                    /*!< FIO size, need to be 2^n size */
 399:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:4;                  /*!< Reserved */
 400:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t fio_bpa:__RISCV_XLEN-10;       /*!< FIO base address */
 401:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 402:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 403:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MFIOCFGINFO_Type;
 404:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 405:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 406:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MECC_LOCK CSR register.
 407:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 408:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 409:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 410:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ecc_lock:1;                    /*!< RW permission, ECC Lock configure */
 411:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:__RISCV_XLEN-1;     /*!< Reserved */
 412:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 413:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 414:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MECCLOCK_Type;
 415:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 416:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 417:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief  Union type to access MECC_CODE CSR register.
 418:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 419:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef union {
 420:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     struct {
 421:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t code:9;                        /*!< Used to inject ECC check code */
 422:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved0:7;                  /*!< Reserved */
 423:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t ramid:5;                       /*!< Indicate 2bit ECC error, software can clear th
 424:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved1:3;                  /*!< Reserved */
 425:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t sramid:5;                      /*!< Indicate 1bit ECC error, software can clear th
 426:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         rv_csr_t _reserved2:__RISCV_XLEN-29;    /*!< Reserved */
 427:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     } b;                                        /*!< Structure used for bit  access */
 428:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     rv_csr_t d;                                 /*!< Type      used for csr data access */
 429:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } CSR_MECCCODE_Type;
 430:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 431:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /** @} */ /* End of Doxygen Group NMSIS_Core_Base_Registers */
 432:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 433:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /* ###########################  Core Function Access  ########################### */
 434:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 435:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \defgroup NMSIS_Core_CSR_Register_Access    Core CSR Register Access
 436:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \ingroup  NMSIS_Core
 437:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief    Functions to access the Core CSR Registers
 438:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 439:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *
 440:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * The following functions or macros provide access to Core CSR registers.
 441:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * - \ref NMSIS_Core_CSR_Encoding
 442:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * - \ref NMSIS_Core_CSR_Registers
 443:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *   @{
 444:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 445:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 446:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 447:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #ifndef __ASSEMBLY__
 448:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 449:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 450:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief CSR operation Macro for csrrw instruction.
 451:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 452:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Read the content of csr register to __v,
 453:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * then write content of val into csr register, then return __v
 454:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param csr   CSR macro definition defined in
 455:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *              \ref NMSIS_Core_CSR_Registers, eg. \ref CSR_MSTATUS
 456:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param val   value to store into the CSR register
 457:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \return the CSR register value before written
 458:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 459:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __RV_CSR_SWAP(csr, val)                                 \
 460:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     ({                                                          \
 461:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         register rv_csr_t __v = (unsigned long)(val);           \
 462:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __ASM volatile("csrrw %0, " STRINGIFY(csr) ", %1"       \
 463:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "=r"(__v)                                \
 464:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "r"(__v)                                \
 465:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "memory");                               \
 466:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __v;                                                    \
 467:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     })
 468:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 469:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 470:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief CSR operation Macro for csrr instruction.
 471:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 472:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Read the content of csr register to __v and return it
 473:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param csr   CSR macro definition defined in
 474:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *              \ref NMSIS_Core_CSR_Registers, eg. \ref CSR_MSTATUS
 475:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \return the CSR register value
 476:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 477:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __RV_CSR_READ(csr)                                      \
 478:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     ({                                                          \
 479:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         register rv_csr_t __v;                                  \
 480:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __ASM volatile("csrr %0, " STRINGIFY(csr)               \
 481:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "=r"(__v)                                \
 482:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      :                                          \
 483:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "memory");                               \
 484:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __v;                                                    \
 485:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     })
 486:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 487:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 488:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief CSR operation Macro for csrw instruction.
 489:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 490:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Write the content of val to csr register
 491:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param csr   CSR macro definition defined in
 492:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *              \ref NMSIS_Core_CSR_Registers, eg. \ref CSR_MSTATUS
 493:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param val   value to store into the CSR register
 494:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 495:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __RV_CSR_WRITE(csr, val)                                \
 496:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     ({                                                          \
 497:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         register rv_csr_t __v = (rv_csr_t)(val);                \
 498:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __ASM volatile("csrw " STRINGIFY(csr) ", %0"            \
 499:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      :                                          \
 500:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "r"(__v)                                \
 501:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "memory");                               \
 502:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     })
 503:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 504:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 505:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief CSR operation Macro for csrrs instruction.
 506:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 507:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Read the content of csr register to __v,
 508:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * then set csr register to be __v | val, then return __v
 509:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param csr   CSR macro definition defined in
 510:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *              \ref NMSIS_Core_CSR_Registers, eg. \ref CSR_MSTATUS
 511:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param val   Mask value to be used wih csrrs instruction
 512:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \return the CSR register value before written
 513:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 514:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __RV_CSR_READ_SET(csr, val)                             \
 515:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     ({                                                          \
 516:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         register rv_csr_t __v = (rv_csr_t)(val);                \
 517:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __ASM volatile("csrrs %0, " STRINGIFY(csr) ", %1"       \
 518:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "=r"(__v)                                \
 519:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "r"(__v)                                \
 520:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "memory");                               \
 521:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __v;                                                    \
 522:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     })
 523:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 524:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 525:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief CSR operation Macro for csrs instruction.
 526:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 527:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Set csr register to be csr_content | val
 528:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param csr   CSR macro definition defined in
 529:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *              \ref NMSIS_Core_CSR_Registers, eg. \ref CSR_MSTATUS
 530:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param val   Mask value to be used wih csrs instruction
 531:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 532:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __RV_CSR_SET(csr, val)                                  \
 533:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     ({                                                          \
 534:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         register rv_csr_t __v = (rv_csr_t)(val);                \
 535:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __ASM volatile("csrs " STRINGIFY(csr) ", %0"            \
 536:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      :                                          \
 537:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "r"(__v)                                \
 538:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "memory");                               \
 539:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     })
 540:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 541:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 542:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief CSR operation Macro for csrrc instruction.
 543:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 544:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Read the content of csr register to __v,
 545:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * then set csr register to be __v & ~val, then return __v
 546:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param csr   CSR macro definition defined in
 547:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *              \ref NMSIS_Core_CSR_Registers, eg. \ref CSR_MSTATUS
 548:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param val   Mask value to be used wih csrrc instruction
 549:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \return the CSR register value before written
 550:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 551:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __RV_CSR_READ_CLEAR(csr, val)                           \
 552:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     ({                                                          \
 553:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         register rv_csr_t __v = (rv_csr_t)(val);                \
 554:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __ASM volatile("csrrc %0, " STRINGIFY(csr) ", %1"       \
 555:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "=r"(__v)                                \
 556:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "r"(__v)                                \
 557:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "memory");                               \
 558:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __v;                                                    \
 559:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     })
 560:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 561:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 562:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief CSR operation Macro for csrc instruction.
 563:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 564:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Set csr register to be csr_content & ~val
 565:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param csr   CSR macro definition defined in
 566:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *              \ref NMSIS_Core_CSR_Registers, eg. \ref CSR_MSTATUS
 567:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param val   Mask value to be used wih csrc instruction
 568:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 569:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __RV_CSR_CLEAR(csr, val)                                \
 570:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     ({                                                          \
 571:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         register rv_csr_t __v = (rv_csr_t)(val);                \
 572:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         __ASM volatile("csrc " STRINGIFY(csr) ", %0"            \
 573:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      :                                          \
 574:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "r"(__v)                                \
 575:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****                      : "memory");                               \
 576:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     })
 577:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif /* __ASSEMBLY__ */
 578:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 579:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 580:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Get IRQ status
 581:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details Get IRQ state in the MSUBM Register.
 582:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \remarks
 583:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *          Can only be executed in Privileged modes.
 584:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 585:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 586:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 587:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return (uint32_t) ((__RV_CSR_READ(CSR_MSUBM) & ((0xFFFFFFFFUL << 6) & (0xFFFFFFFFUL >> (31U - (
 588:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 589:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 590:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 591:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Enable IRQ Interrupts
 592:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details Enables IRQ interrupts by setting the MIE-bit in the MSTATUS Register.
 593:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \remarks
 594:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *          Can only be executed in Privileged modes.
 595:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 596:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 597:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_SET(CSR_MSTATUS, MSTATUS_MIE);
 599:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 600:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 601:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 602:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Disable IRQ Interrupts
 603:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details Disables IRQ interrupts by clearing the MIE-bit in the MSTATUS Register.
 604:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \remarks
 605:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *          Can only be executed in Privileged modes.
 606:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 607:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 608:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_CLEAR(CSR_MSTATUS, MSTATUS_MIE);
 610:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 611:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 612:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 613:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Read whole 64 bits value of mcycle counter
 614:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details This function will read the whole 64 bits of MCYCLE register
 615:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \return  The whole 64 bits value of MCYCLE
 616:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \remarks It will work for both RV32 and RV64 to get full 64bits value of MCYCLE
 617:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 618:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE uint64_t __get_rv_cycle(void)
 619:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 620:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if __RISCV_XLEN == 32
 621:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     volatile uint32_t high0, low, high;
 622:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     uint64_t full;
 623:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 624:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     high0 = __RV_CSR_READ(CSR_MCYCLEH);
 625:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     low = __RV_CSR_READ(CSR_MCYCLE);
 626:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     high = __RV_CSR_READ(CSR_MCYCLEH);
 627:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     if (high0 != high) {
 628:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         low = __RV_CSR_READ(CSR_MCYCLE);
 629:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     }
 630:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     full = (((uint64_t)high) << 32) | low;
 631:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return full;
 632:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #elif __RISCV_XLEN == 64
 633:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return (uint64_t)__RV_CSR_READ(CSR_MCYCLE);
 634:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else // TODO Need cover for XLEN=128 case in future
 635:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return (uint64_t)__RV_CSR_READ(CSR_MCYCLE);
 636:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 637:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 638:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 639:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 640:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Read whole 64 bits value of machine instruction-retired counter
 641:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details This function will read the whole 64 bits of MINSTRET register
 642:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \return  The whole 64 bits value of MINSTRET
 643:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \remarks It will work for both RV32 and RV64 to get full 64bits value of MINSTRET
 644:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 645:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE uint64_t __get_rv_instret(void)
 646:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 647:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if __RISCV_XLEN == 32
 648:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     volatile uint32_t high0, low, high;
 649:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     uint64_t full;
 650:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 651:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     high0 = __RV_CSR_READ(CSR_MINSTRETH);
 652:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     low = __RV_CSR_READ(CSR_MINSTRET);
 653:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     high = __RV_CSR_READ(CSR_MINSTRETH);
 654:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     if (high0 != high) {
 655:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         low = __RV_CSR_READ(CSR_MINSTRET);
 656:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     }
 657:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     full = (((uint64_t)high) << 32) | low;
 658:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return full;
 659:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #elif __RISCV_XLEN == 64
 660:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return (uint64_t)__RV_CSR_READ(CSR_MINSTRET);
 661:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else // TODO Need cover for XLEN=128 case in future
 662:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return (uint64_t)__RV_CSR_READ(CSR_MINSTRET);
 663:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 664:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 665:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 666:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 667:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Read whole 64 bits value of real-time clock
 668:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details This function will read the whole 64 bits of TIME register
 669:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \return  The whole 64 bits value of TIME CSR
 670:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \remarks It will work for both RV32 and RV64 to get full 64bits value of TIME
 671:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \attention only available when user mode available
 672:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 673:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE uint64_t __get_rv_time(void)
 674:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 675:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #if __RISCV_XLEN == 32
 676:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     volatile uint32_t high0, low, high;
 677:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     uint64_t full;
 678:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 679:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     high0 = __RV_CSR_READ(CSR_TIMEH);
 680:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     low = __RV_CSR_READ(CSR_TIME);
 681:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     high = __RV_CSR_READ(CSR_TIMEH);
 682:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     if (high0 != high) {
 683:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****         low = __RV_CSR_READ(CSR_TIME);
 684:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     }
 685:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     full = (((uint64_t)high) << 32) | low;
 686:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return full;
 687:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #elif __RISCV_XLEN == 64
 688:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return (uint64_t)__RV_CSR_READ(CSR_TIME);
 689:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #else // TODO Need cover for XLEN=128 case in future
 690:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     return (uint64_t)__RV_CSR_READ(CSR_TIME);
 691:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #endif
 692:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 693:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 694:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /** @} */ /* End of Doxygen Group NMSIS_Core_CSR_Register_Access */
 695:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 696:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /* ###########################  CPU Intrinsic Functions ########################### */
 697:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 698:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \defgroup NMSIS_Core_CPU_Intrinsic   Intrinsic Functions for CPU Intructions
 699:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \ingroup  NMSIS_Core
 700:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief    Functions that generate RISC-V CPU instructions.
 701:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 702:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *
 703:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * The following functions generate specified RISC-V instructions that cannot be directly accessed 
 704:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  *   @{
 705:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 706:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 707:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 708:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   NOP Instruction
 709:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 710:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * No Operation does nothing.
 711:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * This instruction can be used for code alignment purposes.
 712:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 713:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __NOP(void)
 714:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 715:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("nop");
 716:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 717:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 718:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 719:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Wait For Interrupt
 720:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 721:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Wait For Interrupt is is executed using CSR_WFE.WFE=0 and WFI instruction.
 722:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * It will suspends execution until interrupt, NMI or Debug happened.
 723:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * When Core is waked up by interrupt, if
 724:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * 1. mstatus.MIE == 1(interrupt enabled), Core will enter ISR code
 725:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * 2. mstatus.MIE == 0(interrupt disabled), Core will resume previous execution
 726:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 727:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __WFI(void)
 728:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 729:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_CLEAR(CSR_WFE, WFE_WFE);
  68              		.loc 3 729 5 is_stmt 0
  69 0014 0547     		li	a4,1
  70              	.L3:
  71              	.LBE157:
  72              	.LBE156:
  73              	.LBE155:
  74              		.loc 1 304 11 is_stmt 1
  75              		.loc 1 304 20 is_stmt 0
  76 0016 B247     		lw	a5,12(sp)
  77              		.loc 1 304 11
  78 0018 91C7     		beq	a5,zero,.L4
 305:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* This file calls prvTaskExitError() after the scheduler has been
 306:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         started to remove a compiler warning about the function being defined
 307:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         but never called.  ulDummy is used purely to quieten other warnings
 308:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         about code appearing after this function is called - making ulDummy
 309:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         volatile makes the compiler think the function could return and
 310:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         therefore not output an 'unreachable code' warning for code that appears
 311:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         after it. */
 312:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Sleep and wait for interrupt */
 313:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         __WFI();
 314:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 315:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
  79              		.loc 1 315 1
  80 001a 4101     		addi	sp,sp,16
  81              		.cfi_remember_state
  82              		.cfi_def_cfa_offset 0
  83 001c 17030000 		tail	__riscv_restore_0
  83      67000300 
  84              		.cfi_restore 1
  85              		.cfi_def_cfa_offset -16
  86              	.L4:
  87              		.cfi_restore_state
 313:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
  88              		.loc 1 313 9 is_stmt 1
  89              	.LBB160:
  90              	.LBB159:
  91              		.loc 3 729 5
  92              	.LBB158:
  93              		.loc 3 729 5
  94              	.LVL3:
  95              		.loc 3 729 5
  96              	 #APP
  97              	# 729 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
   0              	
  98              		csrc 0x810, a4
  99              	# 0 "" 2
 100              	 #NO_APP
 101              	.LBE158:
 730:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 102              		.loc 3 730 5
 103              	 #APP
 104              	# 730 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 731:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 105              		wfi
 106              	# 0 "" 2
 107              		.loc 3 731 1 is_stmt 0
 108              	 #NO_APP
 109 002c EDB7     		j	.L3
 110              	.LBE159:
 111              	.LBE160:
 112              		.cfi_endproc
 113              	.LFE370:
 115              		.section	.text.ulPortRaiseBASEPRI,"ax",@progbits
 116              		.align	1
 117              		.globl	ulPortRaiseBASEPRI
 119              	ulPortRaiseBASEPRI:
 120              	.LFB366:
 179:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t ulOriginalBASEPRI;
 121              		.loc 1 179 1 is_stmt 1
 122              		.cfi_startproc
 180:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 123              		.loc 1 180 5
 182:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetMth(uxMaxSysCallMTH);
 124              		.loc 1 182 5
 125              	.LBB161:
 126              	.LBB162:
 339:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 340:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 341:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 342:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get Machine Mode Interrupt Level Threshold
 343:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 344:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function gets machine mode interrupt level threshold.
 345:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \return       Interrupt Level Threshold.
 346:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 347:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_SetMth
 348:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 349:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint8_t __ECLIC_GetMth(void)
 350:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 351:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return (ECLIC->MTH);
 127              		.loc 2 351 5
 128              		.loc 2 351 18 is_stmt 0
 129 0000 B70700D2 		li	a5,-771751936
 130              	.LBE162:
 131              	.LBE161:
 183:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 132              		.loc 1 183 5
 133 0004 37070000 		lui	a4,%hi(.LANCHOR0)
 134              	.LBB165:
 135              	.LBB163:
 136              		.loc 2 351 18
 137 0008 03C5B700 		lbu	a0,11(a5)
 138              	.LBE163:
 139              	.LBE165:
 183:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 140              		.loc 1 183 5
 141 000c 03470700 		lbu	a4,%lo(.LANCHOR0)(a4)
 142              	.LBB166:
 143              	.LBB164:
 144              		.loc 2 351 18
 145 0010 1375F50F 		andi	a0,a0,0xff
 146              	.LVL4:
 147              	.LBE164:
 148              	.LBE166:
 183:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 149              		.loc 1 183 5 is_stmt 1
 150              	.LBB167:
 151              	.LBB168:
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 152              		.loc 2 338 5
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 153              		.loc 2 338 16 is_stmt 0
 154 0014 A385E700 		sb	a4,11(a5)
 155              	.LVL5:
 156              	.LBE168:
 157              	.LBE167:
 184:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 158              		.loc 1 184 5 is_stmt 1
 159              	 #APP
 160              	# 184 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 188:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 161              		fence iorw,iorw
 162              	# 0 "" 2
 163              		.loc 1 188 5
 189:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 164              		.loc 1 189 1 is_stmt 0
 165              	 #NO_APP
 166 001c 8280     		ret
 167              		.cfi_endproc
 168              	.LFE366:
 170              		.section	.text.vPortSetBASEPRI,"ax",@progbits
 171              		.align	1
 172              		.globl	vPortSetBASEPRI
 174              	vPortSetBASEPRI:
 175              	.LFB367:
 193:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetMth(ulNewMaskValue);
 176              		.loc 1 193 1 is_stmt 1
 177              		.cfi_startproc
 178              	.LVL6:
 194:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 179              		.loc 1 194 5
 180              	.LBB169:
 181              	.LBB170:
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 182              		.loc 2 338 5
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 183              		.loc 2 338 16 is_stmt 0
 184 0000 B70700D2 		li	a5,-771751936
 185 0004 A385A700 		sb	a0,11(a5)
 186              	.LVL7:
 187              	.LBE170:
 188              	.LBE169:
 195:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 189              		.loc 1 195 5 is_stmt 1
 190              	 #APP
 191              	# 195 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 196:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 192              		fence iorw,iorw
 193              	# 0 "" 2
 194              		.loc 1 196 1 is_stmt 0
 195              	 #NO_APP
 196 000c 8280     		ret
 197              		.cfi_endproc
 198              	.LFE367:
 200              		.section	.text.portYIELD,"ax",@progbits
 201              		.align	1
 202              		.globl	portYIELD
 204              	portYIELD:
 205              	.LFB368:
 200:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Set a software interrupt(SWI) request to request a context switch. */
 206              		.loc 1 200 1 is_stmt 1
 207              		.cfi_startproc
 202:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Barriers are normally not required but do ensure the code is completely
 208              		.loc 1 202 5
 209              	.LBB171:
 210              	.LBB172:
 211              		.file 4 "..\\..\\..\\..\\plf\\riscv\\NMSIS\\Core\\Include/core_feature_timer.h"
   1:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /*
   2:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * Copyright (c) 2019 Nuclei Limited. All rights reserved.
   3:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *
   4:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * SPDX-License-Identifier: Apache-2.0
   5:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *
   6:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
   7:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * not use this file except in compliance with the License.
   8:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * You may obtain a copy of the License at
   9:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *
  10:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * www.apache.org/licenses/LICENSE-2.0
  11:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *
  12:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * Unless required by applicable law or agreed to in writing, software
  13:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  14:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * See the License for the specific language governing permissions and
  16:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * limitations under the License.
  17:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
  18:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #ifndef __CORE_FEATURE_TIMER_H__
  19:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define __CORE_FEATURE_TIMER_H__
  20:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /*!
  21:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * @file     core_feature_timer.h
  22:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * @brief    System Timer feature API header file for Nuclei N/NX Core
  23:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
  24:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /*
  25:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * System Timer Feature Configuration Macro:
  26:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * 1. __SYSTIMER_PRESENT:  Define whether Private System Timer is present or not.
  27:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   * 0: Not present
  28:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   * 1: Present
  29:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * 2. __SYSTIMER_BASEADDR:  Define the base address of the System Timer.
  30:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
  31:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #ifdef __cplusplus
  32:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  extern "C" {
  33:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #endif
  34:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
  35:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #include "core_feature_base.h"
  36:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
  37:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #if defined(__SYSTIMER_PRESENT) && (__SYSTIMER_PRESENT == 1)
  38:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
  39:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \defgroup NMSIS_Core_SysTimer_Registers     Register Define and Type Definitions Of System Timer
  40:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \ingroup NMSIS_Core_Registers
  41:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief   Type definitions and defines for system timer registers.
  42:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *
  43:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * @{
  44:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
  45:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
  46:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Structure type to access the System Timer (SysTimer).
  47:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
  48:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * Structure definition to access the system timer(SysTimer).
  49:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
  50:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - MSFTRST register is introduced in Nuclei N Core version 1.3(\ref __NUCLEI_N_REV >= 0x0103)
  51:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - MSTOP register is renamed to MTIMECTL register in Nuclei N Core version 1.4(\ref __NUCLEI_N_RE
  52:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - CMPCLREN and CLKSRC bit in MTIMECTL register is introduced in Nuclei N Core version 1.4(\ref _
  53:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
  54:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** typedef struct {
  55:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     __IOM uint64_t MTIMER;                  /*!< Offset: 0x000 (R/W)  System Timer current value 64
  56:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     union {
  57:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         __IOM uint64_t MTIMERCMP_64;        /*!< Offset: 0x008 (R/W)  System Timer compare Value 64
  58:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         struct {
  59:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             __IOM uint32_t MTIMERCMP_lo;    /*!< Offset: 0x008 (R/W)  System Timer compare Value lo
  60:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             __IOM uint32_t MTIMERCMP_hi;    /*!< Offset: 0x00C (R/W)  System Timer compare Value hi
  61:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         } MTIMERCMP_32;
  62:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     } MTIMERCMP;
  63:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     __IOM uint32_t RESERVED0[0x3F8];        /*!< Offset: 0x010 - 0xFEC Reserved */
  64:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     __IOM uint32_t MSFTRST;                 /*!< Offset: 0xFF0 (R/W)  System Timer Software Core Re
  65:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     __IOM uint32_t RESERVED1;               /*!< Offset: 0xFF4 Reserved */
  66:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     __IOM uint32_t MTIMECTL;                /*!< Offset: 0xFF8 (R/W)  System Timer Control Register
  67:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     __IOM uint32_t MSIP;                    /*!< Offset: 0xFFC (R/W)  System Timer SW interrupt Reg
  68:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** } SysTimer_Type;
  69:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
  70:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /* Timer Control / Status Register Definitions */
  71:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMECTL_TIMESTOP_Pos      0U                                          /*!< SysTic
  72:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMECTL_TIMESTOP_Msk      (1UL << SysTimer_MTIMECTL_TIMESTOP_Pos)     /*!< SysTic
  73:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMECTL_CMPCLREN_Pos      1U                                          /*!< SysTic
  74:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMECTL_CMPCLREN_Msk      (1UL << SysTimer_MTIMECTL_CMPCLREN_Pos)     /*!< SysTic
  75:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMECTL_CLKSRC_Pos        2U                                          /*!< SysTic
  76:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMECTL_CLKSRC_Msk        (1UL << SysTimer_MTIMECTL_CLKSRC_Pos)       /*!< SysTic
  77:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
  78:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MSIP_MSIP_Pos              0U                                          /*!< SysTic
  79:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MSIP_MSIP_Msk              (1UL << SysTimer_MSIP_MSIP_Pos)             /*!< SysTic
  80:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
  81:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMER_Msk                 (0xFFFFFFFFFFFFFFFFULL)                     /*!< SysTic
  82:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMERCMP_Msk              (0xFFFFFFFFFFFFFFFFULL)                     /*!< SysTic
  83:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MTIMECTL_Msk               (0xFFFFFFFFUL)                              /*!< SysTic
  84:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MSIP_Msk                   (0xFFFFFFFFUL)                              /*!< SysTic
  85:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MSFTRST_Msk                (0xFFFFFFFFUL)                              /*!< SysTic
  86:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
  87:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_MSFRST_KEY                 (0x80000A5FUL)                              /*!< SysTic
  88:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
  89:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #ifndef __SYSTIMER_BASEADDR
  90:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /* Base address of SYSTIMER(__SYSTIMER_BASEADDR) should be defined in <Device.h> */
  91:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #error "__SYSTIMER_BASEADDR is not defined, please check!"
  92:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #endif
  93:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /* System Timer Memory mapping of Device  */
  94:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer_BASE                       __SYSTIMER_BASEADDR                         /*!< SysTic
  95:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #define SysTimer                            ((SysTimer_Type *) SysTimer_BASE)           /*!< SysTic
  96:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /** @} */ /* end of group NMSIS_Core_SysTimer_Registers */
  97:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
  98:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /* ##################################    SysTimer function  #######################################
  99:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 100:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \defgroup NMSIS_Core_SysTimer SysTimer Functions
 101:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief    Functions that configure the Core System Timer.
 102:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * @{
 103:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 104:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 105:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Set system timer load value
 106:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 107:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function set the system timer load value in MTIMER register.
 108:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \param [in]  value   value to set system timer MTIMER register.
 109:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 110:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Load value is 64bits wide.
 111:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_GetLoadValue
 112:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 113:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_SetLoadValue(uint64_t value)
 114:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 115:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer->MTIMER = value;
 116:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 117:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 118:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 119:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Get system timer load value
 120:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 121:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function get the system timer current value in MTIMER register.
 122:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \return  current value(64bit) of system timer MTIMER register.
 123:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 124:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Load value is 64bits wide.
 125:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_SetLoadValue
 126:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 127:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE uint64_t SysTimer_GetLoadValue(void)
 128:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     return SysTimer->MTIMER;
 130:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 131:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 132:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 133:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Set system timer compare value
 134:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 135:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function set the system Timer compare value in MTIMERCMP register.
 136:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \param [in]  value   compare value to set system timer MTIMERCMP register.
 137:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 138:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Compare value is 64bits wide.
 139:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - If compare value is larger than current value timer interrupt generate.
 140:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Modify the load value or compare value less to clear the interrupt.
 141:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_GetCompareValue
 142:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 143:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_SetCompareValue(uint64_t value)
 144:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 145:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     uint64_t cur_ticks = SysTimer->MTIMER;
 146:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 147:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     /* If the low 32bits of reload_ticks are smaller than cur_ticks, the high 32bits are written fi
 148:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****      * otherwise the low 32bits are written first to avoid unexpected interrupt. */
 149:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     if (__USUALLY((uint32_t)value > (uint32_t)cur_ticks)) {
 150:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_64 = value;
 151:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     } else {
 152:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_hi = (uint32_t)(value >> 32);
 153:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(value & 0xFFFFFFFF);
 154:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     }
 155:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 156:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 157:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 158:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Get system timer compare value
 159:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 160:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function get the system timer compare value in MTIMERCMP register.
 161:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \return  compare value of system timer MTIMERCMP register.
 162:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 163:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Compare value is 64bits wide.
 164:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_SetCompareValue
 165:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 166:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE uint64_t SysTimer_GetCompareValue(void)
 167:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 168:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     return SysTimer->MTIMERCMP.MTIMERCMP_64;
 169:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 170:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 171:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 172:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Enable system timer counter running
 173:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 174:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * Enable system timer counter running by clear
 175:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * TIMESTOP bit in MTIMECTL register.
 176:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 177:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_Start(void)
 178:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 179:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer->MTIMECTL &= ~(SysTimer_MTIMECTL_TIMESTOP_Msk);
 180:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 181:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 182:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 183:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Stop system timer counter running
 184:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 185:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * Stop system timer counter running by set
 186:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * TIMESTOP bit in MTIMECTL register.
 187:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 188:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_Stop(void)
 189:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 190:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer->MTIMECTL |= SysTimer_MTIMECTL_TIMESTOP_Msk;
 191:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 192:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 193:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 194:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Set system timer control value
 195:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 196:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function set the system timer MTIMECTL register value.
 197:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \param [in]  mctl    value to set MTIMECTL register
 198:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 199:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Bit TIMESTOP is used to start and stop timer.
 200:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   Clear TIMESTOP bit to 0 to start timer, otherwise to stop timer.
 201:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Bit CMPCLREN is used to enable auto MTIMER clear to zero when MTIMER >= MTIMERCMP.
 202:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   Clear CMPCLREN bit to 0 to stop auto clear MTIMER feature, otherwise to enable it.
 203:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Bit CLKSRC is used to select timer clock source.
 204:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   Clear CLKSRC bit to 0 to use *mtime_toggle_a*, otherwise use *core_clk_aon*
 205:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_GetControlValue
 206:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 207:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_SetControlValue(uint32_t mctl)
 208:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 209:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer->MTIMECTL = (mctl & SysTimer_MTIMECTL_Msk);
 210:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 211:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 212:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 213:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Get system timer control value
 214:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 215:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function get the system timer MTIMECTL register value.
 216:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \return  MTIMECTL register value
 217:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 218:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_SetControlValue
 219:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 220:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE uint32_t SysTimer_GetControlValue(void)
 221:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 222:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     return (SysTimer->MTIMECTL & SysTimer_MTIMECTL_Msk);
 223:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 224:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 225:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 226:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Trigger or set software interrupt via system timer
 227:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 228:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function set the system timer MSIP bit in MSIP register.
 229:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 230:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Set system timer MSIP bit and generate a SW interrupt.
 231:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_ClearSWIRQ
 232:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_GetMsipValue
 233:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 234:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_SetSWIRQ(void)
 235:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 236:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer->MSIP |= SysTimer_MSIP_MSIP_Msk;
 212              		.loc 4 236 5
 213              		.loc 4 236 20 is_stmt 0
 214 0000 371700D1 		li	a4,-788525056
 215 0004 8327C7FF 		lw	a5,-4(a4)
 216 0008 93E71700 		ori	a5,a5,1
 217 000c 232EF7FE 		sw	a5,-4(a4)
 218              	.LBE172:
 219              	.LBE171:
 205:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 220              		.loc 1 205 5 is_stmt 1
 221              	 #APP
 222              	# 205 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 206:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 223              		fence iorw,iorw
 224              	# 0 "" 2
 225              		.loc 1 206 1 is_stmt 0
 226              	 #NO_APP
 227 0014 8280     		ret
 228              		.cfi_endproc
 229              	.LFE368:
 231              		.section	.text.pxPortInitialiseStack,"ax",@progbits
 232              		.align	1
 233              		.globl	pxPortInitialiseStack
 235              	pxPortInitialiseStack:
 236              	.LFB369:
 258:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Simulate the stack frame as it would be created by a context switch
 237              		.loc 1 258 1 is_stmt 1
 238              		.cfi_startproc
 239              	.LVL8:
 264:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = portINITIAL_MSTATUS;    /* MSTATUS */
 240              		.loc 1 264 5
 265:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 241              		.loc 1 265 5
 265:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 242              		.loc 1 265 19 is_stmt 0
 243 0000 1167     		li	a4,16384
 244 0002 930705F8 		addi	a5,a0,-128
 245 0006 13070788 		addi	a4,a4,-1920
 246 000a F8DF     		sw	a4,124(a5)
 269:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #else
 247              		.loc 1 269 5 is_stmt 1
 248              	.LVL9:
 273:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack -= 6; /* X5 - X9 */
 249              		.loc 1 273 5
 275:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 250              		.loc 1 275 19 is_stmt 0
 251 000c 37070000 		lui	a4,%hi(prvTaskExitError)
 252 0010 13070700 		addi	a4,a4,%lo(prvTaskExitError)
 273:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack -= 6; /* X5 - X9 */
 253              		.loc 1 273 19
 254 0014 D0D3     		sw	a2,36(a5)
 274:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = (StackType_t) portTASK_RETURN_ADDRESS;      /* RA, X1 */
 255              		.loc 1 274 5 is_stmt 1
 256              	.LVL10:
 275:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 257              		.loc 1 275 5
 275:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 258              		.loc 1 275 19 is_stmt 0
 259 0016 D8C7     		sw	a4,12(a5)
 277:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = ((StackType_t) pxCode) ;        /* PC */
 260              		.loc 1 277 5 is_stmt 1
 261              	.LVL11:
 278:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 262              		.loc 1 278 5
 278:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 263              		.loc 1 278 19 is_stmt 0
 264 0018 8CC7     		sw	a1,8(a5)
 282:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     *pxTopOfStack = 0; /* FCSR */
 265              		.loc 1 282 5 is_stmt 1
 266              	.LVL12:
 283:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack -= 32 * (FPREGBYTES >> 2);
 267              		.loc 1 283 5
 283:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     pxTopOfStack -= 32 * (FPREGBYTES >> 2);
 268              		.loc 1 283 19 is_stmt 0
 269 001a 232205F8 		sw	zero,-124(a0)
 284:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
 270              		.loc 1 284 5 is_stmt 1
 271              	.LVL13:
 288:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 272              		.loc 1 288 5
 289:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 273              		.loc 1 289 1 is_stmt 0
 274 001e 130545F0 		addi	a0,a0,-252
 275              	.LVL14:
 276 0022 8280     		ret
 277              		.cfi_endproc
 278              	.LFE369:
 280              		.section	.text.vPortEndScheduler,"ax",@progbits
 281              		.align	1
 282              		.globl	vPortEndScheduler
 284              	vPortEndScheduler:
 285              	.LFB373:
 316:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 317:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configASSERT_DEFINED == 1 )
 318:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** static uint8_t prvCheckMaxSysCallPrio(uint8_t max_syscall_prio)
 319:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 320:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t nlbits = __ECLIC_GetCfgNlbits();
 321:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t intctlbits = __ECLIC_INTCTLBITS;
 322:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t lvlbits, temp;
 323:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 324:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (nlbits <= intctlbits) {
 325:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         lvlbits = nlbits;
 326:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     } else {
 327:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         lvlbits = intctlbits;
 328:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 329:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 330:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     temp = ((1 << lvlbits) - 1);
 331:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (max_syscall_prio > temp) {
 332:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         max_syscall_prio = temp;
 333:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 334:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     return max_syscall_prio;
 335:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 336:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
 337:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 338:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** static uint8_t prvCalcMaxSysCallMTH(uint8_t max_syscall_prio)
 339:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 340:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t nlbits = __ECLIC_GetCfgNlbits();
 341:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t intctlbits = __ECLIC_INTCTLBITS;
 342:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t lvlbits, lfabits;
 343:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t maxsyscallmth = 0;
 344:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t temp;
 345:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 346:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (nlbits <= intctlbits) {
 347:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         lvlbits = nlbits;
 348:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     } else {
 349:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         lvlbits = intctlbits;
 350:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 351:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 352:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     lfabits = 8 - lvlbits;
 353:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 354:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     temp = ((1 << lvlbits) - 1);
 355:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (max_syscall_prio > temp) {
 356:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         max_syscall_prio = temp;
 357:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 358:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 359:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     maxsyscallmth = (max_syscall_prio << lfabits) | ((1 << lfabits) - 1);
 360:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 361:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     return maxsyscallmth;
 362:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 363:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 364:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 365:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * See header file for description.
 366:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 367:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** BaseType_t xPortStartScheduler(void)
 368:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 369:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0. */
 370:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     configASSERT(configMAX_SYSCALL_INTERRUPT_PRIORITY);
 371:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 372:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Get the real MTH should be set to ECLIC MTH register */
 373:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uxMaxSysCallMTH = prvCalcMaxSysCallMTH(configMAX_SYSCALL_INTERRUPT_PRIORITY);
 374:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     FREERTOS_PORT_DEBUG("Max SysCall MTH is set to 0x%x\n", uxMaxSysCallMTH);
 375:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 376:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configASSERT_DEFINED == 1 )
 377:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     {
 378:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Use the same mask on the maximum system call priority. */
 379:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ucMaxSysCallPriority = prvCheckMaxSysCallPrio(configMAX_SYSCALL_INTERRUPT_PRIORITY);
 380:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         FREERTOS_PORT_DEBUG("Max SysCall Priority is set to %d\n", ucMaxSysCallPriority);
 381:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 382:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif /* conifgASSERT_DEFINED */
 383:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 384:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __disable_irq();
 385:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Start the timer that generates the tick ISR.  Interrupts are disabled
 386:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     here already. */
 387:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     vPortSetupTimerInterrupt();
 388:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 389:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Initialise the critical nesting count ready for the first task. */
 390:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uxCriticalNesting = 0;
 391:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 392:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Start the first task. */
 393:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     prvPortStartFirstTask();
 394:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 395:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Should never get here as the tasks will now be executing!  Call the task
 396:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     exit error function to prevent compiler warnings about a static function
 397:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     not being called in the case that the application writer overrides this
 398:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     functionality by defining configTASK_RETURN_ADDRESS.  Call
 399:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     vTaskSwitchContext() so link time optimisation does not remove the
 400:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     symbol. */
 401:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     vTaskSwitchContext();
 402:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     prvTaskExitError();
 403:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 404:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Should not get here! */
 405:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     return 0;
 406:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 407:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 408:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 409:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vPortEndScheduler(void)
 410:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 286              		.loc 1 410 1 is_stmt 1
 287              		.cfi_startproc
 411:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Not implemented in ports where there is nothing to return to.
 412:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     Artificially force an assert. */
 413:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     configASSERT(uxCriticalNesting == 1000UL);
 288              		.loc 1 413 46
 414:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 289              		.loc 1 414 1 is_stmt 0
 290 0000 8280     		ret
 291              		.cfi_endproc
 292              	.LFE373:
 294              		.section	.text.vPortEnterCritical,"ax",@progbits
 295              		.align	1
 296              		.globl	vPortEnterCritical
 298              	vPortEnterCritical:
 299              	.LFB374:
 415:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 416:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 417:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vPortEnterCritical(void)
 418:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 300              		.loc 1 418 1 is_stmt 1
 301              		.cfi_startproc
 302 0000 17030000 		call	t0,__riscv_save_0
 302      E7020300 
 303              		.cfi_offset 1, -4
 304              		.cfi_def_cfa_offset 16
 419:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     portDISABLE_INTERRUPTS();
 305              		.loc 1 419 5
 306 0008 97000000 		call	vPortRaiseBASEPRI
 306      E7800000 
 307              	.LVL15:
 420:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uxCriticalNesting++;
 308              		.loc 1 420 5
 309              		.loc 1 420 22 is_stmt 0
 310 0010 B7070000 		lui	a5,%hi(.LANCHOR1)
 311 0014 93870700 		addi	a5,a5,%lo(.LANCHOR1)
 312 0018 9843     		lw	a4,0(a5)
 313 001a 0507     		addi	a4,a4,1
 314 001c 98C3     		sw	a4,0(a5)
 421:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 422:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* This is not the interrupt safe version of the enter critical function so
 423:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     assert() if it is being called from an interrupt context.  Only API
 424:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     functions that end in "FromISR" can be used in an interrupt.  Only assert if
 425:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     the critical nesting count is 1 to protect against recursive calls if the
 426:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     assert function also uses a critical section. */
 427:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (uxCriticalNesting == 1) {
 315              		.loc 1 427 5 is_stmt 1
 428:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         configASSERT((__ECLIC_GetMth() & portMTH_MASK) == uxMaxSysCallMTH);
 316              		.loc 1 428 75
 429:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 430:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 317              		.loc 1 430 1 is_stmt 0
 318 001e 17030000 		tail	__riscv_restore_0
 318      67000300 
 319              		.cfi_restore 1
 320              		.cfi_def_cfa_offset 0
 321              		.cfi_endproc
 322              	.LFE374:
 324              		.section	.text.vPortExitCritical,"ax",@progbits
 325              		.align	1
 326              		.globl	vPortExitCritical
 328              	vPortExitCritical:
 329              	.LFB375:
 431:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 432:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 433:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vPortExitCritical(void)
 434:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 330              		.loc 1 434 1 is_stmt 1
 331              		.cfi_startproc
 435:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     configASSERT(uxCriticalNesting);
 332              		.loc 1 435 36
 436:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uxCriticalNesting--;
 333              		.loc 1 436 5
 334              		.loc 1 436 22 is_stmt 0
 335 0000 37070000 		lui	a4,%hi(.LANCHOR1)
 336 0004 13070700 		addi	a4,a4,%lo(.LANCHOR1)
 337 0008 1C43     		lw	a5,0(a4)
 338 000a FD17     		addi	a5,a5,-1
 339 000c 1CC3     		sw	a5,0(a4)
 437:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (uxCriticalNesting == 0) {
 340              		.loc 1 437 5 is_stmt 1
 341              		.loc 1 437 8 is_stmt 0
 342 000e 99E7     		bne	a5,zero,.L13
 438:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         portENABLE_INTERRUPTS();
 343              		.loc 1 438 9 is_stmt 1
 344              	.LVL16:
 345              	.LBB173:
 346              	.LBB174:
 194:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 347              		.loc 1 194 5
 348              	.LBB175:
 349              	.LBB176:
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 350              		.loc 2 338 5
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 351              		.loc 2 338 16 is_stmt 0
 352 0010 B70700D2 		li	a5,-771751936
 353 0014 A3850700 		sb	zero,11(a5)
 354              	.LVL17:
 355              	.LBE176:
 356              	.LBE175:
 195:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 357              		.loc 1 195 5 is_stmt 1
 358              	 #APP
 359              	# 195 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 360              		fence iorw,iorw
 361              	# 0 "" 2
 362              	.LVL18:
 363              	 #NO_APP
 364              	.L13:
 365              	.LBE174:
 366              	.LBE173:
 439:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 440:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 367              		.loc 1 440 1 is_stmt 0
 368 001c 8280     		ret
 369              		.cfi_endproc
 370              	.LFE375:
 372              		.section	.text.vPortInCritical,"ax",@progbits
 373              		.align	1
 374              		.globl	vPortInCritical
 376              	vPortInCritical:
 377              	.LFB376:
 441:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 442:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** uint32_t vPortInCritical(void)
 443:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 378              		.loc 1 443 1 is_stmt 1
 379              		.cfi_startproc
 444:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     return uxCriticalNesting;
 380              		.loc 1 444 5
 445:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 381              		.loc 1 445 1 is_stmt 0
 382 0000 B7070000 		lui	a5,%hi(.LANCHOR1)
 383 0004 03A50700 		lw	a0,%lo(.LANCHOR1)(a5)
 384 0008 8280     		ret
 385              		.cfi_endproc
 386              	.LFE376:
 388              		.section	.text.vPortAssert,"ax",@progbits
 389              		.align	1
 390              		.globl	vPortAssert
 392              	vPortAssert:
 393              	.LFB377:
 446:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 447:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 448:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 449:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vPortAssert(int32_t x)
 450:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 394              		.loc 1 450 1 is_stmt 1
 395              		.cfi_startproc
 396              	.LVL19:
 451:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if ((x) == 0) {
 397              		.loc 1 451 5
 398              		.loc 1 451 8 is_stmt 0
 399 0000 19ED     		bne	a0,zero,.L16
 450:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if ((x) == 0) {
 400              		.loc 1 450 1
 401 0002 17030000 		call	t0,__riscv_save_0
 401      E7020300 
 402              		.cfi_offset 1, -4
 403              		.cfi_def_cfa_offset 16
 452:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         taskDISABLE_INTERRUPTS();
 404              		.loc 1 452 9 is_stmt 1
 405 000a 97000000 		call	vPortRaiseBASEPRI
 405      E7800000 
 406              	.LVL20:
 407              	.LBB177:
 408              	.LBB178:
 409              	.LBB179:
 729:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 410              		.loc 3 729 5 is_stmt 0
 411 0012 8547     		li	a5,1
 412              	.L18:
 413              	.LBE179:
 414              	.LBE178:
 415              	.LBE177:
 453:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if (INCLUDE_xTaskGetCurrentTaskHandle == 1)
 454:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         TaskHandle_t th = xTaskGetCurrentTaskHandle();
 455:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (th) {
 456:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             printf("Assert in task %s\n", pcTaskGetName(th));
 457:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 458:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
 459:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         while (1) {
 416              		.loc 1 459 9 is_stmt 1 discriminator 1
 460:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Sleep and wait for interrupt */
 461:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __WFI();
 417              		.loc 1 461 13 discriminator 1
 418              	.LBB182:
 419              	.LBB181:
 729:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 420              		.loc 3 729 5 discriminator 1
 421              	.LBB180:
 729:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 422              		.loc 3 729 5 discriminator 1
 423              	.LVL21:
 729:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 424              		.loc 3 729 5 discriminator 1
 425              	 #APP
 426              	# 729 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 427              		csrc 0x810, a5
 428              	# 0 "" 2
 429              	 #NO_APP
 430              	.LBE180:
 730:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 431              		.loc 3 730 5 discriminator 1
 432              	 #APP
 433              	# 730 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 434              		wfi
 435              	# 0 "" 2
 436              	 #NO_APP
 437 001c E5BF     		j	.L18
 438              	.LVL22:
 439              	.L16:
 440              		.cfi_def_cfa_offset 0
 441              		.cfi_restore 1
 442 001e 8280     		ret
 443              	.LBE181:
 444              	.LBE182:
 445              		.cfi_endproc
 446              	.LFE377:
 448              		.section	.text.xPortTaskSwitch,"ax",@progbits
 449              		.align	1
 450              		.globl	xPortTaskSwitch
 452              	xPortTaskSwitch:
 453              	.LFB378:
 462:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         };
 463:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 464:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 465:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 466:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 467:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 468:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void xPortTaskSwitch(void)
 469:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 454              		.loc 1 469 1
 455              		.cfi_startproc
 456 0000 17030000 		call	t0,__riscv_save_0
 456      E7020300 
 457              		.cfi_offset 1, -4
 458              		.cfi_def_cfa_offset 16
 470:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     portDISABLE_INTERRUPTS();
 459              		.loc 1 470 5
 460 0008 97000000 		call	vPortRaiseBASEPRI
 460      E7800000 
 461              	.LVL23:
 471:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Clear Software IRQ, A MUST */
 472:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     SysTimer_ClearSWIRQ();
 462              		.loc 1 472 5
 463              	.LBB183:
 464              	.LBB184:
 237:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 238:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 239:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 240:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Clear system timer software interrupt pending request
 241:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 242:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function clear the system timer MSIP bit in MSIP register.
 243:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 244:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Clear system timer MSIP bit in MSIP register to clear the software interrupt pending.
 245:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_SetSWIRQ
 246:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_GetMsipValue
 247:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 248:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_ClearSWIRQ(void)
 249:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 250:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer->MSIP &= ~SysTimer_MSIP_MSIP_Msk;
 465              		.loc 4 250 5
 466              		.loc 4 250 20 is_stmt 0
 467 0010 371700D1 		li	a4,-788525056
 468 0014 8327C7FF 		lw	a5,-4(a4)
 469 0018 F99B     		andi	a5,a5,-2
 470 001a 232EF7FE 		sw	a5,-4(a4)
 471              	.LBE184:
 472              	.LBE183:
 473:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     vTaskSwitchContext();
 473              		.loc 1 473 5 is_stmt 1
 474 001e 97000000 		call	vTaskSwitchContext
 474      E7800000 
 475              	.LVL24:
 474:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     portENABLE_INTERRUPTS();
 476              		.loc 1 474 5
 477              	.LBB185:
 478              	.LBB186:
 194:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 479              		.loc 1 194 5
 480              	.LBB187:
 481              	.LBB188:
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 482              		.loc 2 338 5
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 483              		.loc 2 338 16 is_stmt 0
 484 0026 B70700D2 		li	a5,-771751936
 485 002a A3850700 		sb	zero,11(a5)
 486              	.LVL25:
 487              	.LBE188:
 488              	.LBE187:
 195:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 489              		.loc 1 195 5 is_stmt 1
 490              	 #APP
 491              	# 195 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 492              		fence iorw,iorw
 493              	# 0 "" 2
 494              	.LVL26:
 495              	 #NO_APP
 496              	.LBE186:
 497              	.LBE185:
 475:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 498              		.loc 1 475 1 is_stmt 0
 499 0032 17030000 		tail	__riscv_restore_0
 499      67000300 
 500              		.cfi_restore 1
 501              		.cfi_def_cfa_offset 0
 502              		.cfi_endproc
 503              	.LFE378:
 505              		.section	.text.eclic_mtip_handler,"ax",@progbits
 506              		.align	1
 507              		.globl	eclic_mtip_handler
 509              	eclic_mtip_handler:
 510              	.LFB379:
 476:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 477:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 478:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 479:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** extern void systick_lock_release(void);
 480:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** extern void systick_lock_acquire(void);
 481:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
 482:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 483:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void xPortSysTickHandler(void)
 484:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 511              		.loc 1 484 1 is_stmt 1
 512              		.cfi_startproc
 513 0000 17030000 		call	t0,__riscv_save_0
 513      E7020300 
 514              		.cfi_offset 1, -4
 515              		.cfi_def_cfa_offset 16
 485:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* The SysTick runs at the lowest interrupt priority, so when this interrupt
 486:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     executes all interrupts must be unmasked.  There is therefore no need to
 487:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     save and then restore the interrupt mask value as its value is already
 488:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     known. */
 489:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     portDISABLE_INTERRUPTS();
 516              		.loc 1 489 5
 517 0008 97000000 		call	vPortRaiseBASEPRI
 517      E7800000 
 518              	.LVL27:
 490:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     {
 491:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 492:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         systick_lock_release();
 519              		.loc 1 492 9
 520 0010 97000000 		call	systick_lock_release
 520      E7800000 
 521              	.LVL28:
 493:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif
 494:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         SysTick_Reload(SYSTICK_TICK_CONST);
 522              		.loc 1 494 9
 523              		.loc 1 494 24 is_stmt 0
 524 0018 B7070000 		lui	a5,%hi(SystemCoreClock)
 525 001c 03A70700 		lw	a4,%lo(SystemCoreClock)(a5)
 526              		.loc 1 494 9
 527 0020 9307803E 		li	a5,1000
 528 0024 3356F702 		divu	a2,a4,a5
 529              	.LBB189:
 530              	.LBB190:
 251:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 252:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 253:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 254:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Get system timer MSIP register value
 255:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 256:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function get the system timer MSIP register value.
 257:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \return    Value of Timer MSIP register.
 258:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 259:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Bit0 is SW interrupt flag.
 260:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   Bit0 is 1 then SW interrupt set. Bit0 is 0 then SW interrupt clear.
 261:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_SetSWIRQ
 262:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_ClearSWIRQ
 263:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 264:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE uint32_t SysTimer_GetMsipValue(void)
 265:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 266:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     return (uint32_t)(SysTimer->MSIP & SysTimer_MSIP_Msk);
 267:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 268:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 269:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 270:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Set system timer MSIP register value
 271:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 272:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function set the system timer MSIP register value.
 273:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \param [in]  msip   value to set MSIP register
 274:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 275:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_SetMsipValue(uint32_t msip)
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 277:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer->MSIP = (msip & SysTimer_MSIP_Msk);
 278:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 279:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 280:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 281:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief  Do software reset request
 282:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details
 283:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * This function will do software reset request through MTIMER
 284:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Software need to write \ref SysTimer_MSFRST_KEY to generate software reset request
 285:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - The software request flag can be cleared by reset operation to clear
 286:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 287:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - The software reset is sent to SoC, SoC need to generate reset signal and send back to Core
 288:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - This function will not return, it will do while(1) to wait the Core reset happened
 289:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 290:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE void SysTimer_SoftwareReset(void)
 291:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 292:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer->MSFTRST = SysTimer_MSFRST_KEY;
 293:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     while(1);
 294:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 295:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 296:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U) && defined(__ECLIC_PRESENT) 
 297:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 298:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief   System Tick Configuration
 299:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details Initializes the System Timer and its non-vector interrupt, and starts the System Tick T
 300:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *
 301:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *  In our default implementation, the timer counter will be set to zero, and it will start a timer
 302:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *  when it matchs the ticks user set, during the timer interrupt user should reload the system tic
 303:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *  or similar function written by user, so it can produce period timer interrupt.
 304:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \param [in]  ticks  Number of ticks between two interrupts.
 305:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \return          0  Function succeeded.
 306:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \return          1  Function failed.
 307:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 308:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - For \ref __NUCLEI_N_REV >= 0x0104, the CMPCLREN bit in MTIMECTL is introduced,
 309:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   but we assume that the CMPCLREN bit is set to 0, so MTIMER register will not be
 310:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   auto cleared to 0 when MTIMER >= MTIMERCMP.
 311:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - When the variable \ref __Vendor_SysTickConfig is set to 1, then the
 312:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   function \ref SysTick_Config is not included.
 313:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - In this case, the file <b><Device>.h</b> must contain a vendor-specific implementation
 314:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   of this function.
 315:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - If user need this function to start a period timer interrupt, then in timer interrupt handler
 316:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   routine code, user should call \ref SysTick_Reload with ticks to reload the timer.
 317:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - This function only available when __SYSTIMER_PRESENT == 1 and __ECLIC_PRESENT == 1 and __Vendo
 318:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \sa
 319:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_SetCompareValue; SysTimer_SetLoadValue
 320:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 321:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_INLINE uint32_t SysTick_Config(uint64_t ticks)
 322:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 323:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer_SetLoadValue(0);
 324:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer_SetCompareValue(ticks);
 325:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     ECLIC_SetShvIRQ(CLIC_INT_TMR, ECLIC_NON_VECTOR_INTERRUPT);
 326:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     ECLIC_SetLevelIRQ(CLIC_INT_TMR, 0);
 327:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     ECLIC_EnableIRQ(CLIC_INT_TMR);
 328:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     return (0UL);
 329:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 330:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 331:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** /**
 332:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \brief   System Tick Reload
 333:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \details Reload the System Timer Tick when the MTIMECMP reached TIME value
 334:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *
 335:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \param [in]  ticks  Number of ticks between two interrupts.
 336:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \return          0  Function succeeded.
 337:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \return          1  Function failed.
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \remarks
 339:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - For \ref __NUCLEI_N_REV >= 0x0104, the CMPCLREN bit in MTIMECTL is introduced,
 340:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   but for this \ref SysTick_Config function, we assume this CMPCLREN bit is set to 0,
 341:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   so in interrupt handler function, user still need to set the MTIMERCMP or MTIMER to reload
 342:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   the system tick, if vendor want to use this timer's auto clear feature, they can define
 343:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   \ref __Vendor_SysTickConfig to 1, and implement \ref SysTick_Config and \ref SysTick_Reload fu
 344:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - When the variable \ref __Vendor_SysTickConfig is set to 1, then the
 345:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   function \ref SysTick_Reload is not included.
 346:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - In this case, the file <b><Device>.h</b> must contain a vendor-specific implementation
 347:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  *   of this function.
 348:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - This function only available when __SYSTIMER_PRESENT == 1 and __ECLIC_PRESENT == 1 and __Vendo
 349:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - Since the MTIMERCMP value might overflow, if overflowed, MTIMER will be set to 0, and MTIMERCM
 350:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * \sa
 351:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_SetCompareValue
 352:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  * - \ref SysTimer_SetLoadValue
 353:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****  */
 354:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** __STATIC_FORCEINLINE uint32_t SysTick_Reload(uint64_t ticks)
 355:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** {
 356:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     uint64_t cur_ticks = SysTimer->MTIMER;
 531              		.loc 4 356 5 is_stmt 1
 532              		.loc 4 356 14 is_stmt 0
 533 0028 B70700D1 		li	a5,-788529152
 534 002c 8843     		lw	a0,0(a5)
 535 002e CC43     		lw	a1,4(a5)
 536              	.LVL29:
 357:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     uint64_t reload_ticks = ticks + cur_ticks;
 537              		.loc 4 357 5 is_stmt 1
 538              		.loc 4 357 14 is_stmt 0
 539 0030 B308A600 		add	a7,a2,a0
 540 0034 33B8C800 		sltu	a6,a7,a2
 541 0038 2E98     		add	a6,a6,a1
 542 003a 4687     		mv	a4,a7
 543 003c C287     		mv	a5,a6
 544              	.LVL30:
 358:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 359:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     if (__USUALLY(reload_ticks > cur_ticks)) {
 545              		.loc 4 359 5 is_stmt 1
 546              		.loc 4 359 8 is_stmt 0
 547 003e 63E00503 		bgtu	a6,a1,.L30
 548 0042 8146     		li	a3,0
 549 0044 6314B800 		bne	a6,a1,.L25
 550 0048 636DE500 		bltu	a0,a4,.L34
 551              	.L25:
 360:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         /* If the low 32bits of reload_ticks are smaller than cur_ticks, the high 32bits are writte
 361:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****          * otherwise the low 32bits are written first to avoid unexpected interrupt. */
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         if (__USUALLY((uint32_t)reload_ticks > (uint32_t)cur_ticks)) {
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_64 = reload_ticks;
 364:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         } else {
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_hi = (uint32_t)(reload_ticks >> 32);
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(reload_ticks & 0xFFFFFFFF);
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         }
 368:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     } else {
 369:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         /* When added the ticks value, then the MTIMERCMP < TIMER,
 370:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****          * which means the MTIMERCMP is overflowed,
 371:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****          * so we need to reset the counter to zero */
 372:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMER = 0;
 552              		.loc 4 372 9 is_stmt 1
 553              		.loc 4 372 26 is_stmt 0
 554 004c B70700D1 		li	a5,-788529152
 555 0050 0145     		li	a0,0
 556              	.LVL31:
 557 0052 88C3     		sw	a0,0(a5)
 558 0054 8145     		li	a1,0
 559 0056 CCC3     		sw	a1,4(a5)
 373:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_64 = ticks;
 560              		.loc 4 373 9 is_stmt 1
 561              		.loc 4 373 42 is_stmt 0
 562 0058 90C7     		sw	a2,8(a5)
 563 005a D4C7     		sw	a3,12(a5)
 564 005c 39A0     		j	.L28
 565              	.LVL32:
 566              	.L30:
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_64 = reload_ticks;
 567              		.loc 4 362 9 is_stmt 1
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_64 = reload_ticks;
 568              		.loc 4 362 12 is_stmt 0
 569 005e 63791503 		bgeu	a0,a7,.L27
 570              	.L34:
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         } else {
 571              		.loc 4 363 13 is_stmt 1
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         } else {
 572              		.loc 4 363 46 is_stmt 0
 573 0062 B70600D1 		li	a3,-788529152
 574 0066 98C6     		sw	a4,8(a3)
 575 0068 DCC6     		sw	a5,12(a3)
 576              	.LVL33:
 577              	.L28:
 374:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     }
 375:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 376:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     return (0UL);
 578              		.loc 4 376 5 is_stmt 1
 579              	.LBE190:
 580              	.LBE189:
 495:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Increment the RTOS tick. */
 496:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (xTaskIncrementTick() != pdFALSE) {
 581              		.loc 1 496 9
 582              		.loc 1 496 13 is_stmt 0
 583 006a 97000000 		call	xTaskIncrementTick
 583      E7800000 
 584              	.LVL34:
 585              		.loc 1 496 12
 586 0072 09C5     		beq	a0,zero,.L29
 497:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* A context switch is required.  Context switching is performed in
 498:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             the SWI interrupt.  Pend the SWI interrupt. */
 499:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             portYIELD();
 587              		.loc 1 499 13 is_stmt 1
 588 0074 97000000 		call	portYIELD
 588      E7800000 
 589              	.LVL35:
 590              	.L29:
 500:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 501:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 502:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     portENABLE_INTERRUPTS();
 591              		.loc 1 502 5
 592              	.LBB192:
 593              	.LBB193:
 194:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __RWMB();
 594              		.loc 1 194 5
 595              	.LBB194:
 596              	.LBB195:
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 597              		.loc 2 338 5
 338:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 598              		.loc 2 338 16 is_stmt 0
 599 007c B70700D2 		li	a5,-771751936
 600 0080 A3850700 		sb	zero,11(a5)
 601              	.LVL36:
 602              	.LBE195:
 603              	.LBE194:
 195:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 604              		.loc 1 195 5 is_stmt 1
 605              	 #APP
 606              	# 195 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 607              		fence iorw,iorw
 608              	# 0 "" 2
 609              	.LVL37:
 610              	 #NO_APP
 611              	.LBE193:
 612              	.LBE192:
 503:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 613              		.loc 1 503 1 is_stmt 0
 614 0088 17030000 		tail	__riscv_restore_0
 614      67000300 
 615              		.cfi_remember_state
 616              		.cfi_restore 1
 617              		.cfi_def_cfa_offset 0
 618              	.LVL38:
 619              	.L27:
 620              		.cfi_restore_state
 621              	.LBB196:
 622              	.LBB191:
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(reload_ticks & 0xFFFFFFFF);
 623              		.loc 4 365 13 is_stmt 1
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(reload_ticks & 0xFFFFFFFF);
 624              		.loc 4 365 59 is_stmt 0
 625 0090 B70600D1 		li	a3,-788529152
 626 0094 23A60601 		sw	a6,12(a3)
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         }
 627              		.loc 4 366 13 is_stmt 1
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         }
 628              		.loc 4 366 59 is_stmt 0
 629 0098 23A41601 		sw	a7,8(a3)
 630 009c F9B7     		j	.L28
 631              	.LBE191:
 632              	.LBE196:
 633              		.cfi_endproc
 634              	.LFE379:
 636              		.globl	__udivdi3
 637              		.section	.text.vPortSuppressTicksAndSleep,"ax",@progbits
 638              		.align	1
 639              		.weak	vPortSuppressTicksAndSleep
 641              	vPortSuppressTicksAndSleep:
 642              	.LFB380:
 504:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 505:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 506:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 507:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 508:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** __attribute__((weak)) void vPortSuppressTicksAndSleep(TickType_t xExpectedIdleTime)
 509:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 643              		.loc 1 509 1 is_stmt 1
 644              		.cfi_startproc
 645              	.LVL39:
 646 0000 17030000 		call	t0,__riscv_save_4
 646      E7020300 
 647              		.cfi_offset 19, -20
 648              		.cfi_offset 18, -16
 649              		.cfi_offset 9, -12
 650              		.cfi_offset 8, -8
 651              		.cfi_offset 1, -4
 652              		.cfi_def_cfa_offset 32
 510:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 653              		.loc 1 510 5
 511:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     volatile TickType_t xModifiableIdleTime, XLastLoadValue;//xTickCountBeforeSleep
 654              		.loc 1 511 5
 512:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 513:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     FREERTOS_PORT_DEBUG("Enter TickLess %d\n", (uint32_t)xExpectedIdleTime);
 655              		.loc 1 513 76
 514:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 515:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Make sure the SysTick reload value does not overflow the counter. */
 516:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (xExpectedIdleTime > xMaximumPossibleSuppressedTicks) {
 656              		.loc 1 516 5
 509:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 657              		.loc 1 509 1 is_stmt 0
 658 0008 0111     		addi	sp,sp,-32
 659              		.cfi_def_cfa_offset 64
 660              		.loc 1 516 27
 661 000a B7070000 		lui	a5,%hi(.LANCHOR2)
 662 000e 93870700 		addi	a5,a5,%lo(.LANCHOR2)
 509:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 663              		.loc 1 509 1
 664 0012 2EC6     		sw	a1,12(sp)
 665              		.loc 1 516 27
 666 0014 9843     		lw	a4,0(a5)
 667              		.loc 1 516 8
 668 0016 B246     		lw	a3,12(sp)
 669              		.loc 1 516 27
 670 0018 DC43     		lw	a5,4(a5)
 509:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 671              		.loc 1 509 1
 672 001a 2AC4     		sw	a0,8(sp)
 673              		.loc 1 516 8
 674 001c 63E7D700 		bgtu	a3,a5,.L62
 675 0020 6397F600 		bne	a3,a5,.L37
 676 0024 A246     		lw	a3,8(sp)
 677 0026 6374D700 		bleu	a3,a4,.L37
 678              	.L62:
 517:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 679              		.loc 1 517 9 is_stmt 1
 680              		.loc 1 517 27 is_stmt 0
 681 002a 3AC4     		sw	a4,8(sp)
 682 002c 3EC6     		sw	a5,12(sp)
 683              	.L37:
 518:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 519:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 520:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Enter a critical section but don't use the taskENTER_CRITICAL()
 521:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     method as that will mask interrupts that should exit sleep mode. */
 522:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     __disable_irq();
 684              		.loc 1 522 5 is_stmt 1
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 685              		.loc 3 609 5
 686              	.LBB197:
 687              	.LBB198:
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 688              		.loc 3 609 5
 689              	.LVL40:
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 690              		.loc 3 609 5
 691 002e A147     		li	a5,8
 692              	 #APP
 693              	# 609 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 694              		csrc 0x300, a5
 695              	# 0 "" 2
 696              	 #NO_APP
 697              	.LBE198:
 698              	.LBE197:
 523:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 524:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* If a context switch is pending or a task is waiting for the scheduler
 525:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     to be unsuspended then abandon the low power entry. */
 526:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (eTaskConfirmSleepModeStatus() == eAbortSleep || !freertos_ready_to_sleep()) {
 699              		.loc 1 526 5
 700              		.loc 1 526 9 is_stmt 0
 701 0034 97000000 		call	eTaskConfirmSleepModeStatus
 701      E7800000 
 702              	.LVL41:
 703              		.loc 1 526 8
 704 003c 09E9     		bne	a0,zero,.L39
 705              	.L78:
 527:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Restart from whatever is left in the count register to complete
 528:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         this tick period. */
 529:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Restart SysTick. */
 530:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         //SysTimer_Start();
 531:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 532:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         // GD32VW55X, it will cause lost ticks too much as 1:4000 if reload tick here
 533:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Reset the reload register to the value required for normal tick
 534:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****            periods. */
 535:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         // SysTick_Reload(ulTimerCountsForOneTick);
 536:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 537:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Re-enable interrupts - see comments above the cpsid instruction()
 538:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****            above. */
 539:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         __enable_irq();
 540:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     } else {
 541:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Stop the SysTick momentarily.  The time the SysTick is stopped for
 542:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         is accounted for as best it can be, but using the tickless mode will
 543:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         inevitably result in some tiny drift of the time maintained by the
 544:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         kernel with respect to calendar time. */
 545:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         SysTimer_Stop();
 546:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 547:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Calculate the reload value required to wait xExpectedIdleTime
 548:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         tick periods.  -1 is used because this code will execute part way
 549:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         through one of the tick periods. */
 550:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ulReloadValue = (ulTimerCountsForOneTick * (xExpectedIdleTime - 1UL));
 551:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (ulReloadValue > ulStoppedTimerCompensation) {
 552:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             ulReloadValue -= ulStoppedTimerCompensation;
 553:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 554:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 555:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         // xTickCountBeforeSleep = xTaskGetTickCount();
 556:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 557:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Set the new reload value. */
 558:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         SysTick_Reload(ulReloadValue);
 559:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 560:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Get System timer load value before sleep */
 561:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         XLastLoadValue = SysTimer_GetLoadValue();
 562:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 563:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Restart SysTick. */
 564:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         SysTimer_Start();
 565:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ECLIC_EnableIRQ(CLIC_INT_TMR);
 566:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         __RWMB();
 567:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 568:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 569:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         set its parameter to 0 to indicate that its implementation contains
 570:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         its own wait for interrupt or wait for event instruction, and so wfi
 571:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         should not be executed again.  However, the original expected idle
 572:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         time variable must remain unmodified, so a copy is taken. */
 573:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         xModifiableIdleTime = xExpectedIdleTime;
 574:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         configPRE_SLEEP_PROCESSING(xModifiableIdleTime);
 575:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (xModifiableIdleTime > 0) {
 576:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __WFI();
 577:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         } else {
 578:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             // GD32VW55X
 579:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Get System timer load value if CPU enter deep sleep once */
 580:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             XLastLoadValue = SysTimer_GetLoadValue();
 581:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 582:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         configPOST_SLEEP_PROCESSING(xExpectedIdleTime);
 583:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 584:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         // GD32VW55X, it do not need do follow step if CPU enter deep sleep once
 585:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (xModifiableIdleTime > 0) {
 586:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Re-enable interrupts to allow the interrupt that brought the MCU
 587:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             out of sleep mode to execute immediately. */
 588:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __enable_irq();
 589:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 590:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Make sure interrupt enable is executed */
 591:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __RWMB();
 592:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __FENCE_I();
 593:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __NOP();
 594:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 595:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Disable interrupts again because the clock is about to be stopped
 596:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                 and interrupts that execute while the clock is stopped will increase
 597:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                 any slippage between the time maintained by the RTOS and calendar
 598:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                 time. */
 599:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __disable_irq();
 600:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 601:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 602:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Disable the SysTick clock.  Again,
 603:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****            the time the SysTick is stopped for is accounted for as best it can
 604:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****            be, but using the tickless mode will inevitably result in some tiny
 605:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****            drift of the time maintained by the kernel with respect to calendar
 606:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****            time*/
 607:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ECLIC_DisableIRQ(CLIC_INT_TMR);
 608:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 609:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Determine if SysTimer Interrupt is not yet happened,
 610:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         (in which case an interrupt other than the SysTick
 611:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         must have brought the system out of sleep mode). */
 612:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (SysTimer_GetLoadValue() >= (XLastLoadValue + ulReloadValue)) {
 613:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* As the pending tick will be processed as soon as this
 614:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             function exits, the tick value maintained by the tick is stepped
 615:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             forward by one less than the time spent waiting. */
 616:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 617:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             FREERTOS_PORT_DEBUG("TickLess - SysTimer Interrupt Entered!\n");
 618:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         } else {
 619:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Something other than the tick interrupt ended the sleep.
 620:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             Work out how long the sleep lasted rounded to complete tick
 621:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             periods (not the ulReload value which accounted for part
 622:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             ticks). */
 623:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             xModifiableIdleTime = SysTimer_GetLoadValue();
 624:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             if (xModifiableIdleTime > XLastLoadValue) {
 625:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                 ulCompletedSysTickDecrements = (xModifiableIdleTime - XLastLoadValue);
 626:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             } else {
 627:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                 ulCompletedSysTickDecrements = (xModifiableIdleTime + portMAX_BIT_NUMBER - XLastLoa
 628:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             }
 629:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 630:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* How many complete tick periods passed while the processor
 631:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             was waiting? */
 632:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 633:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 634:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* The reload value is set to whatever fraction of a single tick
 635:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             period remains. */
 636:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             SysTick_Reload(ulTimerCountsForOneTick);
 637:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             FREERTOS_PORT_DEBUG("TickLess - External Interrupt Happened!\n");
 638:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 639:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 640:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         FREERTOS_PORT_DEBUG("End TickLess %d\n", (uint32_t)ulCompleteTickPeriods);
 641:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 642:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Restart SysTick */
 643:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         vTaskStepTick(ulCompleteTickPeriods);
 644:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 645:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Exit with interrupts enabled. */
 646:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ECLIC_EnableIRQ(CLIC_INT_TMR);
 647:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         systick_lock_acquire();
 648:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         __enable_irq();
 706              		.loc 1 648 9 is_stmt 1
 707              	.LBB199:
 708              	.LBB200:
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 709              		.loc 3 598 5
 710              	.LBB201:
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 711              		.loc 3 598 5
 712              	.LVL42:
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 713              		.loc 3 598 5
 714 003e A147     		li	a5,8
 715              	 #APP
 716              	# 598 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 717              		csrs 0x300, a5
 718              	# 0 "" 2
 719              	 #NO_APP
 720              	.LBE201:
 721              	.LBE200:
 722              	.LBE199:
 649:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 650:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 723              		.loc 1 650 1 is_stmt 0
 724 0044 0561     		addi	sp,sp,32
 725              		.cfi_remember_state
 726              		.cfi_def_cfa_offset 0
 727 0046 17030000 		tail	__riscv_restore_4
 727      67000300 
 728              		.cfi_restore 19
 729              		.cfi_restore 18
 730              		.cfi_restore 9
 731              		.cfi_restore 8
 732              		.cfi_restore 1
 733              		.cfi_def_cfa_offset -32
 734              	.LVL43:
 735              	.L39:
 736              		.cfi_restore_state
 526:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Restart from whatever is left in the count register to complete
 737              		.loc 1 526 58 discriminator 1
 738 004e 97000000 		call	freertos_ready_to_sleep
 738      E7800000 
 739              	.LVL44:
 526:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Restart from whatever is left in the count register to complete
 740              		.loc 1 526 54 discriminator 1
 741 0056 65D5     		beq	a0,zero,.L78
 545:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 742              		.loc 1 545 9 is_stmt 1
 743              	.LBB202:
 744              	.LBB203:
 190:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 745              		.loc 4 190 5
 190:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 746              		.loc 4 190 24 is_stmt 0
 747 0058 371700D1 		li	a4,-788525056
 748 005c 832787FF 		lw	a5,-8(a4)
 749              	.LBE203:
 750              	.LBE202:
 550:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (ulReloadValue > ulStoppedTimerCompensation) {
 751              		.loc 1 550 23
 752 0060 37090000 		lui	s2,%hi(.LANCHOR3)
 753              	.LBB205:
 754              	.LBB204:
 190:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 755              		.loc 4 190 24
 756 0064 93E71700 		ori	a5,a5,1
 757 0068 232CF7FE 		sw	a5,-8(a4)
 758              	.LBE204:
 759              	.LBE205:
 550:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (ulReloadValue > ulStoppedTimerCompensation) {
 760              		.loc 1 550 9 is_stmt 1
 550:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (ulReloadValue > ulStoppedTimerCompensation) {
 761              		.loc 1 550 71 is_stmt 0
 762 006c A247     		lw	a5,8(sp)
 763 006e 1387F7FF 		addi	a4,a5,-1
 550:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (ulReloadValue > ulStoppedTimerCompensation) {
 764              		.loc 1 550 23
 765 0072 83270900 		lw	a5,%lo(.LANCHOR3)(s2)
 766 0076 13090900 		addi	s2,s2,%lo(.LANCHOR3)
 767 007a B387E702 		mul	a5,a5,a4
 768              	.LVL45:
 551:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             ulReloadValue -= ulStoppedTimerCompensation;
 769              		.loc 1 551 9 is_stmt 1
 551:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             ulReloadValue -= ulStoppedTimerCompensation;
 770              		.loc 1 551 27 is_stmt 0
 771 007e 37070000 		lui	a4,%hi(.LANCHOR4)
 772 0082 13070700 		addi	a4,a4,%lo(.LANCHOR4)
 773 0086 1443     		lw	a3,0(a4)
 774 0088 5843     		lw	a4,4(a4)
 551:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             ulReloadValue -= ulStoppedTimerCompensation;
 775              		.loc 1 551 12
 776 008a 01E7     		bne	a4,zero,.L42
 777 008c 63F3F600 		bleu	a5,a3,.L42
 552:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 778              		.loc 1 552 13 is_stmt 1
 552:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 779              		.loc 1 552 27 is_stmt 0
 780 0090 958F     		sub	a5,a5,a3
 781              	.LVL46:
 782              	.L42:
 558:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 783              		.loc 1 558 9 is_stmt 1
 784 0092 3E84     		mv	s0,a5
 785              	.LBB206:
 786              	.LBB207:
 356:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     uint64_t reload_ticks = ticks + cur_ticks;
 787              		.loc 4 356 14 is_stmt 0
 788 0094 B70700D1 		li	a5,-788529152
 789              	.LVL47:
 790 0098 9043     		lw	a2,0(a5)
 791 009a D443     		lw	a3,4(a5)
 792              	.LBE207:
 793              	.LBE206:
 558:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 794              		.loc 1 558 9
 795 009c 8144     		li	s1,0
 796              	.LVL48:
 797              	.LBB210:
 798              	.LBB208:
 356:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     uint64_t reload_ticks = ticks + cur_ticks;
 799              		.loc 4 356 5 is_stmt 1
 357:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 800              		.loc 4 357 5
 357:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 801              		.loc 4 357 14 is_stmt 0
 802 009e 3305C400 		add	a0,s0,a2
 803 00a2 B3358500 		sltu	a1,a0,s0
 804 00a6 B695     		add	a1,a1,a3
 805 00a8 2A87     		mv	a4,a0
 806 00aa AE87     		mv	a5,a1
 807              	.LVL49:
 359:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         /* If the low 32bits of reload_ticks are smaller than cur_ticks, the high 32bits are writte
 808              		.loc 4 359 5 is_stmt 1
 359:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         /* If the low 32bits of reload_ticks are smaller than cur_ticks, the high 32bits are writte
 809              		.loc 4 359 8 is_stmt 0
 810 00ac 63EFB600 		bgtu	a1,a3,.L64
 811 00b0 6394D500 		bne	a1,a3,.L44
 812 00b4 636DE600 		bltu	a2,a4,.L74
 813              	.L44:
 372:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_64 = ticks;
 814              		.loc 4 372 9 is_stmt 1
 372:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_64 = ticks;
 815              		.loc 4 372 26 is_stmt 0
 816 00b8 B70700D1 		li	a5,-788529152
 817 00bc 0146     		li	a2,0
 818              	.LVL50:
 819 00be 90C3     		sw	a2,0(a5)
 820 00c0 8146     		li	a3,0
 821 00c2 D4C3     		sw	a3,4(a5)
 373:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     }
 822              		.loc 4 373 9 is_stmt 1
 373:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     }
 823              		.loc 4 373 42 is_stmt 0
 824 00c4 80C7     		sw	s0,8(a5)
 825 00c6 C4C7     		sw	s1,12(a5)
 826 00c8 39A0     		j	.L47
 827              	.LVL51:
 828              	.L64:
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_64 = reload_ticks;
 829              		.loc 4 362 9 is_stmt 1
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_64 = reload_ticks;
 830              		.loc 4 362 12 is_stmt 0
 831 00ca 6376E60E 		bgeu	a2,a4,.L46
 832              	.L74:
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         } else {
 833              		.loc 4 363 13 is_stmt 1
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         } else {
 834              		.loc 4 363 46 is_stmt 0
 835 00ce B70600D1 		li	a3,-788529152
 836 00d2 98C6     		sw	a4,8(a3)
 837 00d4 DCC6     		sw	a5,12(a3)
 838              	.LVL52:
 839              	.L47:
 840              		.loc 4 376 5 is_stmt 1
 841              	.LBE208:
 842              	.LBE210:
 561:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 843              		.loc 1 561 9
 844              	.LBB211:
 845              	.LBB212:
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 846              		.loc 4 129 5
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 847              		.loc 4 129 20 is_stmt 0
 848 00d6 B70900D1 		li	s3,-788529152
 849 00da 03A70900 		lw	a4,0(s3)
 850 00de 83A74900 		lw	a5,4(s3)
 851              	.LBE212:
 852              	.LBE211:
 561:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 853              		.loc 1 561 24
 854 00e2 3ACC     		sw	a4,24(sp)
 855 00e4 3ECE     		sw	a5,28(sp)
 564:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ECLIC_EnableIRQ(CLIC_INT_TMR);
 856              		.loc 1 564 9 is_stmt 1
 857              	.LBB213:
 858              	.LBB214:
 179:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 859              		.loc 4 179 5
 179:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 860              		.loc 4 179 24 is_stmt 0
 861 00e6 371700D1 		li	a4,-788525056
 862 00ea 832787FF 		lw	a5,-8(a4)
 863 00ee F99B     		andi	a5,a5,-2
 864 00f0 232CF7FE 		sw	a5,-8(a4)
 865              	.LBE214:
 866              	.LBE213:
 565:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         __RWMB();
 867              		.loc 1 565 9 is_stmt 1
 868              	.LVL53:
 869              	.LBB215:
 870              	.LBB216:
 352:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 353:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 354:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 355:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 356:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Enable a specific interrupt
 357:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 358:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function enables the specific interrupt \em IRQn.
 359:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]  IRQn  Interrupt number
 360:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 361:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_DisableIRQ
 364:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_EnableIRQ(IRQn_Type IRQn)
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTIE |= CLIC_INTIE_IE_Msk;
 871              		.loc 2 367 5
 872              		.loc 2 367 29 is_stmt 0
 873 00f4 371700D2 		li	a4,-771747840
 874 00f8 8347D701 		lbu	a5,29(a4)
 875 00fc 93F7F70F 		andi	a5,a5,0xff
 876 0100 93E71700 		ori	a5,a5,1
 877 0104 A30EF700 		sb	a5,29(a4)
 878              	.LVL54:
 879              	.LBE216:
 880              	.LBE215:
 566:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 881              		.loc 1 566 9 is_stmt 1
 882              	 #APP
 883              	# 566 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 573:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         configPRE_SLEEP_PROCESSING(xModifiableIdleTime);
 884              		fence iorw,iorw
 885              	# 0 "" 2
 886              		.loc 1 573 9
 573:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         configPRE_SLEEP_PROCESSING(xModifiableIdleTime);
 887              		.loc 1 573 29 is_stmt 0
 888              	 #NO_APP
 889 010c 2247     		lw	a4,8(sp)
 890 010e B247     		lw	a5,12(sp)
 574:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (xModifiableIdleTime > 0) {
 891              		.loc 1 574 9
 892 0110 0808     		addi	a0,sp,16
 573:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         configPRE_SLEEP_PROCESSING(xModifiableIdleTime);
 893              		.loc 1 573 29
 894 0112 3AC8     		sw	a4,16(sp)
 895 0114 3ECA     		sw	a5,20(sp)
 574:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         if (xModifiableIdleTime > 0) {
 896              		.loc 1 574 9 is_stmt 1
 897 0116 97000000 		call	freertos_pre_sleep_processing
 897      E7800000 
 898              	.LVL55:
 575:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __WFI();
 899              		.loc 1 575 9
 575:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __WFI();
 900              		.loc 1 575 33 is_stmt 0
 901 011e 4247     		lw	a4,16(sp)
 902 0120 D247     		lw	a5,20(sp)
 575:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __WFI();
 903              		.loc 1 575 12
 904 0122 D98F     		or	a5,a4,a5
 905 0124 D1CF     		beq	a5,zero,.L48
 576:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         } else {
 906              		.loc 1 576 13 is_stmt 1
 907              	.LBB217:
 908              	.LBB218:
 729:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 909              		.loc 3 729 5
 910              	.LBB219:
 729:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 911              		.loc 3 729 5
 912              	.LVL56:
 729:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 913              		.loc 3 729 5
 914 0126 8547     		li	a5,1
 915              	 #APP
 916              	# 729 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 917              		csrc 0x810, a5
 918              	# 0 "" 2
 919              	 #NO_APP
 920              	.LBE219:
 730:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 921              		.loc 3 730 5
 922              	 #APP
 923              	# 730 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 924              		wfi
 925              	# 0 "" 2
 926              	.LVL57:
 927              	 #NO_APP
 928              	.L50:
 929              	.LBE218:
 930              	.LBE217:
 582:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 931              		.loc 1 582 9
 932 0130 2800     		addi	a0,sp,8
 933 0132 97000000 		call	freertos_post_sleep_processing
 933      E7800000 
 934              	.LVL58:
 585:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Re-enable interrupts to allow the interrupt that brought the MCU
 935              		.loc 1 585 9
 585:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Re-enable interrupts to allow the interrupt that brought the MCU
 936              		.loc 1 585 33 is_stmt 0
 937 013a 4247     		lw	a4,16(sp)
 938 013c D247     		lw	a5,20(sp)
 585:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* Re-enable interrupts to allow the interrupt that brought the MCU
 939              		.loc 1 585 12
 940 013e D98F     		or	a5,a4,a5
 941 0140 99CB     		beq	a5,zero,.L51
 588:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 942              		.loc 1 588 13 is_stmt 1
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 943              		.loc 3 598 5
 944              	.LBB220:
 945              	.LBB221:
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 946              		.loc 3 598 5
 947              	.LVL59:
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 948              		.loc 3 598 5
 949 0142 A147     		li	a5,8
 950              	 #APP
 951              	# 598 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 952              		csrs 0x300, a5
 953              	# 0 "" 2
 954              	 #NO_APP
 955              	.LBE221:
 956              	.LBE220:
 591:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __FENCE_I();
 957              		.loc 1 591 13
 958              	 #APP
 959              	# 591 "C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MS
 592:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             __NOP();
 960              		fence iorw,iorw
 961              	# 0 "" 2
 962              		.loc 1 592 13
 963              	 #NO_APP
 964              	.LBB222:
 965              	.LBB223:
 732:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 733:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 734:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Wait For Event
 735:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 736:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Wait For Event is executed using CSR_WFE.WFE=1 and WFI instruction.
 737:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * It will suspends execution until event, NMI or Debug happened.
 738:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * When Core is waked up, Core will resume previous execution
 739:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 740:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __WFE(void)
 741:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 742:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_SET(CSR_WFE, WFE_WFE);
 743:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("wfi");
 744:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_CLEAR(CSR_WFE, WFE_WFE);
 745:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 746:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 747:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 748:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Breakpoint Instruction
 749:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 750:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Causes the processor to enter Debug state.
 751:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Debug tools can use this to investigate system state
 752:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * when the instruction at a particular address is reached.
 753:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 754:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __EBREAK(void)
 755:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 756:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("ebreak");
 757:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 758:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 759:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 760:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Environment Call Instruction
 761:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 762:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * The ECALL instruction is used to make a service request to
 763:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * the execution environment.
 764:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 765:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __ECALL(void)
 766:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 767:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("ecall");
 768:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 769:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 770:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 771:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief WFI Sleep Mode enumeration
 772:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 773:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** typedef enum WFI_SleepMode {
 774:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     WFI_SHALLOW_SLEEP = 0,      /*!< Shallow sleep mode, the core_clk will poweroff */
 775:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     WFI_DEEP_SLEEP = 1          /*!< Deep sleep mode, the core_clk and core_ano_clk will poweroff *
 776:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** } WFI_SleepMode_Type;
 777:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 778:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 779:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Set Sleep mode of WFI
 780:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 781:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Set the SLEEPVALUE CSR register to control the
 782:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * WFI Sleep mode.
 783:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param[in] mode      The sleep mode to be set
 784:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 785:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __set_wfi_sleepmode(WFI_SleepMode_Type mode)
 786:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 787:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_WRITE(CSR_SLEEPVALUE, mode);
 788:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 789:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 790:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 791:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Send TX Event
 792:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 793:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Set the CSR TXEVT to control send a TX Event.
 794:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * The Core will output signal tx_evt as output event signal.
 795:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 796:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __TXEVT(void)
 797:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 798:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_SET(CSR_TXEVT, 0x1);
 799:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 800:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 801:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 802:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Enable MCYCLE counter
 803:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 804:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Clear the CY bit of MCOUNTINHIBIT to 0 to enable MCYCLE Counter
 805:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 806:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __enable_mcycle_counter(void)
 807:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 808:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_CLEAR(CSR_MCOUNTINHIBIT, MCOUNTINHIBIT_CY);
 809:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 810:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 811:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 812:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Disable MCYCLE counter
 813:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 814:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Set the CY bit of MCOUNTINHIBIT to 1 to disable MCYCLE Counter
 815:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 816:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __disable_mcycle_counter(void)
 817:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 818:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_SET(CSR_MCOUNTINHIBIT, MCOUNTINHIBIT_CY);
 819:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 820:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 821:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 822:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Enable MINSTRET counter
 823:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 824:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Clear the IR bit of MCOUNTINHIBIT to 0 to enable MINSTRET Counter
 825:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 826:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __enable_minstret_counter(void)
 827:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 828:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_CLEAR(CSR_MCOUNTINHIBIT, MCOUNTINHIBIT_IR);
 829:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 830:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 831:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 832:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Disable MINSTRET counter
 833:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 834:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Set the IR bit of MCOUNTINHIBIT to 1 to disable MINSTRET Counter
 835:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 836:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __disable_minstret_counter(void)
 837:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 838:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_SET(CSR_MCOUNTINHIBIT, MCOUNTINHIBIT_IR);
 839:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 840:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 841:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 842:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Enable MCYCLE & MINSTRET counter
 843:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 844:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Clear the IR and CY bit of MCOUNTINHIBIT to 1 to enable MINSTRET & MCYCLE Counter
 845:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 846:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __enable_all_counter(void)
 847:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 848:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_CLEAR(CSR_MCOUNTINHIBIT, MCOUNTINHIBIT_IR|MCOUNTINHIBIT_CY);
 849:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 850:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 851:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 852:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Disable MCYCLE & MINSTRET counter
 853:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 854:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * Set the IR and CY bit of MCOUNTINHIBIT to 1 to disable MINSTRET & MCYCLE Counter
 855:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 856:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __disable_all_counter(void)
 857:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 858:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __RV_CSR_SET(CSR_MCOUNTINHIBIT, MCOUNTINHIBIT_IR|MCOUNTINHIBIT_CY);
 859:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 860:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 861:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 862:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief Execute fence instruction, p -> pred, s -> succ
 863:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 864:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * the FENCE instruction ensures that all memory accesses from instructions preceding
 865:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * the fence in program order (the `predecessor set`) appear earlier in the global memory order tha
 866:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * memory accesses from instructions appearing after the fence in program order (the `successor set
 867:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * For details, please refer to The RISC-V Instruction Set Manual
 868:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param p     predecessor set, such as iorw, rw, r, w
 869:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \param s     successor set, such as iorw, rw, r, w
 870:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  **/
 871:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** #define __FENCE(p, s) __ASM volatile ("fence " #p "," #s : : : "memory")
 872:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** 
 873:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** /**
 874:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \brief   Fence.i Instruction
 875:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * \details
 876:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * The FENCE.I instruction is used to synchronize the instruction
 877:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  * and data streams.
 878:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****  */
 879:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** __STATIC_FORCEINLINE void __FENCE_I(void)
 880:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** {
 881:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h ****     __ASM volatile("fence.i");
 966              		.loc 3 881 5
 967              	 #APP
 968              	# 881 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 969              		fence.i
 970              	# 0 "" 2
 971              	 #NO_APP
 972              	.LBE223:
 973              	.LBE222:
 593:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 974              		.loc 1 593 13
 975              	.LBB224:
 976              	.LBB225:
 715:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 977              		.loc 3 715 5
 978              	 #APP
 979              	# 715 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 980              		nop
 981              	# 0 "" 2
 982              	 #NO_APP
 983              	.LBE225:
 984              	.LBE224:
 599:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 985              		.loc 1 599 13
 986              	.LBB226:
 987              	.LBB227:
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 988              		.loc 3 609 5
 989              	.LBB228:
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 990              		.loc 3 609 5
 991              	.LVL60:
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 992              		.loc 3 609 5
 993              	 #APP
 994              	# 609 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 995              		csrc 0x300, a5
 996              	# 0 "" 2
 997              	.LVL61:
 998              	 #NO_APP
 999              	.L51:
 1000              	.LBE228:
 1001              	.LBE227:
 1002              	.LBE226:
 607:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1003              		.loc 1 607 9
 1004              	.LBB229:
 1005              	.LBB230:
 368:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 369:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 370:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 371:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get a specific interrupt enable status
 372:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 373:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function returns the interrupt enable status for the specific interrupt \em IRQn.
 374:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]  IRQn  Interrupt number
 375:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \returns
 376:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - 0  Interrupt is not enabled
 377:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - 1  Interrupt is pending
 378:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 379:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 380:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 381:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_EnableIRQ
 382:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_DisableIRQ
 383:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 384:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint32_t __ECLIC_GetEnableIRQ(IRQn_Type IRQn)
 385:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 386:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return((uint32_t) (ECLIC->CTRL[IRQn].INTIE) & CLIC_INTIE_IE_Msk);
 387:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 388:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 389:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 390:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Disable a specific interrupt
 391:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 392:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function disables the specific interrupt \em IRQn.
 393:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]  IRQn  Number of the external interrupt to disable
 394:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 395:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 396:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 397:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_EnableIRQ
 398:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 399:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_DisableIRQ(IRQn_Type IRQn)
 400:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 401:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTIE &= ~CLIC_INTIE_IE_Msk;
 1006              		.loc 2 401 5
 1007              		.loc 2 401 29 is_stmt 0
 1008 0156 371700D2 		li	a4,-771747840
 1009 015a 8347D701 		lbu	a5,29(a4)
 1010 015e 93F7E70F 		andi	a5,a5,254
 1011 0162 A30EF700 		sb	a5,29(a4)
 1012              	.LVL62:
 1013              	.LBE230:
 1014              	.LBE229:
 612:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* As the pending tick will be processed as soon as this
 1015              		.loc 1 612 9 is_stmt 1
 1016              	.LBB231:
 1017              	.LBB232:
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1018              		.loc 4 129 5
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1019              		.loc 4 129 20 is_stmt 0
 1020 0166 B70700D1 		li	a5,-788529152
 1021 016a 9043     		lw	a2,0(a5)
 1022 016c D443     		lw	a3,4(a5)
 1023              	.LBE232:
 1024              	.LBE231:
 612:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* As the pending tick will be processed as soon as this
 1025              		.loc 1 612 56
 1026 016e 6245     		lw	a0,24(sp)
 1027 0170 F245     		lw	a1,28(sp)
 1028 0172 3307A400 		add	a4,s0,a0
 1029 0176 B3378700 		sltu	a5,a4,s0
 1030 017a A695     		add	a1,s1,a1
 1031 017c AE97     		add	a5,a5,a1
 612:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             /* As the pending tick will be processed as soon as this
 1032              		.loc 1 612 12
 1033 017e 63E8F604 		bgtu	a5,a3,.L53
 1034 0182 6394D700 		bne	a5,a3,.L65
 1035 0186 6364E604 		bgtu	a4,a2,.L53
 1036              	.L65:
 616:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             FREERTOS_PORT_DEBUG("TickLess - SysTimer Interrupt Entered!\n");
 1037              		.loc 1 616 13 is_stmt 1
 616:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             FREERTOS_PORT_DEBUG("TickLess - SysTimer Interrupt Entered!\n");
 1038              		.loc 1 616 35 is_stmt 0
 1039 018a 2245     		lw	a0,8(sp)
 1040 018c 7D15     		addi	a0,a0,-1
 1041              	.LVL63:
 617:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         } else {
 1042              		.loc 1 617 76 is_stmt 1
 1043              	.L55:
 637:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 1044              		.loc 1 637 77
 640:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1045              		.loc 1 640 82
 643:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1046              		.loc 1 643 9
 1047 018e 8145     		li	a1,0
 1048 0190 97000000 		call	vTaskStepTick
 1048      E7800000 
 1049              	.LVL64:
 646:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         systick_lock_acquire();
 1050              		.loc 1 646 9
 1051              	.LBB233:
 1052              	.LBB234:
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1053              		.loc 2 367 5
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1054              		.loc 2 367 29 is_stmt 0
 1055 0198 371700D2 		li	a4,-771747840
 1056 019c 8347D701 		lbu	a5,29(a4)
 1057 01a0 93F7F70F 		andi	a5,a5,0xff
 1058 01a4 93E71700 		ori	a5,a5,1
 1059 01a8 A30EF700 		sb	a5,29(a4)
 1060              	.LVL65:
 1061              	.LBE234:
 1062              	.LBE233:
 647:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         __enable_irq();
 1063              		.loc 1 647 9 is_stmt 1
 1064 01ac 97000000 		call	systick_lock_acquire
 1064      E7800000 
 1065              	.LVL66:
 1066 01b4 69B5     		j	.L78
 1067              	.LVL67:
 1068              	.L46:
 1069              	.LBB235:
 1070              	.LBB209:
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(reload_ticks & 0xFFFFFFFF);
 1071              		.loc 4 365 13
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(reload_ticks & 0xFFFFFFFF);
 1072              		.loc 4 365 59 is_stmt 0
 1073 01b6 B70600D1 		li	a3,-788529152
 1074 01ba CCC6     		sw	a1,12(a3)
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         }
 1075              		.loc 4 366 13 is_stmt 1
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         }
 1076              		.loc 4 366 59 is_stmt 0
 1077 01bc 98C6     		sw	a4,8(a3)
 1078 01be 21BF     		j	.L47
 1079              	.LVL68:
 1080              	.L48:
 1081              	.LBE209:
 1082              	.LBE235:
 580:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 1083              		.loc 1 580 13 is_stmt 1
 1084              	.LBB236:
 1085              	.LBB237:
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1086              		.loc 4 129 5
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1087              		.loc 4 129 20 is_stmt 0
 1088 01c0 03A70900 		lw	a4,0(s3)
 1089 01c4 83A74900 		lw	a5,4(s3)
 1090              	.LBE237:
 1091              	.LBE236:
 580:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         }
 1092              		.loc 1 580 28
 1093 01c8 3ACC     		sw	a4,24(sp)
 1094 01ca 3ECE     		sw	a5,28(sp)
 1095 01cc 95B7     		j	.L50
 1096              	.L53:
 623:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             if (xModifiableIdleTime > XLastLoadValue) {
 1097              		.loc 1 623 13 is_stmt 1
 1098              	.LBB238:
 1099              	.LBB239:
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1100              		.loc 4 129 5
 129:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1101              		.loc 4 129 20 is_stmt 0
 1102 01ce B70700D1 		li	a5,-788529152
 1103 01d2 9843     		lw	a4,0(a5)
 1104 01d4 DC43     		lw	a5,4(a5)
 1105              	.LBE239:
 1106              	.LBE238:
 623:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             if (xModifiableIdleTime > XLastLoadValue) {
 1107              		.loc 1 623 33
 1108 01d6 3AC8     		sw	a4,16(sp)
 1109 01d8 3ECA     		sw	a5,20(sp)
 624:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                 ulCompletedSysTickDecrements = (xModifiableIdleTime - XLastLoadValue);
 1110              		.loc 1 624 13 is_stmt 1
 624:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                 ulCompletedSysTickDecrements = (xModifiableIdleTime - XLastLoadValue);
 1111              		.loc 1 624 37 is_stmt 0
 1112 01da 4247     		lw	a4,16(sp)
 1113 01dc D247     		lw	a5,20(sp)
 1114 01de 6246     		lw	a2,24(sp)
 1115 01e0 F246     		lw	a3,28(sp)
 624:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                 ulCompletedSysTickDecrements = (xModifiableIdleTime - XLastLoadValue);
 1116              		.loc 1 624 16
 1117 01e2 63E6F600 		bgtu	a5,a3,.L66
 1118 01e6 6390D706 		bne	a5,a3,.L56
 1119 01ea 637EE604 		bgeu	a2,a4,.L56
 1120              	.L66:
 625:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             } else {
 1121              		.loc 1 625 17 is_stmt 1
 625:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             } else {
 1122              		.loc 1 625 69 is_stmt 0
 1123 01ee 4245     		lw	a0,16(sp)
 1124 01f0 D245     		lw	a1,20(sp)
 1125 01f2 6247     		lw	a4,24(sp)
 1126 01f4 F247     		lw	a5,28(sp)
 1127              	.L77:
 632:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1128              		.loc 1 632 66
 1129 01f6 03240900 		lw	s0,0(s2)
 1130              	.LVL69:
 1131 01fa 83244900 		lw	s1,4(s2)
 627:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             }
 1132              		.loc 1 627 46
 1133 01fe 198D     		sub	a0,a0,a4
 1134              	.LVL70:
 632:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1135              		.loc 1 632 13 is_stmt 1
 632:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1136              		.loc 1 632 66 is_stmt 0
 1137 0200 2286     		mv	a2,s0
 1138 0202 A686     		mv	a3,s1
 1139 0204 8145     		li	a1,0
 1140 0206 97000000 		call	__udivdi3
 1140      E7800000 
 1141              	.LVL71:
 636:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             FREERTOS_PORT_DEBUG("TickLess - External Interrupt Happened!\n");
 1142              		.loc 1 636 13 is_stmt 1
 1143              	.LBB240:
 1144              	.LBB241:
 356:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     uint64_t reload_ticks = ticks + cur_ticks;
 1145              		.loc 4 356 5
 356:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     uint64_t reload_ticks = ticks + cur_ticks;
 1146              		.loc 4 356 14 is_stmt 0
 1147 020e B70700D1 		li	a5,-788529152
 1148 0212 9043     		lw	a2,0(a5)
 1149 0214 D443     		lw	a3,4(a5)
 1150              	.LVL72:
 357:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 1151              		.loc 4 357 5 is_stmt 1
 357:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 1152              		.loc 4 357 14 is_stmt 0
 1153 0216 3308C400 		add	a6,s0,a2
 1154 021a B387D400 		add	a5,s1,a3
 1155 021e B3358800 		sltu	a1,a6,s0
 1156 0222 BE95     		add	a1,a1,a5
 1157 0224 4287     		mv	a4,a6
 1158 0226 AE87     		mv	a5,a1
 1159              	.LVL73:
 359:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         /* If the low 32bits of reload_ticks are smaller than cur_ticks, the high 32bits are writte
 1160              		.loc 4 359 5 is_stmt 1
 359:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         /* If the low 32bits of reload_ticks are smaller than cur_ticks, the high 32bits are writte
 1161              		.loc 4 359 8 is_stmt 0
 1162 0228 63E5B602 		bgtu	a1,a3,.L67
 1163 022c 6394D500 		bne	a1,a3,.L59
 1164 0230 6363E602 		bltu	a2,a4,.L75
 1165              	.L59:
 372:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_64 = ticks;
 1166              		.loc 4 372 9 is_stmt 1
 372:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_64 = ticks;
 1167              		.loc 4 372 26 is_stmt 0
 1168 0234 B70700D1 		li	a5,-788529152
 1169 0238 0146     		li	a2,0
 1170              	.LVL74:
 1171 023a 90C3     		sw	a2,0(a5)
 1172 023c 8146     		li	a3,0
 1173 023e D4C3     		sw	a3,4(a5)
 373:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     }
 1174              		.loc 4 373 9 is_stmt 1
 373:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     }
 1175              		.loc 4 373 42 is_stmt 0
 1176 0240 80C7     		sw	s0,8(a5)
 1177 0242 C4C7     		sw	s1,12(a5)
 1178 0244 A9B7     		j	.L55
 1179              	.LVL75:
 1180              	.L56:
 1181              	.LBE241:
 1182              	.LBE240:
 627:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             }
 1183              		.loc 1 627 17 is_stmt 1
 627:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             }
 1184              		.loc 1 627 90 is_stmt 0
 1185 0246 4245     		lw	a0,16(sp)
 1186 0248 D245     		lw	a1,20(sp)
 1187 024a 6247     		lw	a4,24(sp)
 627:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             }
 1188              		.loc 1 627 46
 1189 024c 7D15     		addi	a0,a0,-1
 627:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****             }
 1190              		.loc 1 627 90
 1191 024e F247     		lw	a5,28(sp)
 1192 0250 5DB7     		j	.L77
 1193              	.LVL76:
 1194              	.L67:
 1195              	.LBB243:
 1196              	.LBB242:
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_64 = reload_ticks;
 1197              		.loc 4 362 9 is_stmt 1
 362:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_64 = reload_ticks;
 1198              		.loc 4 362 12 is_stmt 0
 1199 0252 6377E600 		bgeu	a2,a4,.L61
 1200              	.L75:
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         } else {
 1201              		.loc 4 363 13 is_stmt 1
 363:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         } else {
 1202              		.loc 4 363 46 is_stmt 0
 1203 0256 B70600D1 		li	a3,-788529152
 1204 025a 98C6     		sw	a4,8(a3)
 1205 025c DCC6     		sw	a5,12(a3)
 1206 025e 05BF     		j	.L55
 1207              	.L61:
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(reload_ticks & 0xFFFFFFFF);
 1208              		.loc 4 365 13 is_stmt 1
 365:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****             SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(reload_ticks & 0xFFFFFFFF);
 1209              		.loc 4 365 59 is_stmt 0
 1210 0260 B70600D1 		li	a3,-788529152
 1211 0264 CCC6     		sw	a1,12(a3)
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         }
 1212              		.loc 4 366 13 is_stmt 1
 366:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         }
 1213              		.loc 4 366 59 is_stmt 0
 1214 0266 98C6     		sw	a4,8(a3)
 1215 0268 1DB7     		j	.L55
 1216              	.LBE242:
 1217              	.LBE243:
 1218              		.cfi_endproc
 1219              	.LFE380:
 1221              		.globl	__divdi3
 1222              		.section	.text.vPortSetupTimerInterrupt,"ax",@progbits
 1223              		.align	1
 1224              		.weak	vPortSetupTimerInterrupt
 1226              	vPortSetupTimerInterrupt:
 1227              	.LFB381:
 651:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 652:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif /* #if configUSE_TICKLESS_IDLE */
 653:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 654:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 655:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*
 656:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 657:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  * frequency.
 658:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****  */
 659:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** __attribute__((weak)) void vPortSetupTimerInterrupt(void)
 660:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 1228              		.loc 1 660 1 is_stmt 1
 1229              		.cfi_startproc
 1230 0000 17030000 		call	t0,__riscv_save_4
 1230      E7020300 
 1231              		.cfi_offset 19, -20
 1232              		.cfi_offset 18, -16
 1233              		.cfi_offset 9, -12
 1234              		.cfi_offset 8, -8
 1235              		.cfi_offset 1, -4
 1236              		.cfi_def_cfa_offset 32
 661:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Calculate the constants required to configure the tick interrupt. */
 662:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 663:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     {
 664:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ulTimerCountsForOneTick = (SYSTICK_TICK_CONST);
 1237              		.loc 1 664 9
 1238              		.loc 1 664 36 is_stmt 0
 1239 0008 B7070000 		lui	a5,%hi(SystemCoreClock)
 1240 000c 03A40700 		lw	s0,%lo(SystemCoreClock)(a5)
 1241 0010 9307803E 		li	a5,1000
 1242 0014 8149     		li	s3,0
 1243 0016 3354F402 		divu	s0,s0,a5
 665:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         xMaximumPossibleSuppressedTicks = 0xFFFFFFFFUL / ulTimerCountsForOneTick;
 1244              		.loc 1 665 56
 1245 001a CE86     		mv	a3,s3
 664:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         xMaximumPossibleSuppressedTicks = 0xFFFFFFFFUL / ulTimerCountsForOneTick;
 1246              		.loc 1 664 33
 1247 001c B7070000 		lui	a5,%hi(.LANCHOR3)
 1248              		.loc 1 665 56
 1249 0020 7D55     		li	a0,-1
 1250 0022 8145     		li	a1,0
 664:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         xMaximumPossibleSuppressedTicks = 0xFFFFFFFFUL / ulTimerCountsForOneTick;
 1251              		.loc 1 664 33
 1252 0024 23A23701 		sw	s3,%lo(.LANCHOR3+4)(a5)
 1253              		.loc 1 665 9 is_stmt 1
 1254              		.loc 1 665 41 is_stmt 0
 1255 0028 B7040000 		lui	s1,%hi(.LANCHOR2)
 664:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         xMaximumPossibleSuppressedTicks = 0xFFFFFFFFUL / ulTimerCountsForOneTick;
 1256              		.loc 1 664 36
 1257 002c 0149     		li	s2,0
 1258              		.loc 1 665 56
 1259 002e 2286     		mv	a2,s0
 664:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         xMaximumPossibleSuppressedTicks = 0xFFFFFFFFUL / ulTimerCountsForOneTick;
 1260              		.loc 1 664 33
 1261 0030 23A08700 		sw	s0,%lo(.LANCHOR3)(a5)
 1262              		.loc 1 665 56
 1263 0034 97000000 		call	__udivdi3
 1263      E7800000 
 1264              	.LVL77:
 666:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / (configCPU_CLOCK_HZ / configSYSTICK
 1265              		.loc 1 666 36
 1266 003c B7070000 		lui	a5,%hi(.LANCHOR4)
 1267 0040 1306D002 		li	a2,45
 1268 0044 8146     		li	a3,0
 1269 0046 23A0C700 		sw	a2,%lo(.LANCHOR4)(a5)
 1270 004a 23A2D700 		sw	a3,%lo(.LANCHOR4+4)(a5)
 665:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         xMaximumPossibleSuppressedTicks = 0xFFFFFFFFUL / ulTimerCountsForOneTick;
 1271              		.loc 1 665 41
 1272 004e 23A0A400 		sw	a0,%lo(.LANCHOR2)(s1)
 1273 0052 23A2B400 		sw	a1,%lo(.LANCHOR2+4)(s1)
 1274              		.loc 1 666 9 is_stmt 1
 667:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         FREERTOS_PORT_DEBUG("CountsForOneTick, SuppressedTicks and TimerCompensation: %u, %u, %u\n"
 668:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****                             (uint32_t)ulTimerCountsForOneTick, (uint32_t)xMaximumPossibleSuppressed
 1275              		.loc 1 668 144
 669:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 670:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif /* configUSE_TICKLESS_IDLE */
 671:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     TickType_t ticks = SYSTICK_TICK_CONST;
 1276              		.loc 1 671 5
 672:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 673:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Make SWI and SysTick the lowest priority interrupts. */
 674:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Stop and clear the SysTimer. SysTimer as Non-Vector Interrupt */
 675:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     SysTick_Config(ticks);
 1277              		.loc 1 675 5
 323:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     SysTimer_SetCompareValue(ticks);
 1278              		.loc 4 323 5
 1279              	.LVL78:
 1280              	.LBB288:
 1281              	.LBB289:
 1282              	.LBB290:
 115:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1283              		.loc 4 115 5
 115:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1284              		.loc 4 115 22 is_stmt 0
 1285 0056 B70700D1 		li	a5,-788529152
 1286 005a 0146     		li	a2,0
 1287 005c 90C3     		sw	a2,0(a5)
 1288 005e 8146     		li	a3,0
 1289 0060 D4C3     		sw	a3,4(a5)
 1290              	.LVL79:
 1291              	.LBE290:
 1292              	.LBE289:
 1293              	.LBE288:
 324:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     ECLIC_SetShvIRQ(CLIC_INT_TMR, ECLIC_NON_VECTOR_INTERRUPT);
 1294              		.loc 4 324 5 is_stmt 1
 1295              	.LBB307:
 1296              	.LBB291:
 1297              	.LBB292:
 145:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 1298              		.loc 4 145 5
 145:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** 
 1299              		.loc 4 145 14 is_stmt 0
 1300 0062 9043     		lw	a2,0(a5)
 1301 0064 D443     		lw	a3,4(a5)
 149:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_64 = value;
 1302              		.loc 4 149 5 is_stmt 1
 149:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_64 = value;
 1303              		.loc 4 149 8 is_stmt 0
 1304 0066 63788612 		bleu	s0,a2,.L80
 150:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     } else {
 1305              		.loc 4 150 42
 1306 006a 80C7     		sw	s0,8(a5)
 1307 006c 2289     		mv	s2,s0
 150:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     } else {
 1308              		.loc 4 150 9 is_stmt 1
 150:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     } else {
 1309              		.loc 4 150 42 is_stmt 0
 1310 006e 23A63701 		sw	s3,12(a5)
 1311              	.L81:
 1312              	.LBE292:
 1313              	.LBE291:
 1314              	.LBE307:
 325:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     ECLIC_SetLevelIRQ(CLIC_INT_TMR, 0);
 1315              		.loc 4 325 5 is_stmt 1
 1316              	.LVL80:
 1317              	.LBB308:
 1318              	.LBB294:
 1319              	.LBB295:
 402:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 403:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 404:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 405:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get the pending specific interrupt
 406:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 407:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function returns the pending status of the specific interrupt \em IRQn.
 408:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 409:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \returns
 410:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - 0  Interrupt is not pending
 411:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - 1  Interrupt is pending
 412:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 413:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 414:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 415:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_SetPendingIRQ
 416:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_ClearPendingIRQ
 417:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 418:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE int32_t __ECLIC_GetPendingIRQ(IRQn_Type IRQn)
 419:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 420:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return((uint32_t)(ECLIC->CTRL[IRQn].INTIP) & CLIC_INTIP_IP_Msk);
 421:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 422:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 423:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 424:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Set a specific interrupt to pending
 425:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 426:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function sets the pending bit for the specific interrupt \em IRQn.
 427:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 428:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 429:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 430:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 431:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetPendingIRQ
 432:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_ClearPendingIRQ
 433:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 434:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_SetPendingIRQ(IRQn_Type IRQn)
 435:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 436:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTIP |= CLIC_INTIP_IP_Msk;
 437:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 438:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 439:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 440:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Clear a specific interrupt from pending
 441:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 442:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function removes the pending state of the specific interrupt \em IRQn.
 443:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \em IRQn cannot be a negative number.
 444:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 445:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 446:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 447:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 448:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_SetPendingIRQ
 449:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetPendingIRQ
 450:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 451:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_ClearPendingIRQ(IRQn_Type IRQn)
 452:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 453:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTIP &= ~ CLIC_INTIP_IP_Msk;
 454:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 455:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 456:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 457:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Set trigger mode and polarity for a specific interrupt
 458:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 459:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function set trigger mode and polarity of the specific interrupt \em IRQn.
 460:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 461:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      trig
 462:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                   - 00  level trigger, \ref ECLIC_LEVEL_TRIGGER
 463:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                   - 01  positive edge trigger, \ref ECLIC_POSTIVE_EDGE_TRIGGER
 464:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                   - 02  level trigger, \ref ECLIC_LEVEL_TRIGGER
 465:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                   - 03  negative edge trigger, \ref ECLIC_NEGTIVE_EDGE_TRIGGER
 466:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 467:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 468:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *
 469:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 470:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetTrigIRQ
 471:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 472:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_SetTrigIRQ(IRQn_Type IRQn, uint32_t trig)
 473:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 474:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTATTR &= ~CLIC_INTATTR_TRIG_Msk;
 475:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTATTR |= (uint8_t)(trig<<CLIC_INTATTR_TRIG_Pos);
 476:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 477:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 478:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 479:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get trigger mode and polarity for a specific interrupt
 480:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 481:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function get trigger mode and polarity of the specific interrupt \em IRQn.
 482:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 483:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \return
 484:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                 - 00  level trigger, \ref ECLIC_LEVEL_TRIGGER
 485:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                 - 01  positive edge trigger, \ref ECLIC_POSTIVE_EDGE_TRIGGER
 486:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                 - 02  level trigger, \ref ECLIC_LEVEL_TRIGGER
 487:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                 - 03  negative edge trigger, \ref ECLIC_NEGTIVE_EDGE_TRIGGER
 488:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 489:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *     - IRQn must not be negative.
 490:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 491:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *     - \ref ECLIC_SetTrigIRQ
 492:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 493:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint32_t __ECLIC_GetTrigIRQ(IRQn_Type IRQn)
 494:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 495:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return ((int32_t)(((ECLIC->CTRL[IRQn].INTATTR) & CLIC_INTATTR_TRIG_Msk)>>CLIC_INTATTR_TRIG_Pos)
 496:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 497:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 498:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 499:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Set interrupt working mode for a specific interrupt
 500:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 501:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function set selective hardware vector or non-vector working mode of the specific interrupt
 502:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 503:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      shv
 504:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                        - 0  non-vector mode, \ref ECLIC_NON_VECTOR_INTERRUPT
 505:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                        - 1  vector mode, \ref ECLIC_VECTOR_INTERRUPT
 506:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 507:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 508:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 509:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetShvIRQ
 510:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 511:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_SetShvIRQ(IRQn_Type IRQn, uint32_t shv)
 512:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 513:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTATTR &= ~CLIC_INTATTR_SHV_Msk;
 1320              		.loc 2 513 5
 1321              		.loc 2 513 31 is_stmt 0
 1322 0072 B71600D2 		li	a3,-771747840
 1323 0076 83C7E601 		lbu	a5,30(a3)
 1324 007a 93F7E70F 		andi	a5,a5,254
 1325 007e 238FF600 		sb	a5,30(a3)
 514:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTATTR |= (uint8_t)(shv<<CLIC_INTATTR_SHV_Pos);
 1326              		.loc 2 514 5 is_stmt 1
 1327              		.loc 2 514 31 is_stmt 0
 1328 0082 83C7E601 		lbu	a5,30(a3)
 1329 0086 93F7F70F 		andi	a5,a5,0xff
 1330 008a 238FF600 		sb	a5,30(a3)
 1331              	.LVL81:
 1332              	.LBE295:
 1333              	.LBE294:
 1334              	.LBE308:
 326:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     ECLIC_EnableIRQ(CLIC_INT_TMR);
 1335              		.loc 4 326 5 is_stmt 1
 1336              	.LBB309:
 1337              	.LBB296:
 1338              	.LBB297:
 515:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 516:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 517:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 518:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get interrupt working mode for a specific interrupt
 519:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 520:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function get selective hardware vector or non-vector working mode of the specific interrupt
 521:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 522:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \return       shv
 523:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                        - 0  non-vector mode, \ref ECLIC_NON_VECTOR_INTERRUPT
 524:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *                        - 1  vector mode, \ref ECLIC_VECTOR_INTERRUPT
 525:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 526:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 527:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 528:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_SetShvIRQ
 529:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 530:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint32_t __ECLIC_GetShvIRQ(IRQn_Type IRQn)
 531:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 532:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return ((int32_t)(((ECLIC->CTRL[IRQn].INTATTR) & CLIC_INTATTR_SHV_Msk)>>CLIC_INTATTR_SHV_Pos));
 533:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 534:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 535:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 536:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Modify ECLIC Interrupt Input Control Register for a specific interrupt
 537:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 538:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function modify ECLIC Interrupt Input Control(CLICINTCTL[i]) register of the specific inter
 539:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 540:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      intctrl  Set value for CLICINTCTL[i] register
 541:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 542:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 543:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 544:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetCtrlIRQ
 545:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 546:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_SetCtrlIRQ(IRQn_Type IRQn, uint8_t intctrl)
 547:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 548:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTCTRL = intctrl;
 549:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 550:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 551:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 552:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Get ECLIC Interrupt Input Control Register value for a specific interrupt
 553:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 554:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function modify ECLIC Interrupt Input Control register of the specific interrupt \em IRQn.
 555:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 556:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \return       value of ECLIC Interrupt Input Control register
 557:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 558:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 559:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 560:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_SetCtrlIRQ
 561:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 562:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE uint8_t __ECLIC_GetCtrlIRQ(IRQn_Type IRQn)
 563:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 564:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     return (ECLIC->CTRL[IRQn].INTCTRL);
 565:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 566:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 567:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** /**
 568:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \brief  Set ECLIC Interrupt level of a specific interrupt
 569:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \details
 570:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * This function set interrupt level of the specific interrupt \em IRQn.
 571:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      IRQn  Interrupt number
 572:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \param [in]      lvl_abs   Interrupt level
 573:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \remarks
 574:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - IRQn must not be negative.
 575:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - If lvl_abs to be set is larger than the max level allowed, it will be force to be max level.
 576:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - When you set level value you need use clciinfo.nlbits to get the width of level.
 577:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *   Then we could know the maximum of level. CLICINTCTLBITS is how many total bits are
 578:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  *   present in the CLICINTCTL register.
 579:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * \sa
 580:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  * - \ref ECLIC_GetLevelIRQ
 581:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****  */
 582:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** __STATIC_FORCEINLINE void __ECLIC_SetLevelIRQ(IRQn_Type IRQn, uint8_t lvl_abs)
 583:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** {
 584:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t nlbits = __ECLIC_GetCfgNlbits();
 1339              		.loc 2 584 5
 1340              	.LBB298:
 1341              	.LBB299:
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1342              		.loc 2 276 5
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1343              		.loc 2 276 30 is_stmt 0
 1344 008e B70700D2 		li	a5,-771751936
 1345 0092 83C70700 		lbu	a5,0(a5)
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1346              		.loc 2 276 13
 1347 0096 8583     		srli	a5,a5,1
 1348 0098 BD8B     		andi	a5,a5,15
 1349              	.LVL82:
 1350              	.LBE299:
 1351              	.LBE298:
 585:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t intctlbits = (uint8_t)__ECLIC_INTCTLBITS;
 1352              		.loc 2 585 5 is_stmt 1
 586:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 587:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     if (nlbits == 0) {
 1353              		.loc 2 587 5
 1354              		.loc 2 587 8 is_stmt 0
 1355 009a 85C3     		beq	a5,zero,.L82
 588:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         return;
 589:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     }
 590:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 591:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     if (nlbits > intctlbits) {
 1356              		.loc 2 591 5 is_stmt 1
 1357              	.LVL83:
 592:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         nlbits = intctlbits;
 593:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     }
 594:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t maxlvl = ((1 << nlbits) - 1);
 1358              		.loc 2 594 5
 1359              		.loc 2 594 26 is_stmt 0
 1360 009c 1147     		li	a4,4
 1361 009e 33D7E70A 		minu	a4,a5,a4
 1362              	.LVL84:
 595:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     if (lvl_abs > maxlvl) {
 1363              		.loc 2 595 5 is_stmt 1
 596:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         lvl_abs = maxlvl;
 597:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     }
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t lvl = lvl_abs << (ECLIC_MAX_NLBITS - nlbits);
 1364              		.loc 2 598 5
 599:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t cur_ctrl = __ECLIC_GetCtrlIRQ(IRQn);
 1365              		.loc 2 599 5
 1366              	.LBB300:
 1367              	.LBB301:
 564:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1368              		.loc 2 564 5
 564:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1369              		.loc 2 564 30 is_stmt 0
 1370 00a2 83C7F601 		lbu	a5,31(a3)
 1371              	.LVL85:
 1372              	.LBE301:
 1373              	.LBE300:
 600:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl << nlbits;
 1374              		.loc 2 600 5 is_stmt 1
 601:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl >> nlbits;
 1375              		.loc 2 601 5
 600:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl << nlbits;
 1376              		.loc 2 600 25 is_stmt 0
 1377 00a6 B397E700 		sll	a5,a5,a4
 1378              	.LVL86:
 1379              		.loc 2 601 25
 1380 00aa 93F7F70F 		andi	a5,a5,0xff
 1381 00ae B3D7E740 		sra	a5,a5,a4
 1382              		.loc 2 601 14
 1383 00b2 93F7F70F 		andi	a5,a5,0xff
 1384              	.LVL87:
 602:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __ECLIC_SetCtrlIRQ(IRQn, (cur_ctrl | lvl));
 1385              		.loc 2 602 5 is_stmt 1
 1386              	.LBB302:
 1387              	.LBB303:
 548:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1388              		.loc 2 548 5
 548:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1389              		.loc 2 548 31 is_stmt 0
 1390 00b6 A38FF600 		sb	a5,31(a3)
 1391              	.LVL88:
 1392              	.L82:
 1393              	.LBE303:
 1394              	.LBE302:
 1395              	.LBE297:
 1396              	.LBE296:
 1397              	.LBE309:
 327:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     return (0UL);
 1398              		.loc 4 327 5 is_stmt 1
 1399              	.LBB310:
 1400              	.LBB304:
 1401              	.LBB305:
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1402              		.loc 2 367 5
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1403              		.loc 2 367 29 is_stmt 0
 1404 00ba B71600D2 		li	a3,-771747840
 1405 00be 83C7D601 		lbu	a5,29(a3)
 1406 00c2 93F7F70F 		andi	a5,a5,0xff
 1407 00c6 93E71700 		ori	a5,a5,1
 1408 00ca A38EF600 		sb	a5,29(a3)
 1409              	.LVL89:
 1410              	.LBE305:
 1411              	.LBE304:
 1412              	.LBE310:
 328:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h **** }
 1413              		.loc 4 328 5 is_stmt 1
 676:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_DisableIRQ(CLIC_INT_TMR);
 1414              		.loc 1 676 5
 1415              	.LBB311:
 1416              	.LBB312:
 401:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1417              		.loc 2 401 5
 401:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1418              		.loc 2 401 29 is_stmt 0
 1419 00ce 83C7D601 		lbu	a5,29(a3)
 1420 00d2 93F7E70F 		andi	a5,a5,254
 1421 00d6 A38EF600 		sb	a5,29(a3)
 1422              	.LVL90:
 1423              	.LBE312:
 1424              	.LBE311:
 677:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetLevelIRQ(CLIC_INT_TMR, configKERNEL_INTERRUPT_PRIORITY);
 1425              		.loc 1 677 5 is_stmt 1
 1426              	.LBB313:
 1427              	.LBB314:
 584:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t intctlbits = (uint8_t)__ECLIC_INTCTLBITS;
 1428              		.loc 2 584 5
 1429              	.LBB315:
 1430              	.LBB316:
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1431              		.loc 2 276 5
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1432              		.loc 2 276 30 is_stmt 0
 1433 00da B70700D2 		li	a5,-771751936
 1434 00de 83C70700 		lbu	a5,0(a5)
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1435              		.loc 2 276 13
 1436 00e2 8583     		srli	a5,a5,1
 1437 00e4 BD8B     		andi	a5,a5,15
 1438              	.LVL91:
 1439              	.LBE316:
 1440              	.LBE315:
 585:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 1441              		.loc 2 585 5 is_stmt 1
 587:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         return;
 1442              		.loc 2 587 5
 587:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         return;
 1443              		.loc 2 587 8 is_stmt 0
 1444 00e6 85C3     		beq	a5,zero,.L83
 591:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         nlbits = intctlbits;
 1445              		.loc 2 591 5 is_stmt 1
 1446              	.LVL92:
 594:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     if (lvl_abs > maxlvl) {
 1447              		.loc 2 594 5
 594:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     if (lvl_abs > maxlvl) {
 1448              		.loc 2 594 26 is_stmt 0
 1449 00e8 1147     		li	a4,4
 1450 00ea 33D7E70A 		minu	a4,a5,a4
 1451              	.LVL93:
 595:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         lvl_abs = maxlvl;
 1452              		.loc 2 595 5 is_stmt 1
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t cur_ctrl = __ECLIC_GetCtrlIRQ(IRQn);
 1453              		.loc 2 598 5
 599:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl << nlbits;
 1454              		.loc 2 599 5
 1455              	.LBB317:
 1456              	.LBB318:
 564:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1457              		.loc 2 564 5
 564:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1458              		.loc 2 564 30 is_stmt 0
 1459 00ee 83C7F601 		lbu	a5,31(a3)
 1460              	.LVL94:
 1461              	.LBE318:
 1462              	.LBE317:
 600:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl >> nlbits;
 1463              		.loc 2 600 5 is_stmt 1
 601:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __ECLIC_SetCtrlIRQ(IRQn, (cur_ctrl | lvl));
 1464              		.loc 2 601 5
 600:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl >> nlbits;
 1465              		.loc 2 600 25 is_stmt 0
 1466 00f2 B397E700 		sll	a5,a5,a4
 1467              	.LVL95:
 601:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __ECLIC_SetCtrlIRQ(IRQn, (cur_ctrl | lvl));
 1468              		.loc 2 601 25
 1469 00f6 93F7F70F 		andi	a5,a5,0xff
 1470 00fa B3D7E740 		sra	a5,a5,a4
 601:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __ECLIC_SetCtrlIRQ(IRQn, (cur_ctrl | lvl));
 1471              		.loc 2 601 14
 1472 00fe 93F7F70F 		andi	a5,a5,0xff
 1473              	.LVL96:
 1474              		.loc 2 602 5 is_stmt 1
 1475              	.LBB319:
 1476              	.LBB320:
 548:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1477              		.loc 2 548 5
 548:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1478              		.loc 2 548 31 is_stmt 0
 1479 0102 A38FF600 		sb	a5,31(a3)
 1480              	.LVL97:
 1481              	.L83:
 1482              	.LBE320:
 1483              	.LBE319:
 1484              	.LBE314:
 1485              	.LBE313:
 678:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetShvIRQ(CLIC_INT_TMR, 0);
 1486              		.loc 1 678 5 is_stmt 1
 1487              	.LBB321:
 1488              	.LBB322:
 513:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTATTR |= (uint8_t)(shv<<CLIC_INTATTR_SHV_Pos);
 1489              		.loc 2 513 5
 513:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTATTR |= (uint8_t)(shv<<CLIC_INTATTR_SHV_Pos);
 1490              		.loc 2 513 31 is_stmt 0
 1491 0106 B71700D2 		li	a5,-771747840
 1492 010a 03C7E701 		lbu	a4,30(a5)
 1493 010e 1377E70F 		andi	a4,a4,254
 1494 0112 238FE700 		sb	a4,30(a5)
 514:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1495              		.loc 2 514 5 is_stmt 1
 514:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1496              		.loc 2 514 31 is_stmt 0
 1497 0116 03C7E701 		lbu	a4,30(a5)
 1498 011a 1377F70F 		andi	a4,a4,0xff
 1499 011e 238FE700 		sb	a4,30(a5)
 1500              	.LVL98:
 1501              	.LBE322:
 1502              	.LBE321:
 679:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_EnableIRQ(CLIC_INT_TMR);
 1503              		.loc 1 679 5 is_stmt 1
 1504              	.LBB323:
 1505              	.LBB324:
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1506              		.loc 2 367 5
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1507              		.loc 2 367 29 is_stmt 0
 1508 0122 03C7D701 		lbu	a4,29(a5)
 1509 0126 1377F70F 		andi	a4,a4,0xff
 1510 012a 13671700 		ori	a4,a4,1
 1511 012e A38EE700 		sb	a4,29(a5)
 1512              	.LVL99:
 1513              	.LBE324:
 1514              	.LBE323:
 680:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 681:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Set SWI interrupt level to lowest level/priority, SysTimerSW as Vector Interrupt */
 682:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetShvIRQ(CLIC_INT_SFT, 1);
 1515              		.loc 1 682 5 is_stmt 1
 1516              	.LBB325:
 1517              	.LBB326:
 513:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTATTR |= (uint8_t)(shv<<CLIC_INTATTR_SHV_Pos);
 1518              		.loc 2 513 5
 513:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     ECLIC->CTRL[IRQn].INTATTR |= (uint8_t)(shv<<CLIC_INTATTR_SHV_Pos);
 1519              		.loc 2 513 31 is_stmt 0
 1520 0132 03C7E700 		lbu	a4,14(a5)
 1521 0136 1377E70F 		andi	a4,a4,254
 1522 013a 2387E700 		sb	a4,14(a5)
 514:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1523              		.loc 2 514 5 is_stmt 1
 514:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1524              		.loc 2 514 31 is_stmt 0
 1525 013e 03C7E700 		lbu	a4,14(a5)
 1526 0142 1377F70F 		andi	a4,a4,0xff
 1527 0146 13671700 		ori	a4,a4,1
 1528 014a 2387E700 		sb	a4,14(a5)
 1529              	.LVL100:
 1530              	.LBE326:
 1531              	.LBE325:
 683:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_SetLevelIRQ(CLIC_INT_SFT, configKERNEL_INTERRUPT_PRIORITY);
 1532              		.loc 1 683 5 is_stmt 1
 1533              	.LBB327:
 1534              	.LBB328:
 584:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t intctlbits = (uint8_t)__ECLIC_INTCTLBITS;
 1535              		.loc 2 584 5
 1536              	.LBB329:
 1537              	.LBB330:
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1538              		.loc 2 276 5
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1539              		.loc 2 276 30 is_stmt 0
 1540 014e 370700D2 		li	a4,-771751936
 1541 0152 03470700 		lbu	a4,0(a4)
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1542              		.loc 2 276 13
 1543 0156 0583     		srli	a4,a4,1
 1544 0158 3D8B     		andi	a4,a4,15
 1545              	.LVL101:
 1546              	.LBE330:
 1547              	.LBE329:
 585:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** 
 1548              		.loc 2 585 5 is_stmt 1
 587:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         return;
 1549              		.loc 2 587 5
 587:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         return;
 1550              		.loc 2 587 8 is_stmt 0
 1551 015a 05C3     		beq	a4,zero,.L84
 591:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         nlbits = intctlbits;
 1552              		.loc 2 591 5 is_stmt 1
 1553              	.LVL102:
 594:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     if (lvl_abs > maxlvl) {
 1554              		.loc 2 594 5
 594:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     if (lvl_abs > maxlvl) {
 1555              		.loc 2 594 26 is_stmt 0
 1556 015c 9146     		li	a3,4
 1557 015e B356D70A 		minu	a3,a4,a3
 1558              	.LVL103:
 595:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****         lvl_abs = maxlvl;
 1559              		.loc 2 595 5 is_stmt 1
 598:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     uint8_t cur_ctrl = __ECLIC_GetCtrlIRQ(IRQn);
 1560              		.loc 2 598 5
 599:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl << nlbits;
 1561              		.loc 2 599 5
 1562              	.LBB331:
 1563              	.LBB332:
 564:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1564              		.loc 2 564 5
 564:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1565              		.loc 2 564 30 is_stmt 0
 1566 0162 03C7F700 		lbu	a4,15(a5)
 1567              	.LVL104:
 1568              	.LBE332:
 1569              	.LBE331:
 600:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl >> nlbits;
 1570              		.loc 2 600 5 is_stmt 1
 601:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __ECLIC_SetCtrlIRQ(IRQn, (cur_ctrl | lvl));
 1571              		.loc 2 601 5
 600:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     cur_ctrl = cur_ctrl >> nlbits;
 1572              		.loc 2 600 25 is_stmt 0
 1573 0166 3317D700 		sll	a4,a4,a3
 1574              	.LVL105:
 601:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __ECLIC_SetCtrlIRQ(IRQn, (cur_ctrl | lvl));
 1575              		.loc 2 601 25
 1576 016a 1377F70F 		andi	a4,a4,0xff
 1577 016e 3357D740 		sra	a4,a4,a3
 601:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h ****     __ECLIC_SetCtrlIRQ(IRQn, (cur_ctrl | lvl));
 1578              		.loc 2 601 14
 1579 0172 1377F70F 		andi	a4,a4,0xff
 1580              	.LVL106:
 1581              		.loc 2 602 5 is_stmt 1
 1582              	.LBB333:
 1583              	.LBB334:
 548:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1584              		.loc 2 548 5
 548:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1585              		.loc 2 548 31 is_stmt 0
 1586 0176 A387E700 		sb	a4,15(a5)
 1587              	.LVL107:
 1588              	.L84:
 1589              	.LBE334:
 1590              	.LBE333:
 1591              	.LBE328:
 1592              	.LBE327:
 684:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     ECLIC_EnableIRQ(CLIC_INT_SFT);
 1593              		.loc 1 684 5 is_stmt 1
 1594              	.LBB335:
 1595              	.LBB336:
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1596              		.loc 2 367 5
 367:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1597              		.loc 2 367 29 is_stmt 0
 1598 017a 371700D2 		li	a4,-771747840
 1599 017e 8347D700 		lbu	a5,13(a4)
 1600 0182 93F7F70F 		andi	a5,a5,0xff
 1601 0186 93E71700 		ori	a5,a5,1
 1602 018a A306F700 		sb	a5,13(a4)
 1603              	.LVL108:
 1604              	.LBE336:
 1605              	.LBE335:
 685:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 1606              		.loc 1 685 1
 1607 018e 17030000 		tail	__riscv_restore_4
 1607      67000300 
 1608              		.cfi_remember_state
 1609              		.cfi_restore 19
 1610              		.cfi_restore 18
 1611              		.cfi_restore 9
 1612              		.cfi_restore 8
 1613              		.cfi_restore 1
 1614              		.cfi_def_cfa_offset 0
 1615              	.LVL109:
 1616              	.L80:
 1617              		.cfi_restore_state
 1618              	.LBB337:
 1619              	.LBB306:
 1620              	.LBB293:
 152:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(value & 0xFFFFFFFF);
 1621              		.loc 4 152 9 is_stmt 1
 152:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****         SysTimer->MTIMERCMP.MTIMERCMP_32.MTIMERCMP_lo = (uint32_t)(value & 0xFFFFFFFF);
 1622              		.loc 4 152 55 is_stmt 0
 1623 0196 23A60700 		sw	zero,12(a5)
 153:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     }
 1624              		.loc 4 153 9 is_stmt 1
 153:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_timer.h ****     }
 1625              		.loc 4 153 55 is_stmt 0
 1626 019a 80C7     		sw	s0,8(a5)
 1627 019c D9BD     		j	.L81
 1628              	.LBE293:
 1629              	.LBE306:
 1630              	.LBE337:
 1631              		.cfi_endproc
 1632              	.LFE381:
 1634              		.section	.text.xPortStartScheduler,"ax",@progbits
 1635              		.align	1
 1636              		.globl	xPortStartScheduler
 1638              	xPortStartScheduler:
 1639              	.LFB372:
 368:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0. */
 1640              		.loc 1 368 1 is_stmt 1
 1641              		.cfi_startproc
 1642 0000 17030000 		call	t0,__riscv_save_0
 1642      E7020300 
 1643              		.cfi_offset 1, -4
 1644              		.cfi_def_cfa_offset 16
 370:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1645              		.loc 1 370 55
 373:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     FREERTOS_PORT_DEBUG("Max SysCall MTH is set to 0x%x\n", uxMaxSysCallMTH);
 1646              		.loc 1 373 5
 1647              	.LVL110:
 1648              	.LBB344:
 1649              	.LBB345:
 340:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t intctlbits = __ECLIC_INTCTLBITS;
 1650              		.loc 1 340 5
 1651              	.LBB346:
 1652              	.LBB347:
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1653              		.loc 2 276 5
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1654              		.loc 2 276 30 is_stmt 0
 1655 0008 B70700D2 		li	a5,-771751936
 1656 000c 83C70700 		lbu	a5,0(a5)
 1657              	.LVL111:
 1658              	.LBE347:
 1659              	.LBE346:
 341:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t lvlbits, lfabits;
 1660              		.loc 1 341 5 is_stmt 1
 342:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t maxsyscallmth = 0;
 1661              		.loc 1 342 5
 343:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t temp;
 1662              		.loc 1 343 5
 344:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1663              		.loc 1 344 5
 346:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         lvlbits = nlbits;
 1664              		.loc 1 346 5
 1665 0010 1147     		li	a4,4
 359:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1666              		.loc 1 359 39 is_stmt 0
 1667 0012 A946     		li	a3,10
 1668              	.LBB349:
 1669              	.LBB348:
 276:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_eclic.h **** }
 1670              		.loc 2 276 13
 1671 0014 8583     		srli	a5,a5,1
 1672              	.LVL112:
 1673 0016 BD8B     		andi	a5,a5,15
 1674 0018 B3D7E70A 		minu	a5,a5,a4
 1675              	.LVL113:
 1676              	.LBE348:
 1677              	.LBE349:
 352:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1678              		.loc 1 352 5 is_stmt 1
 354:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (max_syscall_prio > temp) {
 1679              		.loc 1 354 5
 355:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         max_syscall_prio = temp;
 1680              		.loc 1 355 5
 359:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1681              		.loc 1 359 5
 352:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1682              		.loc 1 352 13 is_stmt 0
 1683 001c 2147     		li	a4,8
 1684 001e 1D8F     		sub	a4,a4,a5
 1685              	.LVL114:
 361:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 1686              		.loc 1 361 5 is_stmt 1
 354:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (max_syscall_prio > temp) {
 1687              		.loc 1 354 16 is_stmt 0
 1688 0020 B317F028 		bset	a5,x0,a5
 354:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (max_syscall_prio > temp) {
 1689              		.loc 1 354 10
 1690 0024 FD17     		addi	a5,a5,-1
 359:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1691              		.loc 1 359 39
 1692 0026 93F7F70F 		andi	a5,a5,0xff
 1693 002a B3D7D70A 		minu	a5,a5,a3
 1694 002e B397E700 		sll	a5,a5,a4
 359:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1695              		.loc 1 359 57
 1696 0032 3317E028 		bset	a4,x0,a4
 359:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1697              		.loc 1 359 69
 1698 0036 7D17     		addi	a4,a4,-1
 359:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1699              		.loc 1 359 51
 1700 0038 D98F     		or	a5,a5,a4
 1701              	.LBE345:
 1702              	.LBE344:
 373:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     FREERTOS_PORT_DEBUG("Max SysCall MTH is set to 0x%x\n", uxMaxSysCallMTH);
 1703              		.loc 1 373 21
 1704 003a 37070000 		lui	a4,%hi(.LANCHOR0)
 1705 003e 2300F700 		sb	a5,%lo(.LANCHOR0)(a4)
 374:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1706              		.loc 1 374 77 is_stmt 1
 384:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Start the timer that generates the tick ISR.  Interrupts are disabled
 1707              		.loc 1 384 5
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 1708              		.loc 3 609 5
 1709              	.LBB350:
 1710              	.LBB351:
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 1711              		.loc 3 609 5
 1712              	.LVL115:
 609:..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h **** }
 1713              		.loc 3 609 5
 1714 0042 A147     		li	a5,8
 1715              	 #APP
 1716              	# 609 "..\..\..\..\plf\riscv\NMSIS\Core\Include/core_feature_base.h" 1
 1717              		csrc 0x300, a5
 1718              	# 0 "" 2
 1719              	 #NO_APP
 1720              	.LBE351:
 1721              	.LBE350:
 387:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1722              		.loc 1 387 5
 1723 0048 97000000 		call	vPortSetupTimerInterrupt
 1723      E7800000 
 1724              	.LVL116:
 390:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1725              		.loc 1 390 5
 390:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1726              		.loc 1 390 23 is_stmt 0
 1727 0050 B7070000 		lui	a5,%hi(.LANCHOR1)
 1728 0054 23A00700 		sw	zero,%lo(.LANCHOR1)(a5)
 393:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1729              		.loc 1 393 5 is_stmt 1
 1730 0058 97000000 		call	prvPortStartFirstTask
 1730      E7800000 
 1731              	.LVL117:
 401:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     prvTaskExitError();
 1732              		.loc 1 401 5
 1733 0060 97000000 		call	vTaskSwitchContext
 1733      E7800000 
 1734              	.LVL118:
 402:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 1735              		.loc 1 402 5
 1736 0068 97000000 		call	prvTaskExitError
 1736      E7800000 
 1737              	.LVL119:
 405:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 1738              		.loc 1 405 5
 406:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 1739              		.loc 1 406 1 is_stmt 0
 1740 0070 0145     		li	a0,0
 1741 0072 17030000 		tail	__riscv_restore_0
 1741      67000300 
 1742              		.cfi_restore 1
 1743              		.cfi_def_cfa_offset 0
 1744              		.cfi_endproc
 1745              	.LFE372:
 1747              		.section	.text.vApplicationIdleHook,"ax",@progbits
 1748              		.align	1
 1749              		.globl	vApplicationIdleHook
 1751              	vApplicationIdleHook:
 1752              	.LFB382:
 686:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 687:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 688:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 689:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 690:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #if( configASSERT_DEFINED == 1 )
 691:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 692:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vPortValidateInterruptPriority(void)
 693:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 694:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     uint8_t ucCurrentPriority;
 695:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 696:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     CSR_MSUBM_Type msubm = (CSR_MSUBM_Type)__RV_CSR_READ(CSR_MSUBM);
 697:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     /* Make sure current trap type is interrupt */
 698:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     configASSERT(msubm.b.typ == 1);
 699:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     if (msubm.b.typ) {
 700:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* Get the interrupt's priority. */
 701:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ucCurrentPriority = (__RV_CSR_READ(CSR_MINTSTATUS) >> 24) >> (ECLIC_MAX_NLBITS - __ECLIC_Ge
 702:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         /* The following assertion will fail if a service routine (ISR) for
 703:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         an interrupt that has been assigned a priority above
 704:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ucMaxSysCallPriority calls an ISR safe FreeRTOS API
 705:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         function.  ISR safe FreeRTOS API functions must *only* be called
 706:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         from interrupts that have been assigned a priority at or below
 707:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ucMaxSysCallPriority.
 708:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 709:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         Numerically low interrupt priority numbers represent logically high
 710:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         interrupt priorities, therefore the priority of the interrupt must
 711:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         be set to a value equal to or numerically *higher* than
 712:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         ucMaxSysCallPriority.
 713:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 714:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         Interrupts that use the FreeRTOS API must not be left at their
 715:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         default priority of zero as that is the highest possible priority,
 716:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         which is guaranteed to be above ucMaxSysCallPriority,
 717:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         and therefore also guaranteed to be invalid.
 718:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 719:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         FreeRTOS maintains separate thread and ISR API functions to ensure
 720:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         interrupt entry is as fast and simple as possible.
 721:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 722:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         The following links provide detailed information:
 723:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         http://www.freertos.org/FAQHelp.html */
 724:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****         configASSERT(ucCurrentPriority <= ucMaxSysCallPriority);
 725:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     }
 726:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 727:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 728:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #endif /* configASSERT_DEFINED */
 729:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 730:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** /*-----------------------------------------------------------*/
 731:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vApplicationIdleHook( void )
 732:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 1753              		.loc 1 732 1 is_stmt 1
 1754              		.cfi_startproc
 733:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     extern void trace_dma_print(void);
 1755              		.loc 1 733 5
 734:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     trace_dma_print();
 1756              		.loc 1 734 5
 1757 0000 17030000 		tail	trace_dma_print
 1757      67000300 
 1758              	.LVL120:
 1759              		.cfi_endproc
 1760              	.LFE382:
 1762              		.section	.rodata.vApplicationStackOverflowHook.str1.4,"aMS",@progbits,1
 1763              		.align	2
 1764              	.LC0:
 1765 0000 0A0D4572 		.string	"\n\rError: STACK OVERFLOW, TaskName: %s\n\r"
 1765      726F723A 
 1765      20535441 
 1765      434B204F 
 1765      56455246 
 1766              		.section	.text.vApplicationStackOverflowHook,"ax",@progbits
 1767              		.align	1
 1768              		.globl	vApplicationStackOverflowHook
 1770              	vApplicationStackOverflowHook:
 1771              	.LFB383:
 735:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** }
 736:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 737:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** #include <stdio.h>
 738:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** void vApplicationStackOverflowHook( xTaskHandle pxTask, signed char *pcTaskName )
 739:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** {
 1772              		.loc 1 739 1
 1773              		.cfi_startproc
 1774              	.LVL121:
 1775 0000 17030000 		call	t0,__riscv_save_0
 1775      E7020300 
 1776              		.cfi_offset 1, -4
 1777              		.cfi_def_cfa_offset 16
 740:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     printf("\n\rError: STACK OVERFLOW, TaskName: %s\n\r", pcTaskName);
 1778              		.loc 1 740 5
 1779 0008 37050000 		lui	a0,%hi(.LC0)
 1780              	.LVL122:
 1781 000c 13050500 		addi	a0,a0,%lo(.LC0)
 1782 0010 97000000 		call	printf
 1782      E7800000 
 1783              	.LVL123:
 1784              	.L100:
 741:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c **** 
 742:C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c ****     for (; ;);
 1785              		.loc 1 742 5 discriminator 1
 1786              		.loc 1 742 14 discriminator 1
 1787              		.loc 1 742 12 discriminator 1
 1788 0018 01A0     		j	.L100
 1789              		.cfi_endproc
 1790              	.LFE383:
 1792              		.globl	xMaximumPossibleSuppressedTicks
 1793              		.globl	uxMaxSysCallMTH
 1794              		.section	.sbss.ulStoppedTimerCompensation,"aw",@nobits
 1795              		.align	3
 1796              		.set	.LANCHOR4,. + 0
 1799              	ulStoppedTimerCompensation:
 1800 0000 00000000 		.zero	8
 1800      00000000 
 1801              		.section	.sbss.ulTimerCountsForOneTick,"aw",@nobits
 1802              		.align	3
 1803              		.set	.LANCHOR3,. + 0
 1806              	ulTimerCountsForOneTick:
 1807 0000 00000000 		.zero	8
 1807      00000000 
 1808              		.section	.sbss.xMaximumPossibleSuppressedTicks,"aw",@nobits
 1809              		.align	3
 1810              		.set	.LANCHOR2,. + 0
 1813              	xMaximumPossibleSuppressedTicks:
 1814 0000 00000000 		.zero	8
 1814      00000000 
 1815              		.section	.sdata.uxCriticalNesting,"aw"
 1816              		.align	2
 1817              		.set	.LANCHOR1,. + 0
 1820              	uxCriticalNesting:
 1821 0000 AAAAAAAA 		.word	-1431655766
 1822              		.section	.sdata.uxMaxSysCallMTH,"aw"
 1823              		.set	.LANCHOR0,. + 0
 1826              	uxMaxSysCallMTH:
 1827 0000 FF       		.byte	-1
 1828              		.text
 1829              	.Letext0:
 1830              		.file 5 "c:\\users\\stapi\\onedrive\\desktop\\gd32vw553\\embeddedbuilder_v1.4.7.26843\\tools\\nucl
 1831              		.file 6 "c:\\users\\stapi\\onedrive\\desktop\\gd32vw553\\embeddedbuilder_v1.4.7.26843\\tools\\nucl
 1832              		.file 7 "..\\..\\..\\..\\rtos\\FreeRTOS\\Source\\include/projdefs.h"
 1833              		.file 8 "..\\..\\..\\..\\rtos\\FreeRTOS\\Source\\portable\\riscv32/portmacro.h"
 1834              		.file 9 "..\\..\\..\\..\\rtos\\FreeRTOS\\Source\\include/task.h"
 1835              		.file 10 "..\\..\\..\\..\\plf\\riscv\\gd32vw55x/gd32vw55x.h"
 1836              		.file 11 "..\\..\\..\\..\\rtos\\rtos_wrapper/wrapper_os_config.h"
 1837              		.file 12 "c:\\users\\stapi\\onedrive\\desktop\\gd32vw553\\embeddedbuilder_v1.4.7.26843\\tools\\nuc
 1838              		.file 13 "..\\..\\..\\..\\rtos\\FreeRTOS\\config/FreeRTOSConfig.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 port.c
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:13     .text.vPortRaiseBASEPRI:0000000000000000 vPortRaiseBASEPRI
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:17     .text.vPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:18     .text.vPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:19     .text.vPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:26     .text.vPortRaiseBASEPRI:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:27     .text.vPortRaiseBASEPRI:0000000000000008 .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:173    .text.vPortRaiseBASEPRI:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:39     .text.vPortRaiseBASEPRI:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:40     .text.vPortRaiseBASEPRI:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:46     .text.prvTaskExitError:0000000000000000 prvTaskExitError
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:49     .text.prvTaskExitError:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:50     .text.prvTaskExitError:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:51     .text.prvTaskExitError:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:52     .text.prvTaskExitError:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:54     .text.prvTaskExitError:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:55     .text.prvTaskExitError:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:56     .text.prvTaskExitError:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:58     .text.prvTaskExitError:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:60     .text.prvTaskExitError:000000000000000c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:61     .text.prvTaskExitError:000000000000000c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:68     .text.prvTaskExitError:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:69     .text.prvTaskExitError:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:75     .text.prvTaskExitError:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:76     .text.prvTaskExitError:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:78     .text.prvTaskExitError:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:80     .text.prvTaskExitError:000000000000001a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:81     .text.prvTaskExitError:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:82     .text.prvTaskExitError:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:84     .text.prvTaskExitError:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:85     .text.prvTaskExitError:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:87     .text.prvTaskExitError:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:91     .text.prvTaskExitError:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:93     .text.prvTaskExitError:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:95     .text.prvTaskExitError:0000000000000024 .L0 
........plfiscvNMSISCoreInclude/core_feature_base.h:729    .text.prvTaskExitError:0000000000000024 .L0 
........plfiscvNMSISCoreInclude/core_feature_base.h:730    .text.prvTaskExitError:0000000000000028 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:109    .text.prvTaskExitError:000000000000002c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:112    .text.prvTaskExitError:000000000000002e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:119    .text.ulPortRaiseBASEPRI:0000000000000000 ulPortRaiseBASEPRI
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:122    .text.ulPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:123    .text.ulPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:124    .text.ulPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:127    .text.ulPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:128    .text.ulPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:129    .text.ulPortRaiseBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:133    .text.ulPortRaiseBASEPRI:0000000000000004 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:137    .text.ulPortRaiseBASEPRI:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:141    .text.ulPortRaiseBASEPRI:000000000000000c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:145    .text.ulPortRaiseBASEPRI:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:152    .text.ulPortRaiseBASEPRI:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:153    .text.ulPortRaiseBASEPRI:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:154    .text.ulPortRaiseBASEPRI:0000000000000014 .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:184    .text.ulPortRaiseBASEPRI:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:164    .text.ulPortRaiseBASEPRI:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:166    .text.ulPortRaiseBASEPRI:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:167    .text.ulPortRaiseBASEPRI:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:174    .text.vPortSetBASEPRI:0000000000000000 vPortSetBASEPRI
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:177    .text.vPortSetBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:179    .text.vPortSetBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:182    .text.vPortSetBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:183    .text.vPortSetBASEPRI:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:184    .text.vPortSetBASEPRI:0000000000000000 .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:195    .text.vPortSetBASEPRI:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:196    .text.vPortSetBASEPRI:000000000000000c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:197    .text.vPortSetBASEPRI:000000000000000e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:204    .text.portYIELD:0000000000000000 portYIELD
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:207    .text.portYIELD:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:208    .text.portYIELD:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:212    .text.portYIELD:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:213    .text.portYIELD:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:214    .text.portYIELD:0000000000000000 .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:205    .text.portYIELD:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:227    .text.portYIELD:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:228    .text.portYIELD:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:235    .text.pxPortInitialiseStack:0000000000000000 pxPortInitialiseStack
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:238    .text.pxPortInitialiseStack:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:240    .text.pxPortInitialiseStack:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:241    .text.pxPortInitialiseStack:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:242    .text.pxPortInitialiseStack:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:243    .text.pxPortInitialiseStack:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:249    .text.pxPortInitialiseStack:000000000000000c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:250    .text.pxPortInitialiseStack:000000000000000c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:251    .text.pxPortInitialiseStack:000000000000000c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:254    .text.pxPortInitialiseStack:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:257    .text.pxPortInitialiseStack:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:258    .text.pxPortInitialiseStack:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:259    .text.pxPortInitialiseStack:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:262    .text.pxPortInitialiseStack:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:263    .text.pxPortInitialiseStack:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:264    .text.pxPortInitialiseStack:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:267    .text.pxPortInitialiseStack:000000000000001a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:268    .text.pxPortInitialiseStack:000000000000001a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:269    .text.pxPortInitialiseStack:000000000000001a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:272    .text.pxPortInitialiseStack:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:273    .text.pxPortInitialiseStack:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:274    .text.pxPortInitialiseStack:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:277    .text.pxPortInitialiseStack:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:284    .text.vPortEndScheduler:0000000000000000 vPortEndScheduler
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:287    .text.vPortEndScheduler:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:288    .text.vPortEndScheduler:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:289    .text.vPortEndScheduler:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:290    .text.vPortEndScheduler:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:291    .text.vPortEndScheduler:0000000000000002 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:298    .text.vPortEnterCritical:0000000000000000 vPortEnterCritical
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:301    .text.vPortEnterCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:302    .text.vPortEnterCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:303    .text.vPortEnterCritical:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:304    .text.vPortEnterCritical:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:306    .text.vPortEnterCritical:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:309    .text.vPortEnterCritical:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:310    .text.vPortEnterCritical:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:316    .text.vPortEnterCritical:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:317    .text.vPortEnterCritical:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:318    .text.vPortEnterCritical:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:319    .text.vPortEnterCritical:0000000000000026 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:320    .text.vPortEnterCritical:0000000000000026 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:321    .text.vPortEnterCritical:0000000000000026 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:328    .text.vPortExitCritical:0000000000000000 vPortExitCritical
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:331    .text.vPortExitCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:332    .text.vPortExitCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:333    .text.vPortExitCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:334    .text.vPortExitCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:335    .text.vPortExitCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:341    .text.vPortExitCritical:000000000000000e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:342    .text.vPortExitCritical:000000000000000e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:347    .text.vPortExitCritical:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:350    .text.vPortExitCritical:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:351    .text.vPortExitCritical:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:352    .text.vPortExitCritical:0000000000000010 .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:195    .text.vPortExitCritical:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:368    .text.vPortExitCritical:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:369    .text.vPortExitCritical:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:376    .text.vPortInCritical:0000000000000000 vPortInCritical
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:379    .text.vPortInCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:380    .text.vPortInCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:381    .text.vPortInCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:382    .text.vPortInCritical:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:385    .text.vPortInCritical:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:392    .text.vPortAssert:0000000000000000 vPortAssert
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:395    .text.vPortAssert:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:397    .text.vPortAssert:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:398    .text.vPortAssert:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:399    .text.vPortAssert:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:401    .text.vPortAssert:0000000000000002 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:402    .text.vPortAssert:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:403    .text.vPortAssert:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:405    .text.vPortAssert:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:411    .text.vPortAssert:0000000000000012 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:417    .text.vPortAssert:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:420    .text.vPortAssert:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:422    .text.vPortAssert:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:424    .text.vPortAssert:0000000000000014 .L0 
........plfiscvNMSISCoreInclude/core_feature_base.h:729    .text.vPortAssert:0000000000000014 .L0 
........plfiscvNMSISCoreInclude/core_feature_base.h:730    .text.vPortAssert:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:440    .text.vPortAssert:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:441    .text.vPortAssert:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:445    .text.vPortAssert:0000000000000020 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:452    .text.xPortTaskSwitch:0000000000000000 xPortTaskSwitch
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:455    .text.xPortTaskSwitch:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:456    .text.xPortTaskSwitch:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:457    .text.xPortTaskSwitch:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:458    .text.xPortTaskSwitch:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:460    .text.xPortTaskSwitch:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:465    .text.xPortTaskSwitch:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:466    .text.xPortTaskSwitch:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:467    .text.xPortTaskSwitch:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:474    .text.xPortTaskSwitch:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:479    .text.xPortTaskSwitch:0000000000000026 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:482    .text.xPortTaskSwitch:0000000000000026 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:483    .text.xPortTaskSwitch:0000000000000026 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:484    .text.xPortTaskSwitch:0000000000000026 .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:195    .text.xPortTaskSwitch:000000000000002e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:499    .text.xPortTaskSwitch:0000000000000032 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:500    .text.xPortTaskSwitch:000000000000003a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:501    .text.xPortTaskSwitch:000000000000003a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:502    .text.xPortTaskSwitch:000000000000003a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:509    .text.eclic_mtip_handler:0000000000000000 eclic_mtip_handler
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:512    .text.eclic_mtip_handler:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:513    .text.eclic_mtip_handler:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:514    .text.eclic_mtip_handler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:515    .text.eclic_mtip_handler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:517    .text.eclic_mtip_handler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:520    .text.eclic_mtip_handler:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:523    .text.eclic_mtip_handler:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:524    .text.eclic_mtip_handler:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:527    .text.eclic_mtip_handler:0000000000000020 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:532    .text.eclic_mtip_handler:0000000000000028 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:533    .text.eclic_mtip_handler:0000000000000028 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:538    .text.eclic_mtip_handler:0000000000000030 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:539    .text.eclic_mtip_handler:0000000000000030 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:546    .text.eclic_mtip_handler:000000000000003e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:547    .text.eclic_mtip_handler:000000000000003e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:553    .text.eclic_mtip_handler:000000000000004c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:554    .text.eclic_mtip_handler:000000000000004c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:561    .text.eclic_mtip_handler:0000000000000058 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:562    .text.eclic_mtip_handler:0000000000000058 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:568    .text.eclic_mtip_handler:000000000000005e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:569    .text.eclic_mtip_handler:000000000000005e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:572    .text.eclic_mtip_handler:0000000000000062 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:573    .text.eclic_mtip_handler:0000000000000062 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:581    .text.eclic_mtip_handler:000000000000006a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:582    .text.eclic_mtip_handler:000000000000006a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:583    .text.eclic_mtip_handler:000000000000006a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:586    .text.eclic_mtip_handler:0000000000000072 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:588    .text.eclic_mtip_handler:0000000000000074 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:594    .text.eclic_mtip_handler:000000000000007c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:597    .text.eclic_mtip_handler:000000000000007c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:598    .text.eclic_mtip_handler:000000000000007c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:599    .text.eclic_mtip_handler:000000000000007c .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:195    .text.eclic_mtip_handler:0000000000000084 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:614    .text.eclic_mtip_handler:0000000000000088 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:615    .text.eclic_mtip_handler:0000000000000090 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:616    .text.eclic_mtip_handler:0000000000000090 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:617    .text.eclic_mtip_handler:0000000000000090 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:620    .text.eclic_mtip_handler:0000000000000090 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:624    .text.eclic_mtip_handler:0000000000000090 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:625    .text.eclic_mtip_handler:0000000000000090 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:628    .text.eclic_mtip_handler:0000000000000098 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:629    .text.eclic_mtip_handler:0000000000000098 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:633    .text.eclic_mtip_handler:000000000000009e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:641    .text.vPortSuppressTicksAndSleep:0000000000000000 vPortSuppressTicksAndSleep
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:644    .text.vPortSuppressTicksAndSleep:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:646    .text.vPortSuppressTicksAndSleep:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:647    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:648    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:649    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:650    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:651    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:652    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:654    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:655    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:656    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:657    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:658    .text.vPortSuppressTicksAndSleep:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:659    .text.vPortSuppressTicksAndSleep:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:661    .text.vPortSuppressTicksAndSleep:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:664    .text.vPortSuppressTicksAndSleep:0000000000000012 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:666    .text.vPortSuppressTicksAndSleep:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:668    .text.vPortSuppressTicksAndSleep:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:670    .text.vPortSuppressTicksAndSleep:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:672    .text.vPortSuppressTicksAndSleep:000000000000001a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:674    .text.vPortSuppressTicksAndSleep:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:680    .text.vPortSuppressTicksAndSleep:000000000000002a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:681    .text.vPortSuppressTicksAndSleep:000000000000002a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:685    .text.vPortSuppressTicksAndSleep:000000000000002e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:688    .text.vPortSuppressTicksAndSleep:000000000000002e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:690    .text.vPortSuppressTicksAndSleep:000000000000002e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:691    .text.vPortSuppressTicksAndSleep:000000000000002e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:700    .text.vPortSuppressTicksAndSleep:0000000000000034 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:701    .text.vPortSuppressTicksAndSleep:0000000000000034 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:704    .text.vPortSuppressTicksAndSleep:000000000000003c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:709    .text.vPortSuppressTicksAndSleep:000000000000003e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:711    .text.vPortSuppressTicksAndSleep:000000000000003e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:713    .text.vPortSuppressTicksAndSleep:000000000000003e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:714    .text.vPortSuppressTicksAndSleep:000000000000003e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:724    .text.vPortSuppressTicksAndSleep:0000000000000044 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:725    .text.vPortSuppressTicksAndSleep:0000000000000046 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:726    .text.vPortSuppressTicksAndSleep:0000000000000046 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:728    .text.vPortSuppressTicksAndSleep:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:729    .text.vPortSuppressTicksAndSleep:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:730    .text.vPortSuppressTicksAndSleep:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:731    .text.vPortSuppressTicksAndSleep:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:732    .text.vPortSuppressTicksAndSleep:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:733    .text.vPortSuppressTicksAndSleep:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:736    .text.vPortSuppressTicksAndSleep:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:738    .text.vPortSuppressTicksAndSleep:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:741    .text.vPortSuppressTicksAndSleep:0000000000000056 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:745    .text.vPortSuppressTicksAndSleep:0000000000000058 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:746    .text.vPortSuppressTicksAndSleep:0000000000000058 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:747    .text.vPortSuppressTicksAndSleep:0000000000000058 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:752    .text.vPortSuppressTicksAndSleep:0000000000000060 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:756    .text.vPortSuppressTicksAndSleep:0000000000000064 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:761    .text.vPortSuppressTicksAndSleep:000000000000006c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:762    .text.vPortSuppressTicksAndSleep:000000000000006c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:765    .text.vPortSuppressTicksAndSleep:0000000000000072 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:770    .text.vPortSuppressTicksAndSleep:000000000000007e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:771    .text.vPortSuppressTicksAndSleep:000000000000007e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:776    .text.vPortSuppressTicksAndSleep:000000000000008a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:779    .text.vPortSuppressTicksAndSleep:0000000000000090 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:780    .text.vPortSuppressTicksAndSleep:0000000000000090 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:784    .text.vPortSuppressTicksAndSleep:0000000000000092 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:788    .text.vPortSuppressTicksAndSleep:0000000000000094 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:795    .text.vPortSuppressTicksAndSleep:000000000000009c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:800    .text.vPortSuppressTicksAndSleep:000000000000009e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:801    .text.vPortSuppressTicksAndSleep:000000000000009e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:802    .text.vPortSuppressTicksAndSleep:000000000000009e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:809    .text.vPortSuppressTicksAndSleep:00000000000000ac .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:810    .text.vPortSuppressTicksAndSleep:00000000000000ac .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:815    .text.vPortSuppressTicksAndSleep:00000000000000b8 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:816    .text.vPortSuppressTicksAndSleep:00000000000000b8 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:823    .text.vPortSuppressTicksAndSleep:00000000000000c4 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:824    .text.vPortSuppressTicksAndSleep:00000000000000c4 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:830    .text.vPortSuppressTicksAndSleep:00000000000000ca .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:831    .text.vPortSuppressTicksAndSleep:00000000000000ca .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:834    .text.vPortSuppressTicksAndSleep:00000000000000ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:835    .text.vPortSuppressTicksAndSleep:00000000000000ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:843    .text.vPortSuppressTicksAndSleep:00000000000000d6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:846    .text.vPortSuppressTicksAndSleep:00000000000000d6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:847    .text.vPortSuppressTicksAndSleep:00000000000000d6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:848    .text.vPortSuppressTicksAndSleep:00000000000000d6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:854    .text.vPortSuppressTicksAndSleep:00000000000000e2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:859    .text.vPortSuppressTicksAndSleep:00000000000000e6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:860    .text.vPortSuppressTicksAndSleep:00000000000000e6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:861    .text.vPortSuppressTicksAndSleep:00000000000000e6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:871    .text.vPortSuppressTicksAndSleep:00000000000000f4 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:872    .text.vPortSuppressTicksAndSleep:00000000000000f4 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:873    .text.vPortSuppressTicksAndSleep:00000000000000f4 .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:566    .text.vPortSuppressTicksAndSleep:0000000000000108 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:887    .text.vPortSuppressTicksAndSleep:000000000000010c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:889    .text.vPortSuppressTicksAndSleep:000000000000010c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:892    .text.vPortSuppressTicksAndSleep:0000000000000110 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:894    .text.vPortSuppressTicksAndSleep:0000000000000112 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:897    .text.vPortSuppressTicksAndSleep:0000000000000116 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:900    .text.vPortSuppressTicksAndSleep:000000000000011e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:901    .text.vPortSuppressTicksAndSleep:000000000000011e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:904    .text.vPortSuppressTicksAndSleep:0000000000000122 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:909    .text.vPortSuppressTicksAndSleep:0000000000000126 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:911    .text.vPortSuppressTicksAndSleep:0000000000000126 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:913    .text.vPortSuppressTicksAndSleep:0000000000000126 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:914    .text.vPortSuppressTicksAndSleep:0000000000000126 .L0 
........plfiscvNMSISCoreInclude/core_feature_base.h:730    .text.vPortSuppressTicksAndSleep:000000000000012c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:932    .text.vPortSuppressTicksAndSleep:0000000000000130 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:936    .text.vPortSuppressTicksAndSleep:000000000000013a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:937    .text.vPortSuppressTicksAndSleep:000000000000013a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:940    .text.vPortSuppressTicksAndSleep:000000000000013e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:943    .text.vPortSuppressTicksAndSleep:0000000000000142 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:946    .text.vPortSuppressTicksAndSleep:0000000000000142 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:948    .text.vPortSuppressTicksAndSleep:0000000000000142 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:949    .text.vPortSuppressTicksAndSleep:0000000000000142 .L0 
C:/Users/stapi/OneDrive/Desktop/GD32VW553/GD32VW55X_Wifi_BLE_SDK/GD32VW55x_RELEASE_V1.0.2/MSDK/rtos/FreeRTOS/Source/portable/riscv32\port.c:591    .text.vPortSuppressTicksAndSleep:0000000000000148 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:966    .text.vPortSuppressTicksAndSleep:000000000000014c .L0 
........plfiscvNMSISCoreInclude/core_feature_base.h:881    .text.vPortSuppressTicksAndSleep:000000000000014c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:977    .text.vPortSuppressTicksAndSleep:0000000000000150 .L0 
........plfiscvNMSISCoreInclude/core_feature_base.h:715    .text.vPortSuppressTicksAndSleep:0000000000000150 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:988    .text.vPortSuppressTicksAndSleep:0000000000000152 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:990    .text.vPortSuppressTicksAndSleep:0000000000000152 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:992    .text.vPortSuppressTicksAndSleep:0000000000000152 .L0 
........plfiscvNMSISCoreInclude/core_feature_base.h:609    .text.vPortSuppressTicksAndSleep:0000000000000152 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1006   .text.vPortSuppressTicksAndSleep:0000000000000156 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1007   .text.vPortSuppressTicksAndSleep:0000000000000156 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1008   .text.vPortSuppressTicksAndSleep:0000000000000156 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1018   .text.vPortSuppressTicksAndSleep:0000000000000166 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1019   .text.vPortSuppressTicksAndSleep:0000000000000166 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1020   .text.vPortSuppressTicksAndSleep:0000000000000166 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1026   .text.vPortSuppressTicksAndSleep:000000000000016e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1033   .text.vPortSuppressTicksAndSleep:000000000000017e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1038   .text.vPortSuppressTicksAndSleep:000000000000018a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1039   .text.vPortSuppressTicksAndSleep:000000000000018a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1044   .text.vPortSuppressTicksAndSleep:000000000000018e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1045   .text.vPortSuppressTicksAndSleep:000000000000018e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1046   .text.vPortSuppressTicksAndSleep:000000000000018e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1047   .text.vPortSuppressTicksAndSleep:000000000000018e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1053   .text.vPortSuppressTicksAndSleep:0000000000000198 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1054   .text.vPortSuppressTicksAndSleep:0000000000000198 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1055   .text.vPortSuppressTicksAndSleep:0000000000000198 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1064   .text.vPortSuppressTicksAndSleep:00000000000001ac .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1072   .text.vPortSuppressTicksAndSleep:00000000000001b6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1073   .text.vPortSuppressTicksAndSleep:00000000000001b6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1076   .text.vPortSuppressTicksAndSleep:00000000000001bc .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1077   .text.vPortSuppressTicksAndSleep:00000000000001bc .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1086   .text.vPortSuppressTicksAndSleep:00000000000001c0 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1087   .text.vPortSuppressTicksAndSleep:00000000000001c0 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1088   .text.vPortSuppressTicksAndSleep:00000000000001c0 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1093   .text.vPortSuppressTicksAndSleep:00000000000001c8 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1100   .text.vPortSuppressTicksAndSleep:00000000000001ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1101   .text.vPortSuppressTicksAndSleep:00000000000001ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1102   .text.vPortSuppressTicksAndSleep:00000000000001ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1108   .text.vPortSuppressTicksAndSleep:00000000000001d6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1111   .text.vPortSuppressTicksAndSleep:00000000000001da .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1112   .text.vPortSuppressTicksAndSleep:00000000000001da .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1117   .text.vPortSuppressTicksAndSleep:00000000000001e2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1122   .text.vPortSuppressTicksAndSleep:00000000000001ee .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1123   .text.vPortSuppressTicksAndSleep:00000000000001ee .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1129   .text.vPortSuppressTicksAndSleep:00000000000001f6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1133   .text.vPortSuppressTicksAndSleep:00000000000001fe .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1136   .text.vPortSuppressTicksAndSleep:0000000000000200 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1137   .text.vPortSuppressTicksAndSleep:0000000000000200 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1145   .text.vPortSuppressTicksAndSleep:000000000000020e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1146   .text.vPortSuppressTicksAndSleep:000000000000020e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1147   .text.vPortSuppressTicksAndSleep:000000000000020e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1152   .text.vPortSuppressTicksAndSleep:0000000000000216 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1153   .text.vPortSuppressTicksAndSleep:0000000000000216 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1161   .text.vPortSuppressTicksAndSleep:0000000000000228 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1162   .text.vPortSuppressTicksAndSleep:0000000000000228 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1167   .text.vPortSuppressTicksAndSleep:0000000000000234 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1168   .text.vPortSuppressTicksAndSleep:0000000000000234 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1175   .text.vPortSuppressTicksAndSleep:0000000000000240 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1176   .text.vPortSuppressTicksAndSleep:0000000000000240 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1184   .text.vPortSuppressTicksAndSleep:0000000000000246 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1185   .text.vPortSuppressTicksAndSleep:0000000000000246 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1189   .text.vPortSuppressTicksAndSleep:000000000000024c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1191   .text.vPortSuppressTicksAndSleep:000000000000024e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1198   .text.vPortSuppressTicksAndSleep:0000000000000252 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1199   .text.vPortSuppressTicksAndSleep:0000000000000252 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1202   .text.vPortSuppressTicksAndSleep:0000000000000256 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1203   .text.vPortSuppressTicksAndSleep:0000000000000256 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1209   .text.vPortSuppressTicksAndSleep:0000000000000260 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1210   .text.vPortSuppressTicksAndSleep:0000000000000260 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1213   .text.vPortSuppressTicksAndSleep:0000000000000266 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1214   .text.vPortSuppressTicksAndSleep:0000000000000266 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1218   .text.vPortSuppressTicksAndSleep:000000000000026a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1226   .text.vPortSetupTimerInterrupt:0000000000000000 vPortSetupTimerInterrupt
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1229   .text.vPortSetupTimerInterrupt:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1230   .text.vPortSetupTimerInterrupt:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1231   .text.vPortSetupTimerInterrupt:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1232   .text.vPortSetupTimerInterrupt:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1233   .text.vPortSetupTimerInterrupt:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1234   .text.vPortSetupTimerInterrupt:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1235   .text.vPortSetupTimerInterrupt:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1236   .text.vPortSetupTimerInterrupt:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1238   .text.vPortSetupTimerInterrupt:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1239   .text.vPortSetupTimerInterrupt:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1245   .text.vPortSetupTimerInterrupt:000000000000001a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1247   .text.vPortSetupTimerInterrupt:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1249   .text.vPortSetupTimerInterrupt:0000000000000020 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1252   .text.vPortSetupTimerInterrupt:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1254   .text.vPortSetupTimerInterrupt:0000000000000028 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1255   .text.vPortSetupTimerInterrupt:0000000000000028 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1257   .text.vPortSetupTimerInterrupt:000000000000002c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1259   .text.vPortSetupTimerInterrupt:000000000000002e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1261   .text.vPortSetupTimerInterrupt:0000000000000030 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1263   .text.vPortSetupTimerInterrupt:0000000000000034 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1266   .text.vPortSetupTimerInterrupt:000000000000003c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1272   .text.vPortSetupTimerInterrupt:000000000000004e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1275   .text.vPortSetupTimerInterrupt:0000000000000056 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1276   .text.vPortSetupTimerInterrupt:0000000000000056 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1277   .text.vPortSetupTimerInterrupt:0000000000000056 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1278   .text.vPortSetupTimerInterrupt:0000000000000056 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1283   .text.vPortSetupTimerInterrupt:0000000000000056 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1284   .text.vPortSetupTimerInterrupt:0000000000000056 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1285   .text.vPortSetupTimerInterrupt:0000000000000056 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1298   .text.vPortSetupTimerInterrupt:0000000000000062 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1299   .text.vPortSetupTimerInterrupt:0000000000000062 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1300   .text.vPortSetupTimerInterrupt:0000000000000062 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1303   .text.vPortSetupTimerInterrupt:0000000000000066 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1304   .text.vPortSetupTimerInterrupt:0000000000000066 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1306   .text.vPortSetupTimerInterrupt:000000000000006a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1309   .text.vPortSetupTimerInterrupt:000000000000006e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1310   .text.vPortSetupTimerInterrupt:000000000000006e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1320   .text.vPortSetupTimerInterrupt:0000000000000072 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1321   .text.vPortSetupTimerInterrupt:0000000000000072 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1322   .text.vPortSetupTimerInterrupt:0000000000000072 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1327   .text.vPortSetupTimerInterrupt:0000000000000082 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1328   .text.vPortSetupTimerInterrupt:0000000000000082 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1339   .text.vPortSetupTimerInterrupt:000000000000008e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1342   .text.vPortSetupTimerInterrupt:000000000000008e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1343   .text.vPortSetupTimerInterrupt:000000000000008e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1344   .text.vPortSetupTimerInterrupt:000000000000008e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1347   .text.vPortSetupTimerInterrupt:0000000000000096 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1353   .text.vPortSetupTimerInterrupt:000000000000009a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1354   .text.vPortSetupTimerInterrupt:000000000000009a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1355   .text.vPortSetupTimerInterrupt:000000000000009a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1358   .text.vPortSetupTimerInterrupt:000000000000009c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1359   .text.vPortSetupTimerInterrupt:000000000000009c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1360   .text.vPortSetupTimerInterrupt:000000000000009c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1364   .text.vPortSetupTimerInterrupt:00000000000000a2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1365   .text.vPortSetupTimerInterrupt:00000000000000a2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1368   .text.vPortSetupTimerInterrupt:00000000000000a2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1369   .text.vPortSetupTimerInterrupt:00000000000000a2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1370   .text.vPortSetupTimerInterrupt:00000000000000a2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1375   .text.vPortSetupTimerInterrupt:00000000000000a6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1376   .text.vPortSetupTimerInterrupt:00000000000000a6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1377   .text.vPortSetupTimerInterrupt:00000000000000a6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1380   .text.vPortSetupTimerInterrupt:00000000000000aa .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1383   .text.vPortSetupTimerInterrupt:00000000000000b2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1388   .text.vPortSetupTimerInterrupt:00000000000000b6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1389   .text.vPortSetupTimerInterrupt:00000000000000b6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1390   .text.vPortSetupTimerInterrupt:00000000000000b6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1402   .text.vPortSetupTimerInterrupt:00000000000000ba .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1403   .text.vPortSetupTimerInterrupt:00000000000000ba .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1404   .text.vPortSetupTimerInterrupt:00000000000000ba .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1414   .text.vPortSetupTimerInterrupt:00000000000000ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1417   .text.vPortSetupTimerInterrupt:00000000000000ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1418   .text.vPortSetupTimerInterrupt:00000000000000ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1419   .text.vPortSetupTimerInterrupt:00000000000000ce .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1428   .text.vPortSetupTimerInterrupt:00000000000000da .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1431   .text.vPortSetupTimerInterrupt:00000000000000da .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1432   .text.vPortSetupTimerInterrupt:00000000000000da .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1433   .text.vPortSetupTimerInterrupt:00000000000000da .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1436   .text.vPortSetupTimerInterrupt:00000000000000e2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1442   .text.vPortSetupTimerInterrupt:00000000000000e6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1443   .text.vPortSetupTimerInterrupt:00000000000000e6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1444   .text.vPortSetupTimerInterrupt:00000000000000e6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1447   .text.vPortSetupTimerInterrupt:00000000000000e8 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1448   .text.vPortSetupTimerInterrupt:00000000000000e8 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1449   .text.vPortSetupTimerInterrupt:00000000000000e8 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1453   .text.vPortSetupTimerInterrupt:00000000000000ee .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1454   .text.vPortSetupTimerInterrupt:00000000000000ee .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1457   .text.vPortSetupTimerInterrupt:00000000000000ee .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1458   .text.vPortSetupTimerInterrupt:00000000000000ee .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1459   .text.vPortSetupTimerInterrupt:00000000000000ee .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1464   .text.vPortSetupTimerInterrupt:00000000000000f2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1465   .text.vPortSetupTimerInterrupt:00000000000000f2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1466   .text.vPortSetupTimerInterrupt:00000000000000f2 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1469   .text.vPortSetupTimerInterrupt:00000000000000f6 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1472   .text.vPortSetupTimerInterrupt:00000000000000fe .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1477   .text.vPortSetupTimerInterrupt:0000000000000102 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1478   .text.vPortSetupTimerInterrupt:0000000000000102 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1479   .text.vPortSetupTimerInterrupt:0000000000000102 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1489   .text.vPortSetupTimerInterrupt:0000000000000106 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1490   .text.vPortSetupTimerInterrupt:0000000000000106 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1491   .text.vPortSetupTimerInterrupt:0000000000000106 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1496   .text.vPortSetupTimerInterrupt:0000000000000116 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1497   .text.vPortSetupTimerInterrupt:0000000000000116 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1506   .text.vPortSetupTimerInterrupt:0000000000000122 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1507   .text.vPortSetupTimerInterrupt:0000000000000122 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1508   .text.vPortSetupTimerInterrupt:0000000000000122 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1518   .text.vPortSetupTimerInterrupt:0000000000000132 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1519   .text.vPortSetupTimerInterrupt:0000000000000132 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1520   .text.vPortSetupTimerInterrupt:0000000000000132 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1524   .text.vPortSetupTimerInterrupt:000000000000013e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1525   .text.vPortSetupTimerInterrupt:000000000000013e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1535   .text.vPortSetupTimerInterrupt:000000000000014e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1538   .text.vPortSetupTimerInterrupt:000000000000014e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1539   .text.vPortSetupTimerInterrupt:000000000000014e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1540   .text.vPortSetupTimerInterrupt:000000000000014e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1543   .text.vPortSetupTimerInterrupt:0000000000000156 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1549   .text.vPortSetupTimerInterrupt:000000000000015a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1550   .text.vPortSetupTimerInterrupt:000000000000015a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1551   .text.vPortSetupTimerInterrupt:000000000000015a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1554   .text.vPortSetupTimerInterrupt:000000000000015c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1555   .text.vPortSetupTimerInterrupt:000000000000015c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1556   .text.vPortSetupTimerInterrupt:000000000000015c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1560   .text.vPortSetupTimerInterrupt:0000000000000162 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1561   .text.vPortSetupTimerInterrupt:0000000000000162 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1564   .text.vPortSetupTimerInterrupt:0000000000000162 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1565   .text.vPortSetupTimerInterrupt:0000000000000162 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1566   .text.vPortSetupTimerInterrupt:0000000000000162 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1571   .text.vPortSetupTimerInterrupt:0000000000000166 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1572   .text.vPortSetupTimerInterrupt:0000000000000166 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1573   .text.vPortSetupTimerInterrupt:0000000000000166 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1576   .text.vPortSetupTimerInterrupt:000000000000016a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1579   .text.vPortSetupTimerInterrupt:0000000000000172 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1584   .text.vPortSetupTimerInterrupt:0000000000000176 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1585   .text.vPortSetupTimerInterrupt:0000000000000176 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1586   .text.vPortSetupTimerInterrupt:0000000000000176 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1596   .text.vPortSetupTimerInterrupt:000000000000017a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1597   .text.vPortSetupTimerInterrupt:000000000000017a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1598   .text.vPortSetupTimerInterrupt:000000000000017a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1607   .text.vPortSetupTimerInterrupt:000000000000018e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1608   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1609   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1610   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1611   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1612   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1613   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1614   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1617   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1622   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1623   .text.vPortSetupTimerInterrupt:0000000000000196 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1625   .text.vPortSetupTimerInterrupt:000000000000019a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1626   .text.vPortSetupTimerInterrupt:000000000000019a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1631   .text.vPortSetupTimerInterrupt:000000000000019e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1638   .text.xPortStartScheduler:0000000000000000 xPortStartScheduler
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1641   .text.xPortStartScheduler:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1642   .text.xPortStartScheduler:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1643   .text.xPortStartScheduler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1644   .text.xPortStartScheduler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1646   .text.xPortStartScheduler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1650   .text.xPortStartScheduler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1653   .text.xPortStartScheduler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1654   .text.xPortStartScheduler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1655   .text.xPortStartScheduler:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1661   .text.xPortStartScheduler:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1662   .text.xPortStartScheduler:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1663   .text.xPortStartScheduler:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1664   .text.xPortStartScheduler:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1665   .text.xPortStartScheduler:0000000000000010 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1667   .text.xPortStartScheduler:0000000000000012 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1671   .text.xPortStartScheduler:0000000000000014 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1679   .text.xPortStartScheduler:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1680   .text.xPortStartScheduler:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1681   .text.xPortStartScheduler:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1682   .text.xPortStartScheduler:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1683   .text.xPortStartScheduler:000000000000001c .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1687   .text.xPortStartScheduler:0000000000000020 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1688   .text.xPortStartScheduler:0000000000000020 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1690   .text.xPortStartScheduler:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1692   .text.xPortStartScheduler:0000000000000026 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1696   .text.xPortStartScheduler:0000000000000032 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1698   .text.xPortStartScheduler:0000000000000036 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1700   .text.xPortStartScheduler:0000000000000038 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1704   .text.xPortStartScheduler:000000000000003a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1707   .text.xPortStartScheduler:0000000000000042 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1708   .text.xPortStartScheduler:0000000000000042 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1711   .text.xPortStartScheduler:0000000000000042 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1713   .text.xPortStartScheduler:0000000000000042 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1714   .text.xPortStartScheduler:0000000000000042 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1723   .text.xPortStartScheduler:0000000000000048 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1726   .text.xPortStartScheduler:0000000000000050 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1727   .text.xPortStartScheduler:0000000000000050 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1730   .text.xPortStartScheduler:0000000000000058 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1733   .text.xPortStartScheduler:0000000000000060 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1736   .text.xPortStartScheduler:0000000000000068 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1739   .text.xPortStartScheduler:0000000000000070 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1740   .text.xPortStartScheduler:0000000000000070 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1742   .text.xPortStartScheduler:000000000000007a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1743   .text.xPortStartScheduler:000000000000007a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1744   .text.xPortStartScheduler:000000000000007a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1751   .text.vApplicationIdleHook:0000000000000000 vApplicationIdleHook
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1754   .text.vApplicationIdleHook:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1755   .text.vApplicationIdleHook:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1756   .text.vApplicationIdleHook:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1757   .text.vApplicationIdleHook:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1759   .text.vApplicationIdleHook:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1770   .text.vApplicationStackOverflowHook:0000000000000000 vApplicationStackOverflowHook
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1773   .text.vApplicationStackOverflowHook:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1775   .text.vApplicationStackOverflowHook:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1776   .text.vApplicationStackOverflowHook:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1777   .text.vApplicationStackOverflowHook:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1779   .text.vApplicationStackOverflowHook:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1786   .text.vApplicationStackOverflowHook:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1787   .text.vApplicationStackOverflowHook:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1788   .text.vApplicationStackOverflowHook:0000000000000018 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1789   .text.vApplicationStackOverflowHook:000000000000001a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1813   .sbss.xMaximumPossibleSuppressedTicks:0000000000000000 xMaximumPossibleSuppressedTicks
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1826   .sdata.uxMaxSysCallMTH:0000000000000000 uxMaxSysCallMTH
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1796   .sbss.ulStoppedTimerCompensation:0000000000000000 .LANCHOR4
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1799   .sbss.ulStoppedTimerCompensation:0000000000000000 ulStoppedTimerCompensation
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1803   .sbss.ulTimerCountsForOneTick:0000000000000000 .LANCHOR3
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1806   .sbss.ulTimerCountsForOneTick:0000000000000000 ulTimerCountsForOneTick
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1810   .sbss.xMaximumPossibleSuppressedTicks:0000000000000000 .LANCHOR2
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1817   .sdata.uxCriticalNesting:0000000000000000 .LANCHOR1
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1820   .sdata.uxCriticalNesting:0000000000000000 uxCriticalNesting
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1823   .sdata.uxMaxSysCallMTH:0000000000000000 .LANCHOR0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:43     .text.vPortRaiseBASEPRI:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:115    .text.prvTaskExitError:000000000000002e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:170    .text.ulPortRaiseBASEPRI:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:200    .text.vPortSetBASEPRI:000000000000000e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:231    .text.portYIELD:0000000000000016 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:280    .text.pxPortInitialiseStack:0000000000000024 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:294    .text.vPortEndScheduler:0000000000000002 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:324    .text.vPortEnterCritical:0000000000000026 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:372    .text.vPortExitCritical:000000000000001e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:388    .text.vPortInCritical:000000000000000a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:448    .text.vPortAssert:0000000000000020 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:505    .text.xPortTaskSwitch:000000000000003a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:637    .text.eclic_mtip_handler:000000000000009e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1222   .text.vPortSuppressTicksAndSleep:000000000000026a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1634   .text.vPortSetupTimerInterrupt:000000000000019e .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1747   .text.xPortStartScheduler:000000000000007a .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1762   .text.vApplicationIdleHook:0000000000000008 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1794   .text.vApplicationStackOverflowHook:000000000000001a .L0 
                     .debug_frame:0000000000000000 .L0 
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:86     .text.prvTaskExitError:0000000000000024 .L4
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:70     .text.prvTaskExitError:0000000000000016 .L3
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:364    .text.vPortExitCritical:000000000000001c .L13
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:439    .text.vPortAssert:000000000000001e .L16
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:412    .text.vPortAssert:0000000000000014 .L18
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:566    .text.eclic_mtip_handler:000000000000005e .L30
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:551    .text.eclic_mtip_handler:000000000000004c .L25
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:570    .text.eclic_mtip_handler:0000000000000062 .L34
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:577    .text.eclic_mtip_handler:000000000000006a .L28
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:619    .text.eclic_mtip_handler:0000000000000090 .L27
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:590    .text.eclic_mtip_handler:000000000000007c .L29
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:678    .text.vPortSuppressTicksAndSleep:000000000000002a .L62
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:683    .text.vPortSuppressTicksAndSleep:000000000000002e .L37
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:735    .text.vPortSuppressTicksAndSleep:000000000000004e .L39
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:705    .text.vPortSuppressTicksAndSleep:000000000000003e .L78
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:782    .text.vPortSuppressTicksAndSleep:0000000000000092 .L42
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:828    .text.vPortSuppressTicksAndSleep:00000000000000ca .L64
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:813    .text.vPortSuppressTicksAndSleep:00000000000000b8 .L44
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:832    .text.vPortSuppressTicksAndSleep:00000000000000ce .L74
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:839    .text.vPortSuppressTicksAndSleep:00000000000000d6 .L47
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1068   .text.vPortSuppressTicksAndSleep:00000000000001b6 .L46
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1080   .text.vPortSuppressTicksAndSleep:00000000000001c0 .L48
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:999    .text.vPortSuppressTicksAndSleep:0000000000000156 .L51
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1096   .text.vPortSuppressTicksAndSleep:00000000000001ce .L53
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1036   .text.vPortSuppressTicksAndSleep:000000000000018a .L65
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:928    .text.vPortSuppressTicksAndSleep:0000000000000130 .L50
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1120   .text.vPortSuppressTicksAndSleep:00000000000001ee .L66
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1180   .text.vPortSuppressTicksAndSleep:0000000000000246 .L56
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1194   .text.vPortSuppressTicksAndSleep:0000000000000252 .L67
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1165   .text.vPortSuppressTicksAndSleep:0000000000000234 .L59
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1200   .text.vPortSuppressTicksAndSleep:0000000000000256 .L75
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1043   .text.vPortSuppressTicksAndSleep:000000000000018e .L55
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1127   .text.vPortSuppressTicksAndSleep:00000000000001f6 .L77
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1207   .text.vPortSuppressTicksAndSleep:0000000000000260 .L61
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1616   .text.vPortSetupTimerInterrupt:0000000000000196 .L80
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1392   .text.vPortSetupTimerInterrupt:00000000000000ba .L82
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1481   .text.vPortSetupTimerInterrupt:0000000000000106 .L83
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1588   .text.vPortSetupTimerInterrupt:000000000000017a .L84
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1311   .text.vPortSetupTimerInterrupt:0000000000000072 .L81
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1764   .rodata.vApplicationStackOverflowHook.str1.4:0000000000000000 .LC0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1784   .text.vApplicationStackOverflowHook:0000000000000018 .L100
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:4235   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6746   .debug_str:00000000000003de .LASF216
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7038   .debug_str:0000000000000db9 .LASF217
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7022   .debug_str:0000000000000ce0 .LASF218
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6484   .debug_ranges:0000000000000000 .Ldebug_ranges0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6608   .debug_line:0000000000000000 .Ldebug_line0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6646   .debug_str:00000000000000f8 .LASF0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6674   .debug_str:00000000000001ca .LASF1
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6628   .debug_str:0000000000000076 .LASF5
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6976   .debug_str:0000000000000ba3 .LASF2
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6898   .debug_str:000000000000097a .LASF3
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6768   .debug_str:0000000000000593 .LASF4
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6964   .debug_str:0000000000000b5d .LASF6
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6694   .debug_str:0000000000000280 .LASF7
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6718   .debug_str:0000000000000346 .LASF8
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6752   .debug_str:00000000000004fa .LASF9
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6672   .debug_str:00000000000001bc .LASF10
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6816   .debug_str:000000000000072b .LASF11
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6892   .debug_str:0000000000000953 .LASF12
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6944   .debug_str:0000000000000abe .LASF13
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7008   .debug_str:0000000000000c92 .LASF14
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6884   .debug_str:000000000000091c .LASF15
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6932   .debug_str:0000000000000a79 .LASF16
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6624   .debug_str:0000000000000060 .LASF17
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6742   .debug_str:00000000000003c7 .LASF130
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6908   .debug_str:00000000000009af .LASF18
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6770   .debug_str:00000000000005a6 .LASF19
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6714   .debug_str:0000000000000326 .LASF20
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7046   .debug_str:0000000000000e73 .LASF21
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6838   .debug_str:00000000000007cd .LASF22
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6700   .debug_str:00000000000002aa .LASF23
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6696   .debug_str:0000000000000289 .LASF219
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6730   .debug_str:0000000000000383 .LASF24
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6766   .debug_str:0000000000000584 .LASF25
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6966   .debug_str:0000000000000b67 .LASF26
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6822   .debug_str:0000000000000766 .LASF185
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7052   .debug_str:0000000000000ea0 .LASF27
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6984   .debug_str:0000000000000bd9 .LASF28
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6778   .debug_str:00000000000005de .LASF29
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7026   .debug_str:0000000000000d69 .LASF30
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7044   .debug_str:0000000000000e61 .LASF31
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6658   .debug_str:0000000000000147 .LASF32
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7016   .debug_str:0000000000000cc6 .LASF33
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7020   .debug_str:0000000000000cd7 .LASF34
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6680   .debug_str:00000000000001eb .LASF35
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7056   .debug_str:0000000000000ebc .LASF36
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6912   .debug_str:00000000000009c7 .LASF37
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6844   .debug_str:00000000000007fc .LASF38
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6900   .debug_str:0000000000000984 .LASF39
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6738   .debug_str:00000000000003ad .LASF40
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6798   .debug_str:0000000000000684 .LASF41
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6852   .debug_str:0000000000000846 .LASF42
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7048   .debug_str:0000000000000e7f .LASF43
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6982   .debug_str:0000000000000bc7 .LASF44
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6706   .debug_str:00000000000002de .LASF45
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6888   .debug_str:0000000000000930 .LASF46
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6952   .debug_str:0000000000000aff .LASF47
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7042   .debug_str:0000000000000e58 .LASF48
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6698   .debug_str:000000000000029d .LASF49
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6732   .debug_str:000000000000038f .LASF50
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6800   .debug_str:0000000000000696 .LASF51
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7032   .debug_str:0000000000000d8f .LASF52
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6666   .debug_str:0000000000000196 .LASF53
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6836   .debug_str:00000000000007c1 .LASF54
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6886   .debug_str:0000000000000924 .LASF55
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7010   .debug_str:0000000000000c9a .LASF56
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6970   .debug_str:0000000000000b85 .LASF57
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6626   .debug_str:0000000000000069 .LASF58
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7036   .debug_str:0000000000000dac .LASF59
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6866   .debug_str:00000000000008af .LASF60
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6906   .debug_str:00000000000009a3 .LASF61
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6862   .debug_str:0000000000000897 .LASF62
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6616   .debug_str:0000000000000021 .LASF63
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7000   .debug_str:0000000000000c52 .LASF64
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6652   .debug_str:0000000000000126 .LASF65
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6684   .debug_str:0000000000000205 .LASF66
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6724   .debug_str:000000000000036a .LASF67
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6782   .debug_str:0000000000000604 .LASF68
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6678   .debug_str:00000000000001dc .LASF69
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6826   .debug_str:000000000000077d .LASF70
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6946   .debug_str:0000000000000ac3 .LASF71
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6650   .debug_str:0000000000000117 .LASF72
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7058   .debug_str:0000000000000ec7 .LASF73
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6846   .debug_str:0000000000000807 .LASF74
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6832   .debug_str:00000000000007a1 .LASF75
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6670   .debug_str:00000000000001b4 .LASF76
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6854   .debug_str:0000000000000858 .LASF77
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6936   .debug_str:0000000000000a91 .LASF78
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6894   .debug_str:0000000000000960 .LASF79
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6756   .debug_str:0000000000000520 .LASF80
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6962   .debug_str:0000000000000b4a .LASF81
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7014   .debug_str:0000000000000cb3 .LASF82
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6996   .debug_str:0000000000000c29 .LASF83
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6808   .debug_str:00000000000006dc .LASF84
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6860   .debug_str:0000000000000884 .LASF85
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6834   .debug_str:00000000000007ae .LASF86
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6662   .debug_str:0000000000000171 .LASF87
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6802   .debug_str:00000000000006a5 .LASF88
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6972   .debug_str:0000000000000b92 .LASF89
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6774   .debug_str:00000000000005c0 .LASF90
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6772   .debug_str:00000000000005b2 .LASF91
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6840   .debug_str:00000000000007d8 .LASF92
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6928   .debug_str:0000000000000a49 .LASF93
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6704   .debug_str:00000000000002c7 .LASF94
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6818   .debug_str:0000000000000736 .LASF95
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6868   .debug_str:00000000000008b8 .LASF96
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6790   .debug_str:0000000000000646 .LASF97
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6630   .debug_str:0000000000000080 .LASF98
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6750   .debug_str:00000000000004e7 .LASF99
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6918   .debug_str:00000000000009f2 .LASF100
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6934   .debug_str:0000000000000a82 .LASF101
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6716   .debug_str:0000000000000331 .LASF102
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6916   .debug_str:00000000000009e7 .LASF103
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6634   .debug_str:0000000000000099 .LASF104
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7024   .debug_str:0000000000000d5e .LASF105
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6638   .debug_str:00000000000000bb .LASF106
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6960   .debug_str:0000000000000b40 .LASF107
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6910   .debug_str:00000000000009be .LASF108
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6728   .debug_str:000000000000037d .LASF109
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6722   .debug_str:0000000000000364 .LASF110
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6736   .debug_str:00000000000003a5 .LASF111
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6978   .debug_str:0000000000000bb1 .LASF112
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6804   .debug_str:00000000000006bb .LASF113
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6872   .debug_str:00000000000008dd .LASF114
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6656   .debug_str:0000000000000142 .LASF115
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6874   .debug_str:00000000000008e7 .LASF116
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6876   .debug_str:00000000000008f1 .LASF117
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6990   .debug_str:0000000000000c0c .LASF118
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6794   .debug_str:000000000000066c .LASF119
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7034   .debug_str:0000000000000d9f .LASF120
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6954   .debug_str:0000000000000b11 .LASF121
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6642   .debug_str:00000000000000dd .LASF122
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6904   .debug_str:0000000000000996 .LASF123
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6968   .debug_str:0000000000000b7e .LASF124
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6712   .debug_str:000000000000031c .LASF125
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7030   .debug_str:0000000000000d87 .LASF126
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6994   .debug_str:0000000000000c20 .LASF127
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6938   .debug_str:0000000000000a9f .LASF128
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6796   .debug_str:0000000000000676 .LASF129
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6814   .debug_str:0000000000000719 .LASF132
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6702   .debug_str:00000000000002b7 .LASF131
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6710   .debug_str:0000000000000304 .LASF133
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6848   .debug_str:0000000000000814 .LASF134
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6780   .debug_str:00000000000005e9 .LASF135
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6762   .debug_str:0000000000000558 .LASF138
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1771   .text.vApplicationStackOverflowHook:0000000000000000 .LFB383
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1790   .text.vApplicationStackOverflowHook:000000000000001a .LFE383
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6744   .debug_str:00000000000003d7 .LASF136
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5468   .debug_loc:0000000000000000 .LLST75
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7006   .debug_str:0000000000000c87 .LASF137
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5482   .debug_loc:0000000000000021 .LLST76
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1783   .text.vApplicationStackOverflowHook:0000000000000018 .LVL123
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6914   .debug_str:00000000000009d2 .LASF139
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1752   .text.vApplicationIdleHook:0000000000000000 .LFB382
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1760   .text.vApplicationIdleHook:0000000000000008 .LFE382
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6748   .debug_str:00000000000004d7 .LASF205
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1758   .text.vApplicationIdleHook:0000000000000008 .LVL120
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6686   .debug_str:0000000000000210 .LASF140
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1227   .text.vPortSetupTimerInterrupt:0000000000000000 .LFB381
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1632   .text.vPortSetupTimerInterrupt:000000000000019e .LFE381
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6830   .debug_str:000000000000079b .LASF153
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1280   .text.vPortSetupTimerInterrupt:0000000000000056 .LBB288
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1281   .text.vPortSetupTimerInterrupt:0000000000000056 .LBB289
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1292   .text.vPortSetupTimerInterrupt:0000000000000062 .LBE289
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5496   .debug_loc:0000000000000042 .LLST31
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1296   .text.vPortSetupTimerInterrupt:0000000000000062 .LBB291
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1318   .text.vPortSetupTimerInterrupt:0000000000000072 .LBB294
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1333   .text.vPortSetupTimerInterrupt:000000000000008e .LBE294
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5505   .debug_loc:000000000000005e .LLST32
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5513   .debug_loc:0000000000000072 .LLST33
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1337   .text.vPortSetupTimerInterrupt:000000000000008e .LBB296
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1396   .text.vPortSetupTimerInterrupt:00000000000000ba .LBE296
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5521   .debug_loc:0000000000000086 .LLST34
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5529   .debug_loc:000000000000009a .LLST35
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5537   .debug_loc:00000000000000ae .LLST36
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5565   .debug_loc:00000000000000de .LLST37
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5573   .debug_loc:00000000000000f2 .LLST38
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5586   .debug_loc:000000000000010b .LLST39
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5594   .debug_loc:000000000000011f .LLST40
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1340   .text.vPortSetupTimerInterrupt:000000000000008e .LBB298
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1351   .text.vPortSetupTimerInterrupt:000000000000009a .LBE298
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1366   .text.vPortSetupTimerInterrupt:00000000000000a2 .LBB300
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1373   .text.vPortSetupTimerInterrupt:00000000000000a6 .LBE300
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1386   .text.vPortSetupTimerInterrupt:00000000000000b6 .LBB302
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1394   .text.vPortSetupTimerInterrupt:00000000000000ba .LBE302
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5613   .debug_loc:0000000000000145 .LLST41
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5620   .debug_loc:0000000000000158 .LLST42
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1400   .text.vPortSetupTimerInterrupt:00000000000000ba .LBB304
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1411   .text.vPortSetupTimerInterrupt:00000000000000ce .LBE304
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5628   .debug_loc:000000000000016c .LLST43
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1415   .text.vPortSetupTimerInterrupt:00000000000000ce .LBB311
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1424   .text.vPortSetupTimerInterrupt:00000000000000da .LBE311
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5636   .debug_loc:0000000000000180 .LLST44
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1426   .text.vPortSetupTimerInterrupt:00000000000000da .LBB313
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1485   .text.vPortSetupTimerInterrupt:0000000000000106 .LBE313
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5644   .debug_loc:0000000000000194 .LLST45
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5652   .debug_loc:00000000000001a8 .LLST46
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5660   .debug_loc:00000000000001bc .LLST47
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5688   .debug_loc:00000000000001ec .LLST48
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5696   .debug_loc:0000000000000200 .LLST49
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5709   .debug_loc:0000000000000219 .LLST50
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5717   .debug_loc:000000000000022d .LLST51
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1429   .text.vPortSetupTimerInterrupt:00000000000000da .LBB315
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1440   .text.vPortSetupTimerInterrupt:00000000000000e6 .LBE315
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1455   .text.vPortSetupTimerInterrupt:00000000000000ee .LBB317
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1462   .text.vPortSetupTimerInterrupt:00000000000000f2 .LBE317
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1475   .text.vPortSetupTimerInterrupt:0000000000000102 .LBB319
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1483   .text.vPortSetupTimerInterrupt:0000000000000106 .LBE319
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5736   .debug_loc:0000000000000253 .LLST52
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5743   .debug_loc:0000000000000266 .LLST53
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1487   .text.vPortSetupTimerInterrupt:0000000000000106 .LBB321
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1502   .text.vPortSetupTimerInterrupt:0000000000000122 .LBE321
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5751   .debug_loc:000000000000027a .LLST54
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5759   .debug_loc:000000000000028e .LLST55
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1504   .text.vPortSetupTimerInterrupt:0000000000000122 .LBB323
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1514   .text.vPortSetupTimerInterrupt:0000000000000132 .LBE323
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5767   .debug_loc:00000000000002a2 .LLST56
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1516   .text.vPortSetupTimerInterrupt:0000000000000132 .LBB325
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1531   .text.vPortSetupTimerInterrupt:000000000000014e .LBE325
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5775   .debug_loc:00000000000002b6 .LLST57
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5783   .debug_loc:00000000000002ca .LLST58
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1533   .text.vPortSetupTimerInterrupt:000000000000014e .LBB327
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1592   .text.vPortSetupTimerInterrupt:000000000000017a .LBE327
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5791   .debug_loc:00000000000002de .LLST59
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5799   .debug_loc:00000000000002f2 .LLST60
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5807   .debug_loc:0000000000000306 .LLST61
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5835   .debug_loc:0000000000000336 .LLST62
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5843   .debug_loc:000000000000034a .LLST63
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5856   .debug_loc:0000000000000363 .LLST64
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5864   .debug_loc:0000000000000377 .LLST65
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1536   .text.vPortSetupTimerInterrupt:000000000000014e .LBB329
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1547   .text.vPortSetupTimerInterrupt:000000000000015a .LBE329
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1562   .text.vPortSetupTimerInterrupt:0000000000000162 .LBB331
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1569   .text.vPortSetupTimerInterrupt:0000000000000166 .LBE331
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1582   .text.vPortSetupTimerInterrupt:0000000000000176 .LBB333
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1590   .text.vPortSetupTimerInterrupt:000000000000017a .LBE333
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5883   .debug_loc:000000000000039d .LLST66
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5890   .debug_loc:00000000000003b0 .LLST67
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1594   .text.vPortSetupTimerInterrupt:000000000000017a .LBB335
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1605   .text.vPortSetupTimerInterrupt:000000000000018e .LBE335
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5898   .debug_loc:00000000000003c4 .LLST68
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1264   .text.vPortSetupTimerInterrupt:000000000000003c .LVL77
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6690   .debug_str:0000000000000248 .LASF141
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:642    .text.vPortSuppressTicksAndSleep:0000000000000000 .LFB380
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1219   .text.vPortSuppressTicksAndSleep:000000000000026a .LFE380
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6664   .debug_str:0000000000000184 .LASF142
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5906   .debug_loc:00000000000003d8 .LLST14
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6980   .debug_str:0000000000000bb9 .LASF143
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5927   .debug_loc:0000000000000400 .LLST15
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6998   .debug_str:0000000000000c3c .LASF144
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5946   .debug_loc:0000000000000434 .LLST16
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6692   .debug_str:0000000000000263 .LASF145
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5961   .debug_loc:000000000000045d .LLST17
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6812   .debug_str:0000000000000705 .LASF146
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6992   .debug_str:0000000000000c11 .LASF147
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:686    .text.vPortSuppressTicksAndSleep:000000000000002e .LBB197
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:698    .text.vPortSuppressTicksAndSleep:0000000000000034 .LBE197
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:687    .text.vPortSuppressTicksAndSleep:000000000000002e .LBB198
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:697    .text.vPortSuppressTicksAndSleep:0000000000000034 .LBE198
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:707    .text.vPortSuppressTicksAndSleep:000000000000003e .LBB199
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:722    .text.vPortSuppressTicksAndSleep:0000000000000044 .LBE199
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:710    .text.vPortSuppressTicksAndSleep:000000000000003e .LBB201
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:720    .text.vPortSuppressTicksAndSleep:0000000000000044 .LBE201
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5968   .debug_loc:0000000000000470 .LLST18
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:743    .text.vPortSuppressTicksAndSleep:0000000000000058 .LBB202
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:785    .text.vPortSuppressTicksAndSleep:0000000000000094 .LBB206
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5976   .debug_loc:0000000000000484 .LLST19
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:5997   .debug_loc:00000000000004ac .LLST20
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6027   .debug_loc:00000000000004e4 .LLST21
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:844    .text.vPortSuppressTicksAndSleep:00000000000000d6 .LBB211
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:852    .text.vPortSuppressTicksAndSleep:00000000000000e2 .LBE211
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:857    .text.vPortSuppressTicksAndSleep:00000000000000e6 .LBB213
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:866    .text.vPortSuppressTicksAndSleep:00000000000000f4 .LBE213
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:869    .text.vPortSuppressTicksAndSleep:00000000000000f4 .LBB215
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:880    .text.vPortSuppressTicksAndSleep:0000000000000108 .LBE215
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6048   .debug_loc:000000000000050c .LLST22
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:907    .text.vPortSuppressTicksAndSleep:0000000000000126 .LBB217
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:930    .text.vPortSuppressTicksAndSleep:0000000000000130 .LBE217
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:910    .text.vPortSuppressTicksAndSleep:0000000000000126 .LBB219
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:920    .text.vPortSuppressTicksAndSleep:000000000000012c .LBE219
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6056   .debug_loc:0000000000000520 .LLST23
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:944    .text.vPortSuppressTicksAndSleep:0000000000000142 .LBB220
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:956    .text.vPortSuppressTicksAndSleep:0000000000000148 .LBE220
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:945    .text.vPortSuppressTicksAndSleep:0000000000000142 .LBB221
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:955    .text.vPortSuppressTicksAndSleep:0000000000000148 .LBE221
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6064   .debug_loc:0000000000000534 .LLST24
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:964    .text.vPortSuppressTicksAndSleep:000000000000014c .LBB222
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:973    .text.vPortSuppressTicksAndSleep:0000000000000150 .LBE222
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:975    .text.vPortSuppressTicksAndSleep:0000000000000150 .LBB224
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:984    .text.vPortSuppressTicksAndSleep:0000000000000152 .LBE224
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:986    .text.vPortSuppressTicksAndSleep:0000000000000152 .LBB226
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1002   .text.vPortSuppressTicksAndSleep:0000000000000156 .LBE226
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:989    .text.vPortSuppressTicksAndSleep:0000000000000152 .LBB228
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1000   .text.vPortSuppressTicksAndSleep:0000000000000156 .LBE228
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6072   .debug_loc:0000000000000548 .LLST25
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1004   .text.vPortSuppressTicksAndSleep:0000000000000156 .LBB229
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1014   .text.vPortSuppressTicksAndSleep:0000000000000166 .LBE229
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6080   .debug_loc:000000000000055c .LLST26
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1016   .text.vPortSuppressTicksAndSleep:0000000000000166 .LBB231
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1024   .text.vPortSuppressTicksAndSleep:000000000000016e .LBE231
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1051   .text.vPortSuppressTicksAndSleep:0000000000000198 .LBB233
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1062   .text.vPortSuppressTicksAndSleep:00000000000001ac .LBE233
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6088   .debug_loc:0000000000000570 .LLST27
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1084   .text.vPortSuppressTicksAndSleep:00000000000001c0 .LBB236
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1091   .text.vPortSuppressTicksAndSleep:00000000000001c8 .LBE236
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1098   .text.vPortSuppressTicksAndSleep:00000000000001ce .LBB238
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1106   .text.vPortSuppressTicksAndSleep:00000000000001d6 .LBE238
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1143   .text.vPortSuppressTicksAndSleep:000000000000020e .LBB240
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6096   .debug_loc:0000000000000584 .LLST28
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6117   .debug_loc:00000000000005ac .LLST29
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6138   .debug_loc:00000000000005d4 .LLST30
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:702    .text.vPortSuppressTicksAndSleep:000000000000003c .LVL41
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:739    .text.vPortSuppressTicksAndSleep:0000000000000056 .LVL44
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:898    .text.vPortSuppressTicksAndSleep:000000000000011e .LVL55
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:934    .text.vPortSuppressTicksAndSleep:000000000000013a .LVL58
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1049   .text.vPortSuppressTicksAndSleep:0000000000000198 .LVL64
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1065   .text.vPortSuppressTicksAndSleep:00000000000001b4 .LVL66
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1141   .text.vPortSuppressTicksAndSleep:000000000000020e .LVL71
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6988   .debug_str:0000000000000bf9 .LASF148
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:510    .text.eclic_mtip_handler:0000000000000000 .LFB379
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:634    .text.eclic_mtip_handler:000000000000009e .LFE379
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:529    .text.eclic_mtip_handler:0000000000000028 .LBB189
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6159   .debug_loc:00000000000005fc .LLST10
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6189   .debug_loc:0000000000000634 .LLST11
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:592    .text.eclic_mtip_handler:000000000000007c .LBB192
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:612    .text.eclic_mtip_handler:0000000000000088 .LBE192
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6210   .debug_loc:000000000000065c .LLST12
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:595    .text.eclic_mtip_handler:000000000000007c .LBB194
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:603    .text.eclic_mtip_handler:0000000000000084 .LBE194
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6218   .debug_loc:0000000000000670 .LLST13
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:518    .text.eclic_mtip_handler:0000000000000010 .LVL27
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:521    .text.eclic_mtip_handler:0000000000000018 .LVL28
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:584    .text.eclic_mtip_handler:0000000000000072 .LVL34
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:589    .text.eclic_mtip_handler:000000000000007c .LVL35
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6940   .debug_str:0000000000000aa4 .LASF149
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:453    .text.xPortTaskSwitch:0000000000000000 .LFB378
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:503    .text.xPortTaskSwitch:000000000000003a .LFE378
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:463    .text.xPortTaskSwitch:0000000000000010 .LBB183
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:472    .text.xPortTaskSwitch:000000000000001e .LBE183
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:477    .text.xPortTaskSwitch:0000000000000026 .LBB185
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:497    .text.xPortTaskSwitch:0000000000000032 .LBE185
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6226   .debug_loc:0000000000000684 .LLST8
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:480    .text.xPortTaskSwitch:0000000000000026 .LBB187
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:488    .text.xPortTaskSwitch:000000000000002e .LBE187
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6234   .debug_loc:0000000000000698 .LLST9
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:461    .text.xPortTaskSwitch:0000000000000010 .LVL23
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:475    .text.xPortTaskSwitch:0000000000000026 .LVL24
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7012   .debug_str:0000000000000ca7 .LASF150
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:393    .text.vPortAssert:0000000000000000 .LFB377
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:446    .text.vPortAssert:0000000000000020 .LFE377
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6242   .debug_loc:00000000000006ac .LLST6
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:407    .text.vPortAssert:0000000000000012 .LBB177
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6260   .debug_loc:00000000000006d8 .LLST7
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:406    .text.vPortAssert:0000000000000012 .LVL20
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6776   .debug_str:00000000000005ce .LASF220
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:377    .text.vPortInCritical:0000000000000000 .LFB376
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:386    .text.vPortInCritical:000000000000000a .LFE376
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6948   .debug_str:0000000000000acf .LASF151
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:329    .text.vPortExitCritical:0000000000000000 .LFB375
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:370    .text.vPortExitCritical:000000000000001e .LFE375
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:345    .text.vPortExitCritical:0000000000000010 .LBB173
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:366    .text.vPortExitCritical:000000000000001c .LBE173
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6268   .debug_loc:00000000000006ec .LLST4
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:348    .text.vPortExitCritical:0000000000000010 .LBB175
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:356    .text.vPortExitCritical:0000000000000018 .LBE175
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6276   .debug_loc:0000000000000700 .LLST5
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6986   .debug_str:0000000000000be6 .LASF152
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:299    .text.vPortEnterCritical:0000000000000000 .LFB374
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:322    .text.vPortEnterCritical:0000000000000026 .LFE374
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:307    .text.vPortEnterCritical:0000000000000010 .LVL15
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6850   .debug_str:0000000000000834 .LASF221
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:285    .text.vPortEndScheduler:0000000000000000 .LFB373
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:292    .text.vPortEndScheduler:0000000000000002 .LFE373
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6708   .debug_str:00000000000002f0 .LASF161
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1639   .text.xPortStartScheduler:0000000000000000 .LFB372
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1745   .text.xPortStartScheduler:000000000000007a .LFE372
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1648   .text.xPortStartScheduler:0000000000000008 .LBB344
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1702   .text.xPortStartScheduler:000000000000003a .LBE344
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6284   .debug_loc:0000000000000714 .LLST69
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6317   .debug_loc:0000000000000749 .LLST70
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6330   .debug_loc:0000000000000762 .LLST71
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6337   .debug_loc:0000000000000775 .LLST72
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6348   .debug_loc:000000000000078c .LLST73
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6356   .debug_loc:00000000000007a0 .LLST74
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1651   .text.xPortStartScheduler:0000000000000008 .LBB346
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1709   .text.xPortStartScheduler:0000000000000042 .LBB350
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1721   .text.xPortStartScheduler:0000000000000048 .LBE350
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1710   .text.xPortStartScheduler:0000000000000042 .LBB351
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1720   .text.xPortStartScheduler:0000000000000048 .LBE351
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1724   .text.xPortStartScheduler:0000000000000050 .LVL116
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1731   .text.xPortStartScheduler:0000000000000060 .LVL117
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1734   .text.xPortStartScheduler:0000000000000068 .LVL118
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1737   .text.xPortStartScheduler:0000000000000070 .LVL119
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6926   .debug_str:0000000000000a34 .LASF172
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6890   .debug_str:0000000000000942 .LASF167
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6902   .debug_str:000000000000098f .LASF154
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6792   .debug_str:0000000000000661 .LASF155
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6740   .debug_str:00000000000003bf .LASF156
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6974   .debug_str:0000000000000b9b .LASF157
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6920   .debug_str:0000000000000a09 .LASF158
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6632   .debug_str:0000000000000094 .LASF159
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6882   .debug_str:000000000000090b .LASF222
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:47     .text.prvTaskExitError:0000000000000000 .LFB370
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:113    .text.prvTaskExitError:000000000000002e .LFE370
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6612   .debug_str:0000000000000007 .LASF160
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:64     .text.prvTaskExitError:0000000000000014 .LBB155
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:62     .text.prvTaskExitError:0000000000000014 .LVL2
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6640   .debug_str:00000000000000c7 .LASF162
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:236    .text.pxPortInitialiseStack:0000000000000000 .LFB369
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:278    .text.pxPortInitialiseStack:0000000000000024 .LFE369
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6864   .debug_str:00000000000008a2 .LASF163
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6369   .debug_loc:00000000000007b9 .LLST3
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6896   .debug_str:0000000000000973 .LASF164
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6654   .debug_str:0000000000000135 .LASF165
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6942   .debug_str:0000000000000ab4 .LASF166
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:205    .text.portYIELD:0000000000000000 .LFB368
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:229    .text.portYIELD:0000000000000016 .LFE368
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:209    .text.portYIELD:0000000000000000 .LBB171
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:219    .text.portYIELD:0000000000000010 .LBE171
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6856   .debug_str:0000000000000867 .LASF223
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6622   .debug_str:0000000000000051 .LASF168
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6842   .debug_str:00000000000007e9 .LASF169
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:120    .text.ulPortRaiseBASEPRI:0000000000000000 .LFB366
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:168    .text.ulPortRaiseBASEPRI:000000000000001e .LFE366
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6614   .debug_str:000000000000000f .LASF170
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:125    .text.ulPortRaiseBASEPRI:0000000000000000 .LBB161
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:150    .text.ulPortRaiseBASEPRI:0000000000000014 .LBB167
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:157    .text.ulPortRaiseBASEPRI:0000000000000018 .LBE167
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6416   .debug_loc:000000000000082a .LLST1
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6806   .debug_str:00000000000006ca .LASF171
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:14     .text.vPortRaiseBASEPRI:0000000000000000 .LFB365
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:41     .text.vPortRaiseBASEPRI:0000000000000016 .LFE365
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:22     .text.vPortRaiseBASEPRI:0000000000000008 .LBB153
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:31     .text.vPortRaiseBASEPRI:0000000000000010 .LBE153
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6423   .debug_loc:000000000000083d .LLST0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7050   .debug_str:0000000000000e91 .LASF173
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6924   .debug_str:0000000000000a2a .LASF174
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6828   .debug_str:000000000000078e .LASF175
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7054   .debug_str:0000000000000ead .LASF176
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7004   .debug_str:0000000000000c73 .LASF177
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6824   .debug_str:000000000000076b .LASF178
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6644   .debug_str:00000000000000ea .LASF179
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6758   .debug_str:0000000000000533 .LASF180
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6820   .debug_str:000000000000074d .LASF182
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6726   .debug_str:0000000000000377 .LASF181
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6810   .debug_str:00000000000006ef .LASF195
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6786   .debug_str:000000000000061b .LASF183
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6754   .debug_str:000000000000050c .LASF184
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6648   .debug_str:000000000000010f .LASF186
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6880   .debug_str:0000000000000904 .LASF187
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6878   .debug_str:00000000000008fb .LASF188
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6620   .debug_str:000000000000003e .LASF189
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6956   .debug_str:0000000000000b1e .LASF190
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7018   .debug_str:0000000000000ccf .LASF191
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7002   .debug_str:0000000000000c61 .LASF192
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6922   .debug_str:0000000000000a17 .LASF193
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6618   .debug_str:000000000000002c .LASF194
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6958   .debug_str:0000000000000b31 .LASF196
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6682   .debug_str:00000000000001f6 .LASF197
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6788   .debug_str:0000000000000631 .LASF198
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6784   .debug_str:0000000000000611 .LASF199
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6734   .debug_str:000000000000039f .LASF200
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6676   .debug_str:00000000000001d6 .LASF201
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6870   .debug_str:00000000000008cf .LASF202
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6858   .debug_str:0000000000000877 .LASF203
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:175    .text.vPortSetBASEPRI:0000000000000000 .LFB367
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:198    .text.vPortSetBASEPRI:000000000000000e .LFE367
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:180    .text.vPortSetBASEPRI:0000000000000000 .LBB169
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:188    .text.vPortSetBASEPRI:0000000000000008 .LBE169
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6430   .debug_loc:0000000000000850 .LLST2
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6610   .debug_str:0000000000000000 .LASF204
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6668   .debug_str:00000000000001aa .LASF224
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6660   .debug_str:0000000000000155 .LASF206
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6636   .debug_str:00000000000000a3 .LASF207
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6950   .debug_str:0000000000000ae1 .LASF208
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6688   .debug_str:0000000000000229 .LASF209
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6764   .debug_str:0000000000000576 .LASF210
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7028   .debug_str:0000000000000d72 .LASF211
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6930   .debug_str:0000000000000a64 .LASF212
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6720   .debug_str:0000000000000351 .LASF213
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:7040   .debug_str:0000000000000e45 .LASF214
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:6760   .debug_str:0000000000000542 .LASF215
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1774   .text.vApplicationStackOverflowHook:0000000000000000 .LVL121
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1780   .text.vApplicationStackOverflowHook:000000000000000c .LVL122
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1279   .text.vPortSetupTimerInterrupt:0000000000000056 .LVL78
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1290   .text.vPortSetupTimerInterrupt:0000000000000062 .LVL79
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1316   .text.vPortSetupTimerInterrupt:0000000000000072 .LVL80
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1331   .text.vPortSetupTimerInterrupt:000000000000008e .LVL81
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1391   .text.vPortSetupTimerInterrupt:00000000000000ba .LVL88
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1349   .text.vPortSetupTimerInterrupt:000000000000009a .LVL82
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1357   .text.vPortSetupTimerInterrupt:000000000000009c .LVL83
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1371   .text.vPortSetupTimerInterrupt:00000000000000a6 .LVL85
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1615   .text.vPortSetupTimerInterrupt:0000000000000196 .LVL109
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1362   .text.vPortSetupTimerInterrupt:00000000000000a2 .LVL84
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1378   .text.vPortSetupTimerInterrupt:00000000000000aa .LVL86
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1384   .text.vPortSetupTimerInterrupt:00000000000000b6 .LVL87
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1409   .text.vPortSetupTimerInterrupt:00000000000000ce .LVL89
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1422   .text.vPortSetupTimerInterrupt:00000000000000da .LVL90
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1480   .text.vPortSetupTimerInterrupt:0000000000000106 .LVL97
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1438   .text.vPortSetupTimerInterrupt:00000000000000e6 .LVL91
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1446   .text.vPortSetupTimerInterrupt:00000000000000e8 .LVL92
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1460   .text.vPortSetupTimerInterrupt:00000000000000f2 .LVL94
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1451   .text.vPortSetupTimerInterrupt:00000000000000ee .LVL93
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1467   .text.vPortSetupTimerInterrupt:00000000000000f6 .LVL95
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1473   .text.vPortSetupTimerInterrupt:0000000000000102 .LVL96
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1500   .text.vPortSetupTimerInterrupt:0000000000000122 .LVL98
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1512   .text.vPortSetupTimerInterrupt:0000000000000132 .LVL99
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1529   .text.vPortSetupTimerInterrupt:000000000000014e .LVL100
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1587   .text.vPortSetupTimerInterrupt:000000000000017a .LVL107
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1545   .text.vPortSetupTimerInterrupt:000000000000015a .LVL101
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1553   .text.vPortSetupTimerInterrupt:000000000000015c .LVL102
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1567   .text.vPortSetupTimerInterrupt:0000000000000166 .LVL104
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1558   .text.vPortSetupTimerInterrupt:0000000000000162 .LVL103
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1574   .text.vPortSetupTimerInterrupt:000000000000016a .LVL105
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1580   .text.vPortSetupTimerInterrupt:0000000000000176 .LVL106
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1603   .text.vPortSetupTimerInterrupt:000000000000018e .LVL108
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:645    .text.vPortSuppressTicksAndSleep:0000000000000000 .LVL39
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:768    .text.vPortSuppressTicksAndSleep:000000000000007e .LVL45
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:789    .text.vPortSuppressTicksAndSleep:0000000000000098 .LVL47
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1041   .text.vPortSuppressTicksAndSleep:000000000000018e .LVL63
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1067   .text.vPortSuppressTicksAndSleep:00000000000001b6 .LVL67
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1130   .text.vPortSuppressTicksAndSleep:00000000000001fa .LVL69
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1179   .text.vPortSuppressTicksAndSleep:0000000000000246 .LVL75
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1193   .text.vPortSuppressTicksAndSleep:0000000000000252 .LVL76
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1134   .text.vPortSuppressTicksAndSleep:0000000000000200 .LVL70
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:712    .text.vPortSuppressTicksAndSleep:000000000000003e .LVL42
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:734    .text.vPortSuppressTicksAndSleep:000000000000004e .LVL43
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:796    .text.vPortSuppressTicksAndSleep:000000000000009e .LVL48
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:838    .text.vPortSuppressTicksAndSleep:00000000000000d6 .LVL52
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1079   .text.vPortSuppressTicksAndSleep:00000000000001c0 .LVL68
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:818    .text.vPortSuppressTicksAndSleep:00000000000000be .LVL50
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:827    .text.vPortSuppressTicksAndSleep:00000000000000ca .LVL51
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:807    .text.vPortSuppressTicksAndSleep:00000000000000ac .LVL49
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:868    .text.vPortSuppressTicksAndSleep:00000000000000f4 .LVL53
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:878    .text.vPortSuppressTicksAndSleep:0000000000000108 .LVL54
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:912    .text.vPortSuppressTicksAndSleep:0000000000000126 .LVL56
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:926    .text.vPortSuppressTicksAndSleep:0000000000000130 .LVL57
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:947    .text.vPortSuppressTicksAndSleep:0000000000000142 .LVL59
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:997    .text.vPortSuppressTicksAndSleep:0000000000000156 .LVL61
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:991    .text.vPortSuppressTicksAndSleep:0000000000000152 .LVL60
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1012   .text.vPortSuppressTicksAndSleep:0000000000000166 .LVL62
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1060   .text.vPortSuppressTicksAndSleep:00000000000001ac .LVL65
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1150   .text.vPortSuppressTicksAndSleep:0000000000000216 .LVL72
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1170   .text.vPortSuppressTicksAndSleep:000000000000023a .LVL74
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1159   .text.vPortSuppressTicksAndSleep:0000000000000228 .LVL73
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:536    .text.eclic_mtip_handler:0000000000000030 .LVL29
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:556    .text.eclic_mtip_handler:0000000000000052 .LVL31
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:565    .text.eclic_mtip_handler:000000000000005e .LVL32
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:576    .text.eclic_mtip_handler:000000000000006a .LVL33
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:618    .text.eclic_mtip_handler:0000000000000090 .LVL38
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:544    .text.eclic_mtip_handler:000000000000003e .LVL30
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:609    .text.eclic_mtip_handler:0000000000000088 .LVL37
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:601    .text.eclic_mtip_handler:0000000000000084 .LVL36
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:494    .text.xPortTaskSwitch:0000000000000032 .LVL26
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:486    .text.xPortTaskSwitch:000000000000002e .LVL25
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:396    .text.vPortAssert:0000000000000000 .LVL19
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:438    .text.vPortAssert:000000000000001e .LVL22
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:423    .text.vPortAssert:0000000000000014 .LVL21
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:344    .text.vPortExitCritical:0000000000000010 .LVL16
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:362    .text.vPortExitCritical:000000000000001c .LVL18
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:354    .text.vPortExitCritical:0000000000000018 .LVL17
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1647   .text.xPortStartScheduler:0000000000000008 .LVL110
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1675   .text.xPortStartScheduler:000000000000001c .LVL113
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1685   .text.xPortStartScheduler:0000000000000020 .LVL114
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1657   .text.xPortStartScheduler:0000000000000010 .LVL111
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1672   .text.xPortStartScheduler:0000000000000016 .LVL112
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:239    .text.pxPortInitialiseStack:0000000000000000 .LVL8
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:248    .text.pxPortInitialiseStack:000000000000000c .LVL9
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:256    .text.pxPortInitialiseStack:0000000000000016 .LVL10
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:261    .text.pxPortInitialiseStack:0000000000000018 .LVL11
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:266    .text.pxPortInitialiseStack:000000000000001a .LVL12
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:271    .text.pxPortInitialiseStack:000000000000001e .LVL13
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:275    .text.pxPortInitialiseStack:0000000000000022 .LVL14
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:146    .text.ulPortRaiseBASEPRI:0000000000000014 .LVL4
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:155    .text.ulPortRaiseBASEPRI:0000000000000018 .LVL5
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:21     .text.vPortRaiseBASEPRI:0000000000000008 .LVL0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:29     .text.vPortRaiseBASEPRI:0000000000000010 .LVL1
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:178    .text.vPortSetBASEPRI:0000000000000000 .LVL6
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:186    .text.vPortSetBASEPRI:0000000000000008 .LVL7
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1840   .debug_info:0000000000000000 .Ldebug_info0
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:73     .text.prvTaskExitError:0000000000000016 .LBE155
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:89     .text.prvTaskExitError:0000000000000024 .LBB160
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:111    .text.prvTaskExitError:000000000000002e .LBE160
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:66     .text.prvTaskExitError:0000000000000014 .LBB157
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:71     .text.prvTaskExitError:0000000000000016 .LBE157
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:92     .text.prvTaskExitError:0000000000000024 .LBB158
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:101    .text.prvTaskExitError:0000000000000028 .LBE158
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:131    .text.ulPortRaiseBASEPRI:0000000000000004 .LBE161
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:134    .text.ulPortRaiseBASEPRI:0000000000000008 .LBB165
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:139    .text.ulPortRaiseBASEPRI:000000000000000c .LBE165
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:142    .text.ulPortRaiseBASEPRI:0000000000000010 .LBB166
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:148    .text.ulPortRaiseBASEPRI:0000000000000014 .LBE166
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:415    .text.vPortAssert:0000000000000014 .LBE177
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:418    .text.vPortAssert:0000000000000014 .LBB182
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:444    .text.vPortAssert:0000000000000020 .LBE182
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:409    .text.vPortAssert:0000000000000012 .LBB179
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:413    .text.vPortAssert:0000000000000014 .LBE179
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:421    .text.vPortAssert:0000000000000014 .LBB180
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:430    .text.vPortAssert:0000000000000018 .LBE180
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:580    .text.eclic_mtip_handler:000000000000006a .LBE189
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:621    .text.eclic_mtip_handler:0000000000000090 .LBB196
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:632    .text.eclic_mtip_handler:000000000000009e .LBE196
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:750    .text.vPortSuppressTicksAndSleep:0000000000000060 .LBE202
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:753    .text.vPortSuppressTicksAndSleep:0000000000000064 .LBB205
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:759    .text.vPortSuppressTicksAndSleep:000000000000006c .LBE205
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:793    .text.vPortSuppressTicksAndSleep:000000000000009c .LBE206
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:797    .text.vPortSuppressTicksAndSleep:000000000000009e .LBB210
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:842    .text.vPortSuppressTicksAndSleep:00000000000000d6 .LBE210
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1069   .text.vPortSuppressTicksAndSleep:00000000000001b6 .LBB235
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1082   .text.vPortSuppressTicksAndSleep:00000000000001c0 .LBE235
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1182   .text.vPortSuppressTicksAndSleep:0000000000000246 .LBE240
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1195   .text.vPortSuppressTicksAndSleep:0000000000000252 .LBB243
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1217   .text.vPortSuppressTicksAndSleep:000000000000026a .LBE243
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1293   .text.vPortSetupTimerInterrupt:0000000000000062 .LBE288
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1295   .text.vPortSetupTimerInterrupt:0000000000000062 .LBB307
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1314   .text.vPortSetupTimerInterrupt:0000000000000072 .LBE307
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1317   .text.vPortSetupTimerInterrupt:0000000000000072 .LBB308
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1334   .text.vPortSetupTimerInterrupt:000000000000008e .LBE308
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1336   .text.vPortSetupTimerInterrupt:000000000000008e .LBB309
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1397   .text.vPortSetupTimerInterrupt:00000000000000ba .LBE309
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1399   .text.vPortSetupTimerInterrupt:00000000000000ba .LBB310
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1412   .text.vPortSetupTimerInterrupt:00000000000000ce .LBE310
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1618   .text.vPortSetupTimerInterrupt:0000000000000196 .LBB337
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1630   .text.vPortSetupTimerInterrupt:000000000000019e .LBE337
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1313   .text.vPortSetupTimerInterrupt:0000000000000072 .LBE291
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1619   .text.vPortSetupTimerInterrupt:0000000000000196 .LBB306
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1629   .text.vPortSetupTimerInterrupt:000000000000019e .LBE306
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1659   .text.xPortStartScheduler:0000000000000010 .LBE346
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1668   .text.xPortStartScheduler:0000000000000014 .LBB349
C:\Users\stapi\AppData\Local\Temp\ccVWpNDz.s:1677   .text.xPortStartScheduler:000000000000001c .LBE349

UNDEFINED SYMBOLS
__riscv_save_0
__riscv_restore_0
vTaskSwitchContext
systick_lock_release
SystemCoreClock
xTaskIncrementTick
__udivdi3
__riscv_save_4
eTaskConfirmSleepModeStatus
__riscv_restore_4
freertos_ready_to_sleep
freertos_pre_sleep_processing
freertos_post_sleep_processing
vTaskStepTick
systick_lock_acquire
__divdi3
prvPortStartFirstTask
trace_dma_print
printf
